//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sitecore.Commerce.Nop.Products.CommerceProductService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommerceProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SynchronizeProduct", ReplyAction="http://tempuri.org/IProductService/SynchronizeProductResponse")]
        void SynchronizeProduct(string externalProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SynchronizeProduct", ReplyAction="http://tempuri.org/IProductService/SynchronizeProductResponse")]
        System.Threading.Tasks.Task SynchronizeProductAsync(string externalProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SynchronizeProducts", ReplyAction="http://tempuri.org/IProductService/SynchronizeProductsResponse")]
        void SynchronizeProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SynchronizeProducts", ReplyAction="http://tempuri.org/IProductService/SynchronizeProductsResponse")]
        System.Threading.Tasks.Task SynchronizeProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SynchronizeProductList", ReplyAction="http://tempuri.org/IProductService/SynchronizeProductListResponse")]
        void SynchronizeProductList(string[] externalProductIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SynchronizeProductList", ReplyAction="http://tempuri.org/IProductService/SynchronizeProductListResponse")]
        System.Threading.Tasks.Task SynchronizeProductListAsync(string[] externalProductIds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : Sitecore.Commerce.Nop.Products.CommerceProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<Sitecore.Commerce.Nop.Products.CommerceProductService.IProductService>, Sitecore.Commerce.Nop.Products.CommerceProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SynchronizeProduct(string externalProductId) {
            base.Channel.SynchronizeProduct(externalProductId);
        }
        
        public System.Threading.Tasks.Task SynchronizeProductAsync(string externalProductId) {
            return base.Channel.SynchronizeProductAsync(externalProductId);
        }
        
        public void SynchronizeProducts() {
            base.Channel.SynchronizeProducts();
        }
        
        public System.Threading.Tasks.Task SynchronizeProductsAsync() {
            return base.Channel.SynchronizeProductsAsync();
        }
        
        public void SynchronizeProductList(string[] externalProductIds) {
            base.Channel.SynchronizeProductList(externalProductIds);
        }
        
        public System.Threading.Tasks.Task SynchronizeProductListAsync(string[] externalProductIds) {
            return base.Channel.SynchronizeProductListAsync(externalProductIds);
        }
    }
}
