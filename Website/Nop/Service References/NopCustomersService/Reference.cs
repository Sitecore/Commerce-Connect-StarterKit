//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerModel", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Sitecore.Commerce.Common.Model" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CustomerModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel BillingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CustomerGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegisteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel ShippingAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminContent {
            get {
                return this.AdminContentField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminContentField, value) != true)) {
                    this.AdminContentField = value;
                    this.RaisePropertyChanged("AdminContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel BillingAddress {
            get {
                return this.BillingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAddressField, value) != true)) {
                    this.BillingAddressField = value;
                    this.RaisePropertyChanged("BillingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOnUtc {
            get {
                return this.CreatedOnUtcField;
            }
            set {
                if ((this.CreatedOnUtcField.Equals(value) != true)) {
                    this.CreatedOnUtcField = value;
                    this.RaisePropertyChanged("CreatedOnUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CustomerGuid {
            get {
                return this.CustomerGuidField;
            }
            set {
                if ((this.CustomerGuidField.Equals(value) != true)) {
                    this.CustomerGuidField = value;
                    this.RaisePropertyChanged("CustomerGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegistered {
            get {
                return this.IsRegisteredField;
            }
            set {
                if ((this.IsRegisteredField.Equals(value) != true)) {
                    this.IsRegisteredField = value;
                    this.RaisePropertyChanged("IsRegistered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel ShippingAddress {
            get {
                return this.ShippingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddressField, value) != true)) {
                    this.ShippingAddressField = value;
                    this.RaisePropertyChanged("ShippingAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressModel", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Sitecore.Commerce.Common.Model" +
        "s")]
    [System.SerializableAttribute()]
    public partial class AddressModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryThreeLetterIsoCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryTwoLetterIsoCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateProvinceAbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipPostalCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryThreeLetterIsoCode {
            get {
                return this.CountryThreeLetterIsoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryThreeLetterIsoCodeField, value) != true)) {
                    this.CountryThreeLetterIsoCodeField = value;
                    this.RaisePropertyChanged("CountryThreeLetterIsoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryTwoLetterIsoCode {
            get {
                return this.CountryTwoLetterIsoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryTwoLetterIsoCodeField, value) != true)) {
                    this.CountryTwoLetterIsoCodeField = value;
                    this.RaisePropertyChanged("CountryTwoLetterIsoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOnUtc {
            get {
                return this.CreatedOnUtcField;
            }
            set {
                if ((this.CreatedOnUtcField.Equals(value) != true)) {
                    this.CreatedOnUtcField = value;
                    this.RaisePropertyChanged("CreatedOnUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNumber {
            get {
                return this.FaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumberField, value) != true)) {
                    this.FaxNumberField = value;
                    this.RaisePropertyChanged("FaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateProvinceAbbreviation {
            get {
                return this.StateProvinceAbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.StateProvinceAbbreviationField, value) != true)) {
                    this.StateProvinceAbbreviationField = value;
                    this.RaisePropertyChanged("StateProvinceAbbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipPostalCode {
            get {
                return this.ZipPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipPostalCodeField, value) != true)) {
                    this.ZipPostalCodeField = value;
                    this.RaisePropertyChanged("ZipPostalCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Sitecore.Commerce.Common.Model" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse))]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArrayOfAddressModelResponse", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Sitecore.Commerce.Common.Model" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ArrayOfAddressModelResponse : Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NopCustomersService.ICustomersService")]
    public interface ICustomersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/CreateCustomer", ReplyAction="http://tempuri.org/ICustomersService/CreateCustomerResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel CreateCustomer(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel customerModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/CreateCustomer", ReplyAction="http://tempuri.org/ICustomersService/CreateCustomerResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel> CreateCustomerAsync(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel customerModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/GetCustomer", ReplyAction="http://tempuri.org/ICustomersService/GetCustomerResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel GetCustomer(System.Guid customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/GetCustomer", ReplyAction="http://tempuri.org/ICustomersService/GetCustomerResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel> GetCustomerAsync(System.Guid customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/AddAddresses", ReplyAction="http://tempuri.org/ICustomersService/AddAddressesResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse AddAddresses(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/AddAddresses", ReplyAction="http://tempuri.org/ICustomersService/AddAddressesResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse> AddAddressesAsync(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/RemoveAddresses", ReplyAction="http://tempuri.org/ICustomersService/RemoveAddressesResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response RemoveAddresses(System.Guid customerId, string[] addressIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/RemoveAddresses", ReplyAction="http://tempuri.org/ICustomersService/RemoveAddressesResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response> RemoveAddressesAsync(System.Guid customerId, string[] addressIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/UpdateAddresses", ReplyAction="http://tempuri.org/ICustomersService/UpdateAddressesResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response UpdateAddresses(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/UpdateAddresses", ReplyAction="http://tempuri.org/ICustomersService/UpdateAddressesResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response> UpdateAddressesAsync(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/GetAllAddresses", ReplyAction="http://tempuri.org/ICustomersService/GetAllAddressesResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse GetAllAddresses(System.Guid customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomersService/GetAllAddresses", ReplyAction="http://tempuri.org/ICustomersService/GetAllAddressesResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse> GetAllAddressesAsync(System.Guid customerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomersServiceChannel : Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ICustomersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomersServiceClient : System.ServiceModel.ClientBase<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ICustomersService>, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ICustomersService {
        
        public CustomersServiceClient() {
        }
        
        public CustomersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel CreateCustomer(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel customerModel) {
            return base.Channel.CreateCustomer(customerId, customerModel);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel> CreateCustomerAsync(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel customerModel) {
            return base.Channel.CreateCustomerAsync(customerId, customerModel);
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel GetCustomer(System.Guid customerId) {
            return base.Channel.GetCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.CustomerModel> GetCustomerAsync(System.Guid customerId) {
            return base.Channel.GetCustomerAsync(customerId);
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse AddAddresses(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels) {
            return base.Channel.AddAddresses(customerId, addressModels);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse> AddAddressesAsync(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels) {
            return base.Channel.AddAddressesAsync(customerId, addressModels);
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response RemoveAddresses(System.Guid customerId, string[] addressIds) {
            return base.Channel.RemoveAddresses(customerId, addressIds);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response> RemoveAddressesAsync(System.Guid customerId, string[] addressIds) {
            return base.Channel.RemoveAddressesAsync(customerId, addressIds);
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response UpdateAddresses(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels) {
            return base.Channel.UpdateAddresses(customerId, addressModels);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.Response> UpdateAddressesAsync(System.Guid customerId, Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.AddressModel[] addressModels) {
            return base.Channel.UpdateAddressesAsync(customerId, addressModels);
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse GetAllAddresses(System.Guid customerId) {
            return base.Channel.GetAllAddresses(customerId);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopCustomersService.ArrayOfAddressModelResponse> GetAllAddressesAsync(System.Guid customerId) {
            return base.Channel.GetAllAddressesAsync(customerId);
        }
    }
}
