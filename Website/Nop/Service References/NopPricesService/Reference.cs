//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright 2016 Sitecore Corporation A/S
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file 
// except in compliance with the License. You may obtain a copy of the License at
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the 
// License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
// either express or implied. See the License for the specific language governing permissions 
// and limitations under the License.
// ---------------------------------------------------------------------
namespace Sitecore.Commerce.Connectors.NopCommerce.NopPricesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductPriceModel", Namespace="http://schemas.datacontract.org/2004/07/Nop.Plugin.Sitecore.Commerce.Prices.Model" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ProductPriceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkuField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIdField, value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sku {
            get {
                return this.SkuField;
            }
            set {
                if ((object.ReferenceEquals(this.SkuField, value) != true)) {
                    this.SkuField = value;
                    this.RaisePropertyChanged("Sku");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NopPricesService.IPricesService")]
    public interface IPricesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricesService/GetProductPrices", ReplyAction="http://tempuri.org/IPricesService/GetProductPricesResponse")]
        Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.ProductPriceModel[] GetProductPrices(string[] externalproductIds, string priceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricesService/GetProductPrices", ReplyAction="http://tempuri.org/IPricesService/GetProductPricesResponse")]
        System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.ProductPriceModel[]> GetProductPricesAsync(string[] externalproductIds, string priceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricesService/GetProductPrice", ReplyAction="http://tempuri.org/IPricesService/GetProductPriceResponse")]
        System.Nullable<decimal> GetProductPrice(string externalProductId, string priceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricesService/GetProductPrice", ReplyAction="http://tempuri.org/IPricesService/GetProductPriceResponse")]
        System.Threading.Tasks.Task<System.Nullable<decimal>> GetProductPriceAsync(string externalProductId, string priceType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPricesServiceChannel : Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.IPricesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PricesServiceClient : System.ServiceModel.ClientBase<Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.IPricesService>, Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.IPricesService {
        
        public PricesServiceClient() {
        }
        
        public PricesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PricesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PricesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PricesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.ProductPriceModel[] GetProductPrices(string[] externalproductIds, string priceType) {
            return base.Channel.GetProductPrices(externalproductIds, priceType);
        }
        
        public System.Threading.Tasks.Task<Sitecore.Commerce.Connectors.NopCommerce.NopPricesService.ProductPriceModel[]> GetProductPricesAsync(string[] externalproductIds, string priceType) {
            return base.Channel.GetProductPricesAsync(externalproductIds, priceType);
        }
        
        public System.Nullable<decimal> GetProductPrice(string externalProductId, string priceType) {
            return base.Channel.GetProductPrice(externalProductId, priceType);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<decimal>> GetProductPriceAsync(string externalProductId, string priceType) {
            return base.Channel.GetProductPriceAsync(externalProductId, priceType);
        }
    }
}
