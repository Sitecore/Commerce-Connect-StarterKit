<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Commerce</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData">
            <summary>
            Defines the CurrencyChosenAnalyticsData class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData">
            <summary>
            Defines the BaseAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.AddEntityToEventDictionary``1(``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Adds the entity to the event dictionary.
            </summary>
            <typeparam name="T">The base type of the entity.</typeparam>
            <param name="connectEntity">The entity.</param>
            <param name="data">The data.</param>
            <param name="baseTypeKey">The base type key.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetMandatoryCustomValueAsObject``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the mandatory custom value as object.
            </summary>
            <typeparam name="T">Object type.</typeparam>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value or null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetMandatoryCustomValueAsUInt(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the mandatory custom value as uint.
            </summary>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetMandatoryCustomValueAsBoolean(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the mandatory custom value as boolean.
            </summary>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetMandatoryCustomValueAsDecimal(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the mandatory custom value as decimal.
            </summary>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetMandatoryCustomValueAsInt32(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the mandatory custom value as int32.
            </summary>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetMandatoryCustomValueAsDouble(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the mandatory custom value as double.
            </summary>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.GetOptionalCustomValueAsObject``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the optional custom value as object.
            </summary>
            <typeparam name="T">Object type</typeparam>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.ServicePipelineArgs">
            <summary>
            Gets or sets the service pipeline arguments.
            </summary>
            <value>
            The service pipeline arguments.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BaseAnalyticsData.Custom">
            <summary>
            Gets or sets the custom class.
            </summary>
            <value>
            The custom.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CurrencyChosenAnalyticsData.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.RemoveExpiredBackInStockNotificationsAction">
            <summary>
            The automation action which removes expired entires from a user's out-of-stock notification list.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.RemoveExpiredBackInStockNotificationsAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.RemoveExpiredBackInStockNotificationsAction"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.RemoveExpiredBackInStockNotificationsAction.Execute(Sitecore.Analytics.Automation.AutomationActionContext)">
            <summary>
            Executes the action on the specified automation action context.
            </summary>
            <param name="context">The automation action context.</param>
            <returns>The result of action execution.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.RemoveExpiredBackInStockNotificationsAction.AutomationProvider">
            <summary>
            Gets the inventory automation provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction">
            <summary>
            The automation action which removes expired entires from a user's out-of-stock notification list.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.ProductsBackInStockVariable">
            <summary>
            The email message body variable token that indicates where the back-in-stock products table should be inserted.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.DefaultProductsIndexName">
            <summary>
            the default product index name
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.Execute(Sitecore.Analytics.Automation.AutomationActionContext)">
            <summary>
            Executes the action on the specified automation state context.
            </summary>
            <param name="context">The automation state context.</param>
            <returns>Result of action execution.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.SendBackInStockEmail(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Analytics.Automation.AutomationActionContext)">
            <summary>
              Sends back-in-stock email notifications.
            </summary>
            <param name="backInStockProducts">The list of <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects that represent the products that are now available for purchase.</param>
            <param name="context">The automation action context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.GetBackInStockProductsHtml(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Data.Items.Item)">
            <summary>
            Gets the HTML for the table that will be injected into the email message when a {{ProductsBackInStock}} token is present in the email message body.
            </summary>
            <param name="backInStockProducts">The list of <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects that represent the products that are now available for purchase.</param>
            <param name="action">The current action item.</param>
            <returns>The back-in-stock products table HTML.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.CreateTable(Sitecore.Data.Items.Item)">
            <summary>
            Createst the table that will display the back-in-stock products.
            </summary>
            <param name="action">The current action item being evaluated.</param>
            <returns>The table that will display the back-in-stock products.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.AddTableRow(System.Web.UI.WebControls.Table,Sitecore.Commerce.Entities.Inventory.StockNotificationRequest,Sitecore.Data.Items.Item)">
            <summary>
            Adds a table row to indicate that a product is back in stock.
            </summary>
            <param name="table">The table to populate.</param>
            <param name="notification">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> that identifies the product that is back in stock.</param>
            <param name="action">The current action item being evaluated.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.GetProductDisplayName(Sitecore.Commerce.Entities.Inventory.InventoryProduct,Sitecore.Data.Items.Item)">
            <summary>
            Gets the display name for a product.
            </summary>
            <param name="product">The product identifier.</param>
            <param name="action">The current action item being evaluated.</param>
            <returns>The display name for the product.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.AutomationProvider">
            <summary>
            Gets the inventory automation provider.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SendBackInStockNotificationEmailAction.ProductsIndexName">
            <summary>
            Gets the name of the products index.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome">
            <summary>
            Defines the TriggerCartAbandonedOutcome class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.Execute(Sitecore.Analytics.Automation.AutomationActionContext)">
            <summary>
            Executes the specified action.
            </summary>
            <param name="context">The context.</param>
            <returns>The AutomationActionResult result.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.RunAction(Sitecore.Analytics.Automation.AutomationActionContext,System.Guid,System.String,System.String,System.String)">
            <summary>
            Runs the action.
            </summary>
            <param name="context">The context.</param>
            <param name="contactId">The contact identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="eaPlanName">Name of the ea plan.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>
            The AutomationActionResult result.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.GetCart(System.String,System.String,System.String)">
            <summary>
            Gets the cart.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="userId">The user identifier.</param>
            <param name="externalId">The external identifier.</param>
            <returns>The cart if it was found; otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.GenerateOutcome(Sitecore.Analytics.Automation.AutomationActionContext,System.Guid,System.String,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Generates the outcome.
            </summary>
            <param name="context">The context.</param>
            <param name="contactId">The contact identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.CartServiceProvider">
            <summary>
            Gets or sets the cart service provider.
            </summary>
            <value>The cart service provider.</value>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.ContactFactory">
            <summary>
            Gets or sets the visitor factory.
            </summary>
            <value>The visitor factory.</value>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.TriggerCartAbandonedOutcome.EaPlanProvider">
            <summary>
            Gets or sets the ea plan provider.
            </summary>
            <value>
            The ea plan provider.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.AreProductsBackInStockCondition`1">
            <summary>
            Represents the "Has List of Visitor Notifications Expired" condition.
            This class is used to check if all of the back-in-stock notifications a user has requested have expired due to being past interest date.
            </summary>
            <typeparam name="T">
                The rule context.
            </typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.AreProductsBackInStockCondition`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.AreProductsBackInStockCondition`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.AreProductsBackInStockCondition`1.Execute(`0)">
            <summary>The execute.</summary>
            <param name="ruleContext">The rule context.</param>
            <returns>
                The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.AreProductsBackInStockCondition`1.AutomationProvider">
            <summary>
                Gets the inventory automation provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasListOfVisitorNotificationsExpiredCondition`1">
            <summary>
            Represents the "Has List of Visitor Notifications Expired" condition.
            This class is used to check if all of the back-in-stock notifications a user has requested have expired due to being past interest date.
            </summary>
            <typeparam name="T">
            The rule context.
            </typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasListOfVisitorNotificationsExpiredCondition`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasListOfVisitorNotificationsExpiredCondition`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasListOfVisitorNotificationsExpiredCondition`1.Execute(`0)">
            <summary>The execute.</summary>
            <param name="ruleContext">The rule context.</param>
            <returns>
            The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasListOfVisitorNotificationsExpiredCondition`1.AutomationProvider">
            <summary>
            Gets the inventory automation provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider">
            <summary>
            Helper class for inventory automation rules and conditions
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.CreateInitialWorkflowStateData(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest})">
            <summary>
            Creates the initial workflow state data for the Products Back In Stock engagement plan.
            </summary>
            <param name="productNotifications">The product notifications requested by the user.</param>
            <returns>the initial workflow state data.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetProductNotifications(Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Retrieves the product back-in-stock notifaction requests from the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <returns>The back-in-stock notification requests in the EAP state.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.UpdateProductNotifications(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest})">
            <summary>
            Updates the product back-in-stock notification requests in the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <param name="productNotifications">The updated list of product back-in-stock notification requests.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetExpiredNotifications(Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Retrieves expired back-in-stock notifaction requests from the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <returns>The expired back-in-stock notification requests in the EAP state.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.UpdateExpiredNotifications(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest})">
            <summary>
            Updates the expired product back-in-stock notification requests in the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <param name="expiredNotifications">The updated list of expired product back-in-stock notification requests.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetProductsBackInStock(Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Retrieves new back-in-stock products from the EAP state
            </summary>
            <param name="stateContext">The EAP state.</param>
            <returns>The new back-in-stock products in the EAP state.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.UpdateProductsBackInStock(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest})">
            <summary>
            Updates the new back-in-stock products in the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <param name="productsBackInStock">The updated list of new back-in-stock products.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.RemoveBackInStockProductsFromNotificationList(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest})">
            <summary>
            Removes all products from a notification list that are now back in stock.
            </summary>
            <param name="backInStockProducts">The products that are now back in stock.</param>
            <param name="productNotifications">The back-in-stock notifications requested by the user.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.FindNotification(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Commerce.Entities.Inventory.StockNotificationRequest)">
            <summary>
            Finds a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> from a list
            </summary>
            <param name="productNotifications">The list of notifications to search.</param>
            <param name="searchCriteria">The notification to find.</param>
            <returns>The stock notification, or null if it was not found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.RemoveNotification(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Commerce.Entities.Inventory.StockNotificationRequest)">
            <summary>
            Finds a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> from a list
            </summary>
            <param name="productNotifications">The list of notifications to search.</param>
            <param name="searchCriteria">The notification to find.</param>
            <returns>The stock notification, or null if it was not found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.RemoveExpiredNotifications(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest})">
            <summary>
            Removes expired back-in-stock notification requests that have expired.
            </summary>
            <param name="productNotifications">The back-in-stock notifiaction requests the user has subscribed to.</param>
            <returns>A list containing the IDs of the products that were removed from the user's notification requests.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetBackInStockProducts(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Gets the products from a product notification list that are now back in stock
            </summary>
            <param name="productNotifications">The products the user has requested to be notified about.</param>
            <param name="stateContext">The current automation state data.</param>
            <returns>A list containing the IDs of the products of interest that are now back in stock.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetAutomationStateContext(System.String,Sitecore.Data.ID)">
            <summary>
            Gets the auutomation state data row data for a contact.
            </summary>
            <param name="contactIdentifier">The identifier of the contact.</param>
            <param name="planId">The ID of the engagement plan whose automation state data will be retrieved.</param>
            <returns>The automation state data for the specified contact in the specified engagement plan.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetContact(System.String)">
            <summary>
            Retrieves a <see cref="T:Sitecore.Analytics.Tracking.Contact"/> by external user name.
            </summary>
            <param name="contactIdentifier">The contact identifier or external user name.</param>
            <returns>The requested <see cref="T:Sitecore.Analytics.Tracking.Contact"/> or null if it could not be found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetBackInStockProductsFromPageEventData(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Gets the products from a product notification list that are now back in stock based on page event data.
            </summary>
            <param name="productNotifications">The products the user has requested to be notified about.</param>
            <param name="stateContext">The current automation state data.</param>
            <returns>A list containing the IDs of the products of interest that are now back in stock, or null if no page event data exists.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetEqualityComparer">
            <summary>
            Gets the comparer used to determine if two <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects are equal.
            </summary>
            <returns>The comparer used to determine if two <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects are equal.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.GetBackInStockProductsFromServiceProvider(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Gets the products from a product notification list that are now back in stock.
            </summary>
            <param name="productNotifications">The products the user has requested to be notified about.</param>
            <param name="stateContext">The current automation state data.</param>
            <returns>A list containing the IDs of the products of interest that are now back in stock.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.FindBackInStockProductsFromServiceProvider(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult)">
            <summary>
            Finds the products that are back in stock based on a <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult"/>.
            </summary>
            <param name="productNotifications">The list of product notification requests.</param>
            <param name="result">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult"/>.</param>
            <returns>The requested products that are back in stock.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.FindBackInStockProductsFromPageEventData(System.Collections.Generic.List{Sitecore.Commerce.Entities.Inventory.StockNotificationRequest},Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest)">
            <summary>
            Finds the products that are back in stock based on page evennt data.
            </summary>
            <param name="productNotifications">The list of product notification requests.</param>
            <param name="pageEventData">The page event data.</param>
            <returns>The requested products that are back in stock, or null if no page event data was found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.IsBackInStock(Sitecore.Commerce.Entities.Inventory.StockNotificationRequest,Sitecore.Commerce.Entities.Inventory.StockInformationUpdate)">
            <summary>
            Determines if a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> is satisfied by a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate"/>.
            </summary>
            <param name="notification">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/>.</param>
            <param name="update">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate"/>.</param>
            <returns><c>True</c> if the back-in-stock <paramref name="notification"/> request is satisfied by the specified stock information <paramref name="update"/>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.IsBackInStockLocation(Sitecore.Commerce.Entities.Inventory.StockNotificationRequest,Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation)">
            <summary>
            Determines if a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> is satisfied by a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation"/>.
            </summary>
            <param name="notification">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/>.</param>
            <param name="location">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation"/>.</param>
            <returns><c>True</c> if the back-in-stock <paramref name="notification"/> request is satisfied by the specified stock information for the <paramref name="location"/>, otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.InventoryAutomationProvider.ServiceProvider">
            <summary>
            Gets the inventory service provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand">
            <summary>
            Defines the base class for all Content Editor commands that launch the synchronization of the products.
            This class inherits from the Command class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.productSynchronizationProvider">
            <summary>
            The product synchronization provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.progressBox">
            <summary>
            The progress box.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes the command that is specified in the Content Editor context. 
            </summary>
            <param name="context">The command context</param>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.GetProcessParameters(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Gets the process parameters.
            </summary>
            <param name="context">The context</param>
            <returns>a collection of the parameters</returns>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.StartProcess(System.Object[])">
            <summary>
            Starts the process.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.ProductSynchronizationProvider">
            <summary>
            Gets or sets the instance of the 
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/>
            class that performs synchronization by starting the corresponding pipelines.
            </summary>
            <value>
            The product synchronization provider
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.CommandName">
            <summary>
            Gets or sets the name of the command to be shown in the progress box during the synchronization process.
            </summary>
            <value>
            The name of the command
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.CommandMessage">
            <summary>
            Gets or sets the command message
            to show within progress box during synchronization.
            </summary>
            <value>
            The command message.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Commands.Products.ProductSynchronizationCommand.ProgressBox">
            <summary>
            Gets or sets the progress box wrapper.
            It wraps the Execute static method of the 
            <see cref="T:Sitecore.Shell.Applications.Dialogs.ProgressBoxes.ProgressBox"/>
            and can be unit-tested.
            </summary>
            <value>
            The progress box
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Commands.Products.SynchronizeAllProducts">
            <summary>
            Defines the back-end operations of the synchronize-all-products command.
            To synchronize all the products from and to external commerce systems, this command: 
            <list type="number">
            <item>
            <description>
            Extracts the language from the context parameters and specifies that the direction of the synchronization is both ways.
            </description>
            </item>
            <item>
            <description>
            Uses the language and direction to create a synchronization request.
            </description>
            </item>
            <item>
            <description>
            Passes this request as a parameter to the SynchronizeProducts method of the
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class.
            </description>
            </item>
            </list>
            This class inherits from the ProductSynchronizationCommand class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeAllProducts.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Commands.Products.SynchronizeAllProducts"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeAllProducts.StartProcess(System.Object[])">
            <summary>
            Starts the process of the synchronization.
            This method calls the SynchronizeProducts method of the
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class
            passing the language and demand to synchronize products both ways.
            </summary>
            <param name="parameters">
            The parameters should include language as first parameter of the array.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Commands.Products.SynchronizeArtifacts">
            <summary>
            Defines the back-end operations of the synchronize-all-artifacts command. For example, artifacts can be products, manufacturers,
            categories, or specification. 
            To synchronize all artifacts from and to external commerce systems, this command:
            <list type="number">
            <item>
            <description>
            Extracts the language from the context parameters and specifies that the direction of the synchronization is both ways.
            </description>
            </item>
            <item>
            <description>
            Uses the language and direction to create a synchronization request.
            </description>
            </item>
            <item>
            <description>
            Passes this request as a parameter to the SynchronizeArtifacts method of the
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class.
            </description>
            </item>
            </list>
            This class inherits from the ProductSynchronizationCommand class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeArtifacts.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Commands.Products.SynchronizeArtifacts"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeArtifacts.StartProcess(System.Object[])">
            <summary>
            Starts the process of the synchronization.
            This method calls the SynchronizeArtifacts method of the
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class
            passing the language and demand to synchronize artifacts both ways.
            </summary>
            <param name="parameters">
            The parameters should include language as first parameter of the array.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Commands.Products.SynchronizeProductList">
            <summary>
            The synchronize product list.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Commands.Products.SynchronizeProductList.MasterIndexName">
            <summary>
            The master index name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProductList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Commands.Products.SynchronizeProductList"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProductList.GetProcessParameters(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Gets the process parameters.
            </summary>
            <param name="context">The context.</param>
            <returns>The collection of parameters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProductList.StartProcess(System.Object[])">
            <summary>
            Starts the process.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProductList.GetSearchResultItems(Sitecore.ContentSearch.IProviderSearchContext,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel},Sitecore.Data.Items.Item)">
            <summary>
            The UI search result items.
            </summary>
            <param name="searchContext">The search context.</param>
            <param name="searchStringModels">The search string models.</param>
            <param name="root">The root.</param>
            <returns>The collection of the search result items.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Commands.Products.SynchronizeProduct">
            <summary>
            Defines the back-end operations of the synchronize-single-product command.
            To synchronize a single product from and to external commerce systems, this command:
            <list type="numnber">
            <item>
            <description>
            Extracts the language from the context parameters and specifies that the direction of the synchronization is both ways.
            </description>
            </item>
            <item>
            <description>
            Uses the product identifier, the language and direction to create a synchronization request.
            </description>
            </item>
            <item>
            <description>
            Passes this request as a parameter to the SynchronizeProduct method of the
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class.
            </description>
            </item>
            </list>
            This class inherits the ProductSynchronizationCommand class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProduct.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Commands.Products.SynchronizeProduct"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProduct.QueryState(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Determines whether to show, hide, or disable command in the ribbon.
            This method:
            <list type="bullet">
            <item>
            <description>
            Disables the command if there is no product selected.
            </description>
            </item>
            <item>
            <description>
            Hides the command if the current item does not represent a product.
            </description>
            </item>
            </list>
            </summary>
            <param name="context">The context</param>
            <returns>The command state</returns>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProduct.GetProcessParameters(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Gets the parameters from the command context.
            </summary>
            <param name="context">The context</param>
            <returns>
            A collection of the parameters.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Commands.Products.SynchronizeProduct.StartProcess(System.Object[])">
            <summary>
            Starts the process of the synchronization.
            This method calls the SynchronizeProduct method of the
            <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/>
            passing the product id, language and demand to synchronize product both ways.
            </summary>
            <param name="parameters">
            The parameters should include product ID as first parameter of the array and language as second parameter of the array.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Constants">
            <summary>
            Container class used to hold all constants
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.CommerceContext">
            <summary>
            The Commerce context.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.InventoryProductBuilder">
            <summary>
            The inventory product builder.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownItemIds">
            <summary>
            The known item IDs.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownItemIds.AbandonedCartOutcome">
            <summary>
            The ID of the Abandoned Cart outcome.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownItemIds.ProductPurchaseOutcome">
            <summary>
            The Product Purchase outcome item Id
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownPageEventIds">
            <summary>
            The IDs of commonly used page event IDs.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventIds.LinesAddedToCart">
            <summary>
            The lines added to cart page event.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventIds.LinesRemovedFromCart">
            <summary>
            The ID of the Lines Removed from Cart page event.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventIds.ProductsAreBackInStock">
            <summary>
            The ID of the Products Are Back In Stock outcome.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventIds.VisitedProductDetailPage">
            <summary>
            The visited product detail page event.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventIds.VisitorOrderCreated">
            <summary>
            The visitor order created goal.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownPageEventDataNames">
            <summary>
            The names of commmonly used page event data items.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Amount">
            <summary>
            The amount data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Balance">
            <summary>
            The balance data key;
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Order">
            <summary>
            The order dictionary data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Culture">
            <summary>
            The Culture dictionary data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.SortKey">
            <summary>
            The sort key data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.SortDirection">
            <summary>
            The sort direction data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Facet">
            <summary>
            The facet data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Applied">
            <summary>
            The applied data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Price">
            <summary>
            The CustomValues dictionary data key for the product price.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Quantity">
            <summary>
            The CustomValues dictionary data key for the cart line product quantity.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ShippingDate">
            <summary>
            The CustomValues dictionary data key for the product shipping date.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.InStockDate">
            <summary>
            The CustomValues dictionary data key for the product in-stock date.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ProductId">
            <summary>
            The CustomValues dictionary data key for the product ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ProductName">
            <summary>
            The CustomValues dictionary data key for the product name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CartPreviousStateName">
            <summary>
            The CustomValues dictionary data key for the previous cart state name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.StockCount">
            <summary>
            The CustomValues dictionary data key for the product stock count.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.AvailabilityDate">
            <summary>
            The CustomValues dictionary data key for the product availability date.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.StockStatus">
            <summary>
            The CustomValues dictionary data key for the inventory stock status.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.VisitorId">
            <summary>
            The CustomValues dictionary data key for the visitor ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.UserId">
            <summary>
            The CustomValues dictionary data key for the user ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.UserName">
            <summary>
            The CustomValues dictionary data key for the user name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CartStatus">
            <summary>
            The CustomValues dictionary data key for the cart status.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CartName">
            <summary>
            The CustomValues dictionary data key for the cart name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CartId">
            <summary>
            The CustomValues dictionary data key for the cart external ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CartLines">
            <summary>
            The CustomValues dictionary data key for the cart lines.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CartLine">
            <summary>
            The CustomValues dictionary data key for a cart line.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CustomerName">
            <summary>
            The CustomValues dictionary data key for the customer name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Comment">
            <summary>
            The CustomValues dictionary data key for the comment.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Product">
            <summary>
            The CustomValues dictionary data key for product informmation.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Email">
            <summary>
            The CustomValues dictionary data key for email information.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Location">
            <summary>
            The CustomValues dictionary data key for inventory location informmation.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.InterestDate">
            <summary>
            The CustomValues dictionary data key for back-in-stock interest date informmation.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ProductsBackInStock">
            <summary>
            The CustomValues dictionary data key for the products that are back in stock.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ShopName">
            <summary>
            The CustomValues dictionary data key for the shop name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Products">
            <summary>
            The CustomValues dictionary data key for the products.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ExternalId">
            <summary>
            The CustomValues dictionary data key for the order external ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.PreferredLanguage">
            <summary>
            The CustomValues dictionary data key for the preferred language.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CurrentDateTime">
            <summary>
            The CustomValues dictionary data key for the current date time.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Total">
            <summary>
            The CustomValues dictionary data key for the order total.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CustomerId">
            <summary>
            The CustomValues dictionary data key for the customer ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.OrderId">
            <summary>
            The CustomValues dictionary data key for the ` ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.WishListName">
            <summary>
            The CustomValues dictionary data key for the wish list name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.WishLists">
            <summary>
            The CustomValues dictionary data key for the wish lists.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.WishListLines">
            <summary>
            The CustomValues dictionary data key for the wish list lines.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CardNumber">
            <summary>
            The CustomValues dictionary data key for the card number.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.OrderStatus">
            <summary>
            The CustomValues dictionary data key for the order status.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.LoyaltyCardAmount">
            <summary>
            The loyalty card amount data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.GiftCardAmount">
            <summary>
            The gift card amount data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.PreOrderable">
            <summary>
            The pre-orderable data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CategoryName">
            <summary>
            The category name data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.CategoryId">
            <summary>
            The category identifier
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ParentCategoryName">
            <summary>
            The parent category name data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.ParentCategoryId">
            <summary>
            The parent category identifier data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.SearchTerm">
            <summary>
            The search term data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.NumberOfHits">
            <summary>
            The number of hits data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Cart">
            <summary>
            The cart data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Custom">
            <summary>
            The custom data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Customer">
            <summary>
            The customer data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.User">
            <summary>
            The user data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.LoyaltyCard">
            <summary>
            The loyalty card data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.WishList">
            <summary>
            The wish list data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownPageEventDataNames.Currency">
            <summary>
            The currency page event data key.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownWorkflowDataNames">
            <summary>
            The names of commonly used workflow state data keys
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownWorkflowDataNames.ProductNotifications">
            <summary>
            The products for which a visitor has required to recieve back-in-stock notifications
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownWorkflowDataNames.ExpiredNotifications">
            <summary>
            The back-in-stock notifications that have expired due to being past interest date.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownWorkflowDataNames.BackInStockProducts">
            <summary>
            The products that have become back in-stock, and for which the requesting visitor should be notified.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownWorkflowDataNames.Carts">
            <summary>
            The cart data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownWorkflowDataNames.Customers">
            <summary>
            The customer data key.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownServiceNames">
            <summary>
            The names of commonly used services.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownServiceNames.ItemClassificationService">
            <summary>
            The itemClassificationService service.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownServiceProviderNames">
            <summary>
            The names of commonly used service providers.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownServiceProviderNames.InventoryAutomationProvider">
            <summary>
            The inventory service automation provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownServiceProviderNames.InventoryServiceProvider">
            <summary>
            The inventoryServiceProvider service provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownServiceProviderNames.EaPlanProvider">
            <summary>
            The eaPlanProvider service provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownServiceProviderNames.OrderServiceProvider">
            <summary>
            The orders service provider
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownFieldNames">
            <summary>
            Some known widely used fieldnames
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownFieldNames.ProductClassesFieldName">
            <summary>
            The productclasses field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownFieldNames.ManufacturerFieldName">
            <summary>
            The productclasses field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownFieldNames.ProductTypeFieldName">
            <summary>
            The productclasses field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownFieldNames.ExternalId">
            <summary>
            The instocklocations field.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownFieldNames.NameField">
            <summary>
            The Name field 
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Constants.KnownAnalyticsKeys">
            <summary>
            The knows analytics keys.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.KnownAnalyticsKeys.SitecoreCommerceOutcomeKey">
            <summary>
            The key used for the outcome custom values.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.Licenses.ConnectLicenseName">
            <summary>
            The Connect License name 
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Constants.Licenses.ConnectPartnerLicenseName">
            <summary>
            The Connect Partner License name 
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Carts.EaStateCartRepository">
            <summary>
            The cart repository.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Carts.ICartRepository">
            <summary>
            The cart repository interface.
            This interface allows you to store carts.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.IEntityRepository`1">
            <summary>
            Defines the interface for the basic CRUD operations that are performed on 
            the main commerce entities such as carts and customers.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Data.IEntityRepository`1.Create(`0)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.IEntityRepository`1.Update(`0)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.IEntityRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.ICartRepository.GetAll(System.String)">
            <summary>
            Gets all carts.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <returns>List of carts.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.ICartRepository.GetByUserName(System.String,System.String)">
            <summary>
            Gets list of the carts by user name.
            </summary>
            <param name="userName">The user name.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>List of carts.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.ICartRepository.GetByCartId(System.String,System.String)">
            <summary>
            Gets a cart by cart ID.
            </summary>
            <param name="cartId">The cart ID.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>Specified cart.</returns>
        </member>
        <member name="F:Sitecore.Commerce.Data.Carts.EaStateCartRepository.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Carts.EaStateCartRepository.eaPlanProvider">
            <summary>
            The engagement plan provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Carts.EaStateCartRepository.lastAcessedUserName">
            <summary>
            The last accessed user name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.#ctor(Sitecore.Commerce.Entities.IEntityFactory,Sitecore.Commerce.Multishop.IEaPlanProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Carts.EaStateCartRepository"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
            <param name="eaPlanProvider">The engagement plan provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.Create(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.Update(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.Delete(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.GetAll(System.String)">
            <summary>
            Gets all carts.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <returns>
            List of carts.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.GetByUserName(System.String,System.String)">
            <summary>
            Gets list of the carts by user name.
            </summary>
            <param name="userName">The user name.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>
            List of carts.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.GetByCartId(System.String,System.String)">
            <summary>
            Gets cart by cart id.
            </summary>
            <param name="cartId">The cart id.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>
            Specified cart.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.ProcessCart(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartBase})">
            <summary>
            Processes the cart.
            </summary>
            <param name="entity">The entity.</param>
            <param name="cartsToStore">The carts to store.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.GetAll(System.String,System.Type)">
            <summary>
            Gets all.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="cartType">Type of the cart.</param>
            <returns>
            The collection of carts.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Carts.EaStateCartRepository.GetByUserName(System.String,System.String,System.Type)">
            <summary>
            Gets the name of the by user.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="cartType">Type of the cart.</param>
            <returns>The list of carts.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Customers.ICustomerRepository">
            <summary>
            Represents the customer repository interface. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.Get(System.String)">
            <summary>
            Gets the commerce customer by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The customer that matches the given name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.GetAll">
            <summary>
            Gets all commerce customers.
            </summary>
            <returns>The collection of the customers.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.Search(Sitecore.Commerce.Services.Customers.CustomerSearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>A list of customers based on the given search criteria.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.AddParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Adds the parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="parties">The parties.</param>
            <returns>List of parties that were added along with any updated information.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.GetParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Gets the parties.
            </summary>
            <param name="customer">The customer.</param>
            <returns>List of parties associated with the customer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.RemoveParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Removes the parties.  Any customer party referencing the party will also be removed.
            </summary>
            <param name="customer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.UpdateParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Updates the parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.AddCustomerParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Adds the customer parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="customerParties">The customer parties.</param>
            <returns>A list of the new customer parties that were added.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.RemoveCustomerParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Removes the customer parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="customerParties">The customer parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.ICustomerRepository.UpdateCustomerParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Updates the customer parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="customerParties">The customer parties.</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Customers.IUserRepository">
            <summary>
            The user repository interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.IUserRepository.Get(System.String)">
            <summary>
            Gets the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The CommerceUser with the given name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.IUserRepository.Create(Sitecore.Commerce.Entities.Customers.CommerceUser,System.String)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.IUserRepository.Update(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.IUserRepository.Delete(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.IUserRepository.Search(Sitecore.Commerce.Services.Customers.UserSearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>A list of users based on the given search criteria.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.IUserRepository.UpdatePassword(System.String,System.String,System.String)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="userName">The user name.</param>
            <param name="oldPassword">The user old password.</param>
            <param name="newPassword">The user new password.</param>
            <returns>True if the user's password was successfully updated, false otherwise</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository">
            <summary>
            Defines the SitecoreMembershipCustomerRepository class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Customers.UserProfileRepository">
            <summary>
            Defines the UserProfileRepository class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.UserProfileRepository.GetRole(System.String)">
            <summary>
            Gets the role.
            </summary>
            <param name="roleName">the role name</param>
            <returns>the Role</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.#ctor(Sitecore.Commerce.Entities.IEntityFactory,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
            <param name="customerSerializationProperty">The serialization property.</param>
            <param name="partySerializationProperty">The party serialization property.</param>
            <param name="domain">The domain.</param>
            <param name="role">The role.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.Get(System.String)">
            <summary>
            Gets the commerce customer by name.
            </summary>
            <param name="name">The name.</param>
            <returns>
            The customer that matches the given name.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetAll">
            <summary>
            Gets all commerce customers.
            </summary>
            <returns>
            The collection of the customers.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.Create(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Creates the specified customer.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.Update(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Updates the specified customer entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.Delete(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Deletes the specified customer entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.Search(Sitecore.Commerce.Services.Customers.CustomerSearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>A list of customers.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.AddParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Adds the parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="parties">The parties.</param>
            <returns>
            List of parties that were added along with any updated information.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.AddCustomerParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Adds the customer parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="customerParties">The customer parties.</param>
            <returns>
            A list of the new customer parties that were added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Gets the parties.
            </summary>
            <param name="customer">The customer.</param>
            <returns>
            List of parties associated with the customer.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.RemoveParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Removes the parties.  Any customer party referencing the party will also be removed.
            </summary>
            <param name="customer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.RemoveCustomerParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Removes the customer parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="customerParties">The customer parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.UpdateParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Updates the parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.UpdateCustomerParties(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Updates the customer parties.
            </summary>
            <param name="customer">The customer.</param>
            <param name="customerParties">The customer parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetCustomerFullName(System.String)">
            <summary>
            Gets the full name of the customer including the path.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>the full name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetDomain">
            <summary>
            Gets the domain.
            </summary>
            <returns>the domain</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.DecorateUser(Sitecore.Security.Accounts.User)">
            <summary>
            Decorates the user.
            </summary>
            <param name="user">The user.</param>
            <returns>The decorated user.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetExistingCustomer(Sitecore.Security.Accounts.User)">
            <summary>
            Reads the existing user.
            </summary>
            <param name="user">The user.</param>
            <returns>Corresponding commerce customer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.UpdateExistingUser(Sitecore.Security.Accounts.User,Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Updates the existing user.
            </summary>
            <param name="user">The user.</param>
            <param name="commerceCustomer">The commerce customer.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.AddPartiesToExistingCustomer(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Adds the parties to existing customer.
            </summary>
            <param name="user">The user.</param>
            <param name="parties">The parties.</param>
            <returns>A list of Party items that were added to the party list of the customer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.AddCustomerPartiesToExistingCustomer(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Adds the customer parties to existing customer.
            </summary>
            <param name="user">The user.</param>
            <param name="customerParties">The customer parties.</param>
            <returns>List of newly added customer parties.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetPartiesFromExistingCustomer(Sitecore.Security.Accounts.User)">
            <summary>
            Gets the parties from existing customer.
            </summary>
            <param name="user">The user.</param>
            <returns>The list of parties associated with the customer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.RemovePartiesFromExistingCustomer(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Removes the parties from existing customer.
            </summary>
            <param name="user">The user.</param>
            <param name="partiesToRemove">The parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.RemoveCustomerPartiesFromExistingCustomer(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Removes the customer parties from existing customer.
            </summary>
            <param name="user">The user.</param>
            <param name="customerParties">The customer parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.UpdateCustomerPartiesFromExistingCustomer(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Updates the customer parties from existing customer.
            </summary>
            <param name="user">The user.</param>
            <param name="customerParties">The customer parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.SerializeCustomer(Sitecore.Security.Accounts.User,Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Serializes the user.
            </summary>
            <param name="user">The user.</param>
            <param name="commerceCustomer">The commerce user.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.SerializeParties(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Serializes the parties.
            </summary>
            <param name="user">The user.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.DeserializeCustomer(Sitecore.Security.Accounts.User)">
            <summary>
            Deserializes the user.
            </summary>
            <param name="user">The user.</param>
            <returns>The commerce user.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.DeserializeParties(Sitecore.Security.Accounts.User)">
            <summary>
            Deserializes the parties.
            </summary>
            <param name="user">The user.</param>
            <returns>List of parties.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.CompareExternalIds(System.String,Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Compares the external IDs.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="commerceCustomer">The customer.</param>
            <returns>The result of comparison.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>The modified identifier.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.UpdatePartiesFromExistingCustomer(Sitecore.Security.Accounts.User,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Updates the parties from existing customer.
            </summary>
            <param name="user">The user.</param>
            <param name="partiesToUpdate">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.SerializationProperty">
            <summary>
            Gets or sets the serialization property.
            </summary>
            <value>
            The serialization property.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.PartySerializationProperty">
            <summary>
            Gets or sets the party serialization property.
            </summary>
            <value>
            The party serialization property.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.DefaultDomain">
            <summary>
            Gets or sets the default domain.
            </summary>
            <value>
            The default domain.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.DefaultRole">
            <summary>
            Gets or sets the default role.
            </summary>
            <value>
            The default role.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreMembershipCustomerRepository.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Data.Customers.SitecoreUserRepository">
            <summary>
            The Sitecore user repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Customers.SitecoreUserRepository._serializationProperty">
            <summary>
            The _ serialization property
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.#ctor(Sitecore.Commerce.Entities.IEntityFactory,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Customers.SitecoreUserRepository"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
            <param name="serializationProperty">The serialization property.</param>
            <param name="domain">The domain.</param>
            <param name="role">The role.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.Get(System.String)">
            <summary>
            Gets the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The CommerceUser with the given name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.Create(Sitecore.Commerce.Entities.Customers.CommerceUser,System.String)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.Update(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.Delete(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.Search(Sitecore.Commerce.Services.Customers.UserSearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>The lists of commerce users matching the search</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.UpdatePassword(System.String,System.String,System.String)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="userName">The user name.</param>
            <param name="oldPassword">The user old password.</param>
            <param name="newPassword">The user new password.</param>
            <returns>True if the user's password was successfully updated, false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.GetUserFullName(System.String)">
            <summary>
            Gets the full name of the customer including the domain path.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>the full name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.GetDomain">
            <summary>
            Gets the domain.
            </summary>
            <returns>the domain</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.GetExistingUser(Sitecore.Security.Accounts.User)">
            <summary>
            Reads the existing user.
            </summary>
            <param name="user">The user.</param>
            <returns>Corresponding commerce user.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.UpdateExistingUser(Sitecore.Security.Accounts.User,Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Updates the existing user.
            </summary>
            <param name="user">The user.</param>
            <param name="commerceUser">The commerce user.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.SerializeUser(Sitecore.Security.Accounts.User,Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Serializes the user.
            </summary>
            <param name="user">The user.</param>
            <param name="commerceUser">The commerce user.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.DeserializeUser(Sitecore.Security.Accounts.User)">
            <summary>
            Deserializes the user.
            </summary>
            <param name="user">The user.</param>
            <returns>The commerce user.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.DecorateUser(Sitecore.Security.Accounts.User)">
            <summary>
            Decorates the user.
            </summary>
            <param name="user">The user.</param>
            <returns>The decorated user.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.CompareExternalIds(System.String,Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Compares the external ids.
            </summary>
            <param name="identifier">The i.</param>
            <param name="commerceUser">The u.</param>
            <returns>The result of comparison.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.GetKey(System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>The modified identifier.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.SerializationProperty">
            <summary>
            Gets or sets the serialization property.
            </summary>
            <value>
            The serialization property.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.DefaultDomain">
            <summary>
            Gets or sets the default domain.
            </summary>
            <value>
            The default domain.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.DefaultRole">
            <summary>
            Gets or sets the default role.
            </summary>
            <value>
            The default role.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Customers.SitecoreUserRepository.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction">
            <summary>
            Defines the action that is used to set the cart status.
            This class implements the AutomationAction class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.CartStatusParameterName">
            <summary>
            The cart status parameter name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction._eaPlanProvider">
            <summary>
            The EAP provider
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction._cartServiceProvider">
            <summary>
            The cart service provider
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction._contactFactory">
            <summary>
            The contact factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.Execute(Sitecore.Analytics.Automation.AutomationActionContext)">
            <summary>
            Executes the action on the specified automation action context.
            </summary>
            <param name="context">The automation action context.</param>
            <returns>The result of action execution.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.RunLegacyAction(Sitecore.Analytics.Automation.AutomationActionContext,System.String,System.String,System.String)">
            <summary>
            Runs the legacy action.
            </summary>
            <param name="context">The context.</param>
            <param name="userId">The user identifier.</param>
            <param name="eaPlanName">Name of the ea plan.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>The AutomationActionResult value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.RunAction(Sitecore.Analytics.Automation.AutomationActionContext,System.String,System.String,System.String,System.String)">
            <summary>
            Runs the action.
            </summary>
            <param name="context">The context.</param>
            <param name="userId">The user identifier.</param>
            <param name="eaPlanName">Name of the ea plan.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="cartExternalId">The cart external identifier.</param>
            <returns>The AutomationActionResult value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.GetCart(System.String,System.String,System.String)">
            <summary>
            Gets the cart.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="userId">The user identifier.</param>
            <param name="externalId">The external identifier.</param>
            <returns>The cart if it was found; otherwise null.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.CartServiceProvider">
            <summary>
            Gets or sets the cart service provider.
            </summary>
            <value>The cart service provider.</value>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.ContactFactory">
            <summary>
            Gets or sets the visitor factory.
            </summary>
            <value>The visitor factory.</value>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationActions.SetCartStatusAction.EaPlanProvider">
            <summary>
            Gets or sets the ea plan provider.
            </summary>
            <value>
            The ea plan provider.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper">
            <summary>
            Represents the engagement automation helper.
            This class is used to set values for the different fields in automation states table.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetPageEventData``1(System.Guid,System.String)">
            <summary>
            Retrieves page event data from the current context.
            </summary>
            <param name="pageEventId">The Id of the page event</param>
            <param name="customValuesKey">The key in the customm values dictionary that contains the page event data.</param>
            <returns>The page event data.</returns>
            <typeparam name="T">The type of the page event data.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetAutomationStateContextReadOnly(System.String,Sitecore.Data.ID)">
            <summary>
            Gets the auutomation state data row data for a contact.
            </summary>
            <param name="contactIdentifier">The identifier of a contact.</param>
            <param name="planId">The ID of the automation plan whose automation state data will be retrieved.</param>
            <returns>The automation state data.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.AddContactToState(System.String,Sitecore.Data.ID,Sitecore.Data.ID,System.Boolean)">
            <summary>
            Adds a contact to an engagement plan state.
            </summary>
            <param name="contactIdentifier">The contact identifier.</param>
            <param name="planId">The engagement plan ID.</param>
            <param name="stateId">The engagement plan state ID.</param>
            <param name="saveToXDb">Specifies whether the user's state should immediately saved to XDb.</param>
            <returns><c>True</c> if the contact is successfully added to the engagement plan state, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.AddContactToState(System.String,Sitecore.Data.ID,Sitecore.Data.ID,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Adds a contact to an engagement plan state.
            </summary>
            <param name="contactIdentifier">The contact identifier.</param>
            <param name="planId">The engagement plan ID.</param>
            <param name="stateId">The engagement plan state ID.</param>
            <param name="customData">The custom data to attach to the engagement plan state.</param>
            <param name="saveToXDb">Specifies whether the user's state should immediately saved to XDb.</param>
            <returns><c>True</c> if the contact is successfully added to the engagement plan state, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetContact(System.String)">
            <summary>
            Retrieves a <see cref="T:Sitecore.Analytics.Tracking.Contact"/> by ID or identifier.
            </summary>
            <param name="contactIdentifier">The contact ID or external user name.</param>
            <returns>The requested <see cref="T:Sitecore.Analytics.Tracking.Contact"/> or null if it could not be found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetContact(System.String,System.Boolean@)">
            <summary>
            Retrieves a <see cref="T:Sitecore.Analytics.Tracking.Contact"/> by ID or identifier.
            </summary>
            <param name="contactIdentifier">The contact ID or external user name.</param>
            <param name="isCurrentContact">Assigned to true if the user represents the Tracker.Current.Contacct, otherwise false.</param>
            <returns>The requested <see cref="T:Sitecore.Analytics.Tracking.Contact"/> or null if it could not be found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetContactManager">
            <summary>
            Retrieves the current <see cref="T:Sitecore.Analytics.Tracking.ContactManager"/> implementation from configuration.
            </summary>
            <returns>A <see cref="T:Sitecore.Analytics.Tracking.ContactManager"/> instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.SafeUpdateData(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.String,System.Object)">
            <summary>
            Adds or updates custom data in an <see cref="T:Sitecore.Analytics.Automation.Data.AutomationStateContext"/>.
            </summary>
            <param name="stateContext">The <see cref="T:Sitecore.Analytics.Automation.Data.AutomationStateContext"/> to update.</param>
            <param name="keyName">The custom data key.</param>
            <param name="value">The custom data value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetCustomDataOrNull``1(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.String)">
            <summary>
            Retrieves custom data from a <see cref="T:Sitecore.Analytics.Automation.Data.AutomationStateContext"/>.
            </summary>
            <typeparam name="T">The type of the custom data to retrieve.</typeparam>
            <param name="stateContext">The <see cref="T:Sitecore.Analytics.Automation.Data.AutomationStateContext"/>.</param>
            <param name="keyName">The custom data key.</param>
            <returns>The custom data, or null if no data is found with the specified key.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.GetCustomDataOrCreate``1(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.String)">
            <summary>
            Retrieves custom data from a <see cref="T:Sitecore.Analytics.Automation.Data.AutomationStateContext"/>.
            </summary>
            <typeparam name="T">The type of the custom data to retrieve.</typeparam>
            <param name="stateContext">The <see cref="T:Sitecore.Analytics.Automation.Data.AutomationStateContext"/>.</param>
            <param name="keyName">The custom data key.</param>
            <returns>The custom data, or a new instance of the object <typeparamref name="T"/> if no data is found with the specified key.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.PageEventsEnabled">
            <summary>
            Gets a value indicating whether page events can be raised, basd on the current analytics / Xdb configuration.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.EngagementPlansEnabled">
            <summary>
            Gets a value indicating whether users can be added or removed from engagement plans, based on the current analytics / Xdb configuration.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.ContactsEnabled">
            <summary>
            Gets a value indicating whether contacts can be created/modified, based on the current analytics / Xdb configuration.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ArtifactRepository`1">
            <summary>
            The base class for managing all the artifacts.
            </summary>
            <typeparam name="TEntity">The artifact entity type.</typeparam>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.EntityRepository`1">
            <summary>
            The default implementation of the base entity repository class.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.EntityRepository`1.database">
            <summary>
            The database.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.EntityRepository`1.idGenerator">
            <summary>
            The id generator.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.EntityRepository`1.prefix">
            <summary>
            The prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.EntityRepository`1.path">
            <summary>
            The path.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.EntityRepository`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.EntityRepository`1"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.EntityRepository`1.IdGenerator">
            <summary>
            Gets or sets the unique identifier generator.
            </summary>
            <value>The unique identifier generator.</value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.EntityRepository`1.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.EntityRepository`1.Prefix">
            <summary>
            Gets or sets the prefix.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.EntityRepository`1.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ArtifactRepository`1.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ArtifactRepository`1.branch">
            <summary>
            The branch.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ArtifactRepository`1.template">
            <summary>
            The product template identifier.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ArtifactRepository`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntities">
            <summary>
            Gets the list of entities.
            </summary>
            <returns>The list of entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntities(Sitecore.Data.Items.Item)">
            <summary>
            Gets the list of entities under the specified root.
            </summary>
            <param name="root">The root.</param>
            <returns>The list of entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Save(`0)">
            <summary>
            Saves the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The saved entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Save(`0,System.Boolean)">
            <summary>
            Saves the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="moveToBucket">if set to <c>true</c> [move to bucket].</param>
            <returns>The resulting entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Save(Sitecore.Data.Items.Item,`0)">
            <summary>
            Saves the specified root.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Save(Sitecore.Data.Items.Item,`0,System.Boolean)">
            <summary>
            Saves the specified root.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <param name="moveToBucket">if set to <c>true</c> [move to bucket].</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Get(System.String)">
            <summary>
            Gets the specified entity identifier.
            </summary>
            <param name="entityKey">The entity key.</param>
            <returns>The entity instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.DeleteItem(Sitecore.Data.Items.Item)">
            <summary>
            Deletes the item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <returns><c>true</c> if the specified item was deleted; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.MoveToImmediateRoot(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Moves to immediate root.
            </summary>
            <param name="root">The root.</param>
            <param name="entityItemImmediateRoot">The entity item immediate root.</param>
            <param name="entityItem">The entity item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Get(Sitecore.Data.Items.Item)">
            <summary>
            Gets entity from corresponding item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets entity items under the repository root.
            </summary>
            <param name="root">The root.</param>
            <returns>The entity items.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.InstantiateEntity">
            <summary>
            Instantiates the entity.
            </summary>
            <returns>The entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetRepositoryRootItem">
            <summary>
            Gets the repository root item.
            </summary>
            <returns>The repository root item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.PopulateEntity(Sitecore.Data.Items.Item,`0)">
            <summary>
            Fills the entity.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.IsValid(Sitecore.Data.Items.Item,`0)">
            <summary>
            Determines whether the specified root is valid.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns><c>true</c> if the specified root is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityItem(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entityKey">The entity key.</param>
            <returns>The entity item or null if such item does not exist.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityItemImmediateRoot(Sitecore.Data.Items.Item,`0)">
            <summary>
            Gets the entity item immediate root.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Item immediate root.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.CreateEntityItem(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,`0,System.Boolean)">
            <summary>
            Creates the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entityItemImmediateRoot">The entity item immediate root.</param>
            <param name="entity">The entity.</param>
            <param name="moveToBucket">if set to <c>true</c> [move to bucket].</param>
            <returns>The item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.ProcessEntityItem(Sitecore.Data.Items.Item,`0)">
            <summary>
            Processes the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
            <returns>
            The result of item processing.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.SetEntityItemStatistics(Sitecore.Data.Items.Item,`0)">
            <summary>
            Sets the entity item statistics.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.MoveItemIntoBucket(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,`0,System.Boolean)">
            <summary>
            Moves the item into bucket.
            </summary>
            <param name="root">The root.</param>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
            <param name="moveToBucket">if set to <c>true</c> [move to bucket].</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item id.
            </summary>
            <param name="root">The root.</param>
            <param name="entityKey">The entity key.</param>
            <returns>ID of the entity item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityKey(Sitecore.Data.Items.Item,`0)">
            <summary>
            Gets the entity key.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>The key of the entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityItemName(Sitecore.Data.Items.Item,`0)">
            <summary>
            Gets the item name of the entity.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Name of the entity item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.GetEntityItemTemplateId(Sitecore.Data.Items.Item,`0)">
            <summary>
            Gets the entity item template id.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity item template id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ArtifactRepository`1.UpdateEntityItem(Sitecore.Data.Items.Item,`0)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Branch">
            <summary>
            Gets or sets the branch.
            </summary>
            <value>The branch.</value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ArtifactRepository`1.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ArtifactRepository`1.EntityFactory">
            <summary>
            Gets the entity factory.
            </summary>
            <value>The entity factory.</value>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.DivisionRepository">
            <summary>
            The division repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DivisionRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Division)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DivisionRepository.PopulateEntity(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Division)">
            <summary>
            Fills the entity.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DivisionRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Division)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.IIdGenerator">
            <summary>
            Defines interface for the ID generator. This interface is used in all synchronization classes to generate the ID for the Sitecore Item.
            It generates this ID based on the ID in the external commerce system. 
            It gets the Sitecore ID from the External ID quickly and without a mapping table.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.IIdGenerator.StringToID(System.String,System.String)">
            <summary>
            String to Sitecore ID.
            </summary>
            <param name="value">The value.</param>
            <param name="prefix">The prefix.</param>
            <returns>The generated ID</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ManufacturerRepository">
            <summary>
            Defines default implementation of manufacturer factory repository.
            For more information about the manufacturer repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ManufacturerRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Manufacturer)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ManufacturerRepository.PopulateEntity(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Manufacturer)">
            <summary>
            Assigns values to the entity's name, external ID, description, and website URL.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ManufacturerRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Manufacturer)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.Md5IdGenerator">
            <summary>
            Defines the default implementation of ID generator. This class implements the IIdGenerator interface.
            This class is used in all synchronization classes to generate the ID for the Sitecore Item. 
            It generates the ID on the ID in the external commerce system. 
            It gets the Sitecore ID from the External ID quickly and without a mapping table.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.Md5IdGenerator.StringToID(System.String,System.String)">
            <summary>
            String to Sitecore ID.
            </summary>
            <param name="value">The value.</param>
            <param name="prefix">The prefix.</param>
            <returns>The generated ID</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository">
            <summary>
            Defines default implementation of product classification group repository. 
            For more information on the product repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.productClassificationGroupRepositoryId">
            <summary>
            The product classification group repository ID
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository"/> class.
            </summary>
            <param name="productClassificationGroupRepositoryId">The product classification group repository ID.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.GetRepositoryRootItem">
            <summary>
            Gets the repository root item.
            </summary>
            <returns>The repository root item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item identifier.
            </summary>
            <param name="root">The root.</param>
            <param name="entityKey">The entity key.</param>
            <returns>The entity item ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.GetEntityKey(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ClassificationGroup)">
            <summary>
            Gets the entity key.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>The key of the entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ClassificationGroup)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>The entity name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.PopulateEntity(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ClassificationGroup)">
            <summary>
            Assigns values to the entity's name, external ID and description.
            </summary>
            <param name="entityItem">the entity item</param>
            <param name="entity">the entity</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ClassificationGroup)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductClassificationRepository">
            <summary>
            Defines default implementation of product classification repository.
            For more information about the product classification repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductClassificationRepository.globalSpecificationsRepository">
            <summary>
            The global specifications repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.GlobalSpecifications})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductClassificationRepository"/> class.
            </summary>
            <param name="globalSpecificationsRepository">The global specifications repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.Save(Sitecore.Commerce.Entities.Products.Classification,System.String)">
            <summary>
            Saves the specified product classification.
            </summary>
            <param name="classification">The product classification.</param>
            <param name="productClassificationRepositoryItemId">The product classification repository item id.</param>
            <returns>
            The updated product classification.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.SaveSpecifications(System.String,System.String,System.String,Sitecore.Commerce.Entities.Products.GlobalSpecifications)">
            <summary>
            Saves the specifications.
            </summary>
            <param name="classificationGroupName">Name of the classification group.</param>
            <param name="classificationGroupId">The classification group id.</param>
            <param name="classificationId">The classification id.</param>
            <param name="specifications">The specifications.</param>
            <returns>
            The updated product classification.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.GetEntities(System.String)">
            <summary>
            Gets the classifications for the specified product classification group.
            </summary>
            <param name="productClassificationRepositoryItemId">The product classification repository item id.</param>
            <returns>The stored classifications.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.GetEntityItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets entity items under the repository root.
            </summary>
            <param name="root">The root.</param>
            <returns>The entity items.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item id.
            </summary>
            <param name="root">The root.</param>
            <param name="entityKey">The entity key.</param>
            <returns>Entity item id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.GetEntityKey(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Classification)">
            <summary>
            Gets the entity key.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>The key of the entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Classification)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.GetEntityItemImmediateRoot(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Classification)">
            <summary>
            Gets the entity item immediate root.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>The immedaite root item of the entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.PopulateEntity(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Classification)">
            <summary>
            Fills the entity.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Classification)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductClassificationRepository.ProductClassificationGroupPrefix">
            <summary>
            Gets or sets the product classification group prefix.
            </summary>
            <value>
            The product classification group prefix.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductClassificationRepository.ProductClassificationPrefix">
            <summary>
            Gets or sets the product classification prefix.
            </summary>
            <value>
            The product classification prefix.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.TypeRepository">
            <summary>
            Defines the repository that you can use to save the types as the items in the content tree.
            The product items can then be linked to types items.
            The type can also have type specifications and type default values assigned to it.
            For more information about the type repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.TypeRepository.specificationsRepository">
            <summary>
            The specifications repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.TypeRepository.defaultValuesRepository">
            <summary>
            The default values repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.GlobalSpecifications},Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.ProductSpecifications})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.TypeRepository"/> class.
            </summary>
            <param name="specificationsRepository">The specifications repository.</param>
            <param name="defaultValuesRepository">The default values repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.SaveSpecifications(System.String,Sitecore.Commerce.Entities.Products.GlobalSpecifications)">
            <summary>
            Saves the specifications.
            </summary>
            <param name="typeId">The type ID</param>
            <param name="specifications">The specifications that are saved</param>
            <returns>Saved specifications</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.SaveDefaultValues(System.String,Sitecore.Commerce.Entities.Products.ProductSpecifications)">
            <summary>
            Saves the default values.
            </summary>
            <param name="typeId">The type ID</param>
            <param name="defaultValues">The specifications</param>
            <returns>Saved default value specifications</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.GetEntityItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets the entity items under the repository root.
            </summary>
            <param name="root">The root</param>
            <returns>The entity items</returns>    
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ProductType)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root</param>
            <param name="entity">The entity</param>
            <returns>Entity item name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.GetEntityItemImmediateRoot(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ProductType)">
            <summary>
            Gets the entity item immediate root.
            </summary>
            <param name="root">The root</param>
            <param name="entity">The entity</param>
            <returns>The immediate root item of the entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.PopulateEntity(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ProductType)">
            <summary>
            Fills the entity.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ProductType)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item</param>
            <param name="entity">The entity</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.SaveSpecifications(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.GlobalSpecifications},System.String,Sitecore.Commerce.Entities.Products.GlobalSpecifications)">
            <summary>
            Saves the specifications.
            </summary>
            <param name="repository">The repository</param>
            <param name="typeId">The type ID</param>
            <param name="specifications">The specifications</param>
            <returns>Saved specifications</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.TypeRepository.SaveSpecifications(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.ProductSpecifications},System.String,Sitecore.Commerce.Entities.Products.ProductSpecifications)">
            <summary>
            Saves the specifications.
            </summary>
            <param name="repository">The repository</param>
            <param name="typeId">The type identifier</param>
            <param name="specifications">The specifications</param>
            <returns>The product specifications</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.FieldNames">
            <summary>
            The field names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.FieldNames.ExternalId">
            <summary>
            The external identifier field name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.FieldNames.Name">
            <summary>
            The name field name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.FieldNames.ShortDescription">
            <summary>
            The short description field name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.FieldNames.FullDescription">
            <summary>
            The full description field name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.FieldNames.Identification">
            <summary>
            The identification field name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.IProductRelatedEntityRepository`1">
            <summary>
            Defines the interface that you can implement to save any type of artifact that is related to the current product. 
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.IProductRelatedEntityRepository`1.SaveProductEntities(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Saves the entities that are related to the current product. For example, these entities can be manufacturers or specifications.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <param name="entities">A list of the entities</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductClassificationsFieldRepository">
            <summary>
            Defines the repository that stores the product classifications as links
            from the product items to the product classification items.
            The link is stored as a field value in the product item.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1">
            <summary>
            Defines the base abstract class for all repositories that store the product artifacts as links
            from the product items to the artifact items.
            The link is stored as a field value in the product item.
            You can use the descendants of this class to save any type of product artifact that is stored as a field value
            in a product item.
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1._productFieldName">
            <summary>
            The product field name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1._productPrefix">
            <summary>
            The product prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1"/> class.
            </summary>
            <param name="productFieldName">Name of the product field</param>
            <param name="productPrefix">The product prefix</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.SaveProductEntities(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Saves the product entities.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <param name="entities">The entities</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.GetProductItemByExternalId(System.String)">
            <summary>
            Gets the product item using the external ID.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <returns>
            The product item
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.UpdateField(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the field.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <param name="entityIds">The entity IDs</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.GetEntityItemIds(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Gets the entity item IDs.
            </summary>
            <param name="entityIds">The entity IDs</param>
            <returns>Collection of entity item IDs</returns>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.ProductFieldName">
            <summary>
            Gets or sets the product field name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductFieldRepositoryBase`1.ProductPrefix">
            <summary>
            Gets or sets the product prefix
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductClassificationsFieldRepository.productClassificationGroupPrefix">
            <summary>
            The product classification group prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationsFieldRepository.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductClassificationsFieldRepository"/> class.
            </summary>
            <param name="productFieldName">Name of the product field</param>
            <param name="productPrefix">The product prefix</param>
            <param name="productClassificationGroupPrefix">The product classification group prefix</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductClassificationsFieldRepository.GetEntityItemIds(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ClassificationGroup})">
            <summary>
            Gets the entity item IDs.
            </summary>
            <param name="entityIds">The entity IDs</param>
            <returns>Collection of entity item IDs</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductFieldRepository">
            <summary>
            Defines the repository that stores the product artifacts as links
            from the product items to the artifact items.
            The link is stored in a field of the product item.
            You can store any type of product artifact as a field value in the product item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepository.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductFieldRepository"/> class.
            </summary>
            <param name="productFieldName">Name of the product field</param>
            <param name="productPrefix">The product prefix</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductFieldRepository.GetEntityItemIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the entity item IDs.
            </summary>
            <param name="entityIds">The entity IDs</param>
            <returns>A collection of entity item IDs</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductRelationsRepository">
            <summary>
            Represents the repository that stores the product relations as sub-items
            of the Relations sub-folder of the product item.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1">
            <summary>
            Defines the base abstract class for all repositories that store the product artifacts as sub-items of
            of the product item sub-folders.
            You can use the descendants of this class to store any type of product artifact that is stored as a sub-item.
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.productFolderName">
            <summary>
            The product folder name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.productEntityTemplateId">
            <summary>
            The product entity template ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1._productPrefix">
            <summary>
            The product prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1"/> class.
            </summary>
            <param name="productFolderName">Name of the product folder</param>
            <param name="productPrefix">The product prefix</param>
            <param name="productEntityTemplateId">The product entity template ID</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.SaveProductEntities(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Saves the product artifacts sub-items of the product item sub-folders and 
            Removes all obsolete sub-items after every round of the synchronization.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <param name="entities">The entities</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.CreateOrUpdateEntity(System.String,`0,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Creates or updates the entity.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <param name="entity">The entity</param>
            <param name="productEntityFolderItem">The product entity folder item</param>
            <param name="productEntityTemplateItem">The product entity template item</param>
            <param name="entityTypeRootItem">The entity type root item</param>
            <returns>The created or updated entity item</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.DeleteObsoleteEntityItems(System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item},Sitecore.Data.Items.Item)">
            <summary>
            Deletes the obsolete entity items.
            </summary>
            <param name="entityItems">The entity items</param>
            <param name="productEntityFolderItem">The product entity folder item</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.GetTypesRootItem">
            <summary>
            Gets the types root item.
            </summary>
            <returns>The root item of entity types</returns>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductItemRepositoryBase`1.ProductPrefix">
            <summary>
            Gets or sets the product prefix
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductRelationsRepository.relationTypesRootItemId">
            <summary>
            The product relation types root item ID.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRelationsRepository.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductRelationsRepository"/> class.
            </summary>
            <param name="productFolderName">Name of the product folder</param>
            <param name="productPrefix">The product prefix</param>
            <param name="productEntityTemplateId">The template ID of the product entity </param>
            <param name="relationTypesRootItemId">The root item ID of the product relation types</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRelationsRepository.CreateOrUpdateEntity(System.String,Sitecore.Commerce.Entities.Products.RelationType,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Creates or updates the entity.
            </summary>
            <param name="externalProductId">The external product ID</param>
            <param name="entity">The entity</param>
            <param name="productEntityFolderItem">The product entity folder item</param>
            <param name="productEntityTemplateItem">The product entity template item</param>
            <param name="entityTypeRootItem">The root item of the entity type</param>
            <returns>The created or updated entity item</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRelationsRepository.GetTypesRootItem">
            <summary>
            Gets the root item of the entity types.
            </summary>
            <returns>The root item of the entity types</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRelationsRepository.DeleteObsoleteEntityItems(System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item},Sitecore.Data.Items.Item)">
            <summary>
            Deletes the obsolete entity items.
            </summary>
            <param name="entityItems">The entity items</param>
            <param name="productEntityFolderItem">The product entity folder item</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductRepository">
            <summary>
            Defines default implementation of product repository.
            For more information about the product repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductClassifications(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ClassificationGroup})">
            <summary>
            Saves the product classifications.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="classificationGroups">The classification groups.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductManufacturers(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Saves the product manufacturers.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="manufacturerIds">The manufacturer IDs.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductDivisions(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Saves the product divisions.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="divisionIds">The division IDs.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductTypes(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Saves the product types.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="productTypeIds">The product type IDs.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductRelations(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.RelationType})">
            <summary>
            Saves the product relations.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="relationTypes">The relation types.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductResources(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ProductResource})">
            <summary>
            Saves the product resources.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="productResources">The product resources.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductGlobalSpecifications(System.String,System.Collections.Generic.IDictionary{Sitecore.Data.ID,Sitecore.Commerce.Entities.Products.Specification})">
            <summary>
            Saves the product specifications.
            </summary>
            <param name="externalProductId">The external product ID.</param>
            <param name="productSpecifications">
            The product specifications dictionary.
            Contains ID of related specification item in key and Specification entity in value.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductClassificationsSpecifications(System.String,System.Collections.Generic.IDictionary{Sitecore.Data.ID,Sitecore.Commerce.Entities.Products.Specification})">
            <summary>
            Saves the product classifications specifications.
            </summary>
            <param name="externalProductId">The external product identifier.</param>
            <param name="productSpecifications">The product specifications.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductTypeSpecifications(System.String,System.Collections.Generic.IDictionary{Sitecore.Data.ID,Sitecore.Commerce.Entities.Products.Specification})">
            <summary>
            Saves the product type specifications.
            </summary>
            <param name="externalProductId">The external product identifier.</param>
            <param name="productSpecifications">The product specifications.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.DeleteProduct(System.String)">
            <summary>
            Deletes the product.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns><c>true</c> if the specified item was deleted; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.MoveToImmediateRoot(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Moves to immediate root.
            </summary>
            <param name="root">The root.</param>
            <param name="entityItemImmediateRoot">The entity item immediate root.</param>
            <param name="entityItem">The entity item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.GetEntityItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets the entity items.
            </summary>
            <param name="repositoryItem">The repository item.</param>
            <returns>The list of entity items.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.PopulateEntity(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Product)">
            <summary>
            Assigns values for the entity's name, external ID, short description, full description, identification, manufacturers, product types, devisions, classification groups, resources, product specifications and relation types.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Product)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>The entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Product)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.SaveProductSpecifications(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,Sitecore.Commerce.Entities.Products.Specification}},Sitecore.Commerce.Data.Products.IProductRelatedEntityRepository{System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,Sitecore.Commerce.Entities.Products.Specification}})">
            <summary>
            Saves the product specifications.
            </summary>
            <param name="externalProductId">The external product identifier.</param>
            <param name="productSpecifications">The product specifications.</param>
            <param name="specificationsRepository">The specifications repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.PopulateEntityFieldCollections(Sitecore.Data.Items.Item,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Fills the entity collections.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="collectionMemberType">Type of the collection member.</param>
            <param name="properties">The properties.</param>
            <returns>
            The collection of the product entities.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.PopulateEntitySubItemCollections(Sitecore.Data.Items.Item,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Fills the resources.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="itemName">Name of the item.</param>
            <param name="collectionMemberType">Type of the collection member.</param>
            <param name="properties">The properties.</param>
            <returns>
            The collection of the product entities.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductRepository.PopulateProductRelations(Sitecore.Data.Items.Item)">
            <summary>
            Fills the product relations.
            </summary>
            <param name="entityItem">The entity item.</param>
            <returns>The list of product relation types.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.ManufacturerRepository">
            <summary>
            Gets or sets the manufacturer repository.
            </summary>
            <value>
            The manufacturer repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.DivisionRepository">
            <summary>
            Gets or sets the division repository.
            </summary>
            <value>
            The division repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.TypeRepository">
            <summary>
            Gets or sets the type repository.
            </summary>
            <value>
            The type repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.ClassificationsRepository">
            <summary>
            Gets or sets the classifications repository.
            </summary>
            <value>
            The classifications repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.ResourcesRepository">
            <summary>
            Gets or sets the resources repository.
            </summary>
            <value>
            The resources repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.GlobalSpecificationsRepository">
            <summary>
            Gets or sets the specifications repository.
            </summary>
            <value>
            The specifications repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.ClassificationsSpecificationsRepository">
            <summary>
            Gets or sets the classifications specifications repository.
            </summary>
            <value>
            The classifications specifications repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.TypeSpecificationsRepository">
            <summary>
            Gets or sets the type specifications repository.
            </summary>
            <value>
            The type specifications repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.RelationsRepository">
            <summary>
            Gets or sets the relations repository.
            </summary>
            <value>
            The relations repository.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Data.Products.ProductRepository.ProductsIndex">
            <summary>
            Gets or sets the index of the products.
            </summary>
            <value>The index of the products.</value>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductResourcesRepository">
            <summary>
            The product resource repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductResourcesRepository.productResourceTypesRootItemId">
            <summary>
            The product resource types root item id.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ProductResourcesRepository.resourcePrefix">
            <summary>
            The resource prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductResourcesRepository.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductResourcesRepository"/> class.
            </summary>
            <param name="productFolderName">Name of the product folder.</param>
            <param name="productPrefix">The product prefix.</param>
            <param name="productEntityTemplateId">The product entity template id.</param>
            <param name="productResourceTypesRootItemId">The product resource types root item id.</param>
            <param name="resourcePrefix">The resource prefix.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductResourcesRepository.CreateOrUpdateEntity(System.String,Sitecore.Commerce.Entities.Products.ProductResource,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Creates or updates the entity.
            </summary>
            <param name="externalProductId">The external product id.</param>
            <param name="entity">The entity.</param>
            <param name="productEntityFolderItem">The product entity folder item.</param>
            <param name="productEntityTemplateItem">The product entity template item.</param>
            <param name="entityTypeRootItem">The entity type root item.</param>
            <returns>Created or updated entity item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductResourcesRepository.GetTypesRootItem">
            <summary>
            Gets the types root item.
            </summary>
            <returns>The entity types root item.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ProductSpecificationsRepository">
            <summary>
            The product specifications repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductSpecificationsRepository.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ProductSpecificationsRepository"/> class.
            </summary>
            <param name="productFolderName">Name of the product folder.</param>
            <param name="productPrefix">The product prefix.</param>
            <param name="productEntityTemplateId">The product entity template id.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ProductSpecificationsRepository.CreateOrUpdateEntity(System.String,System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,Sitecore.Commerce.Entities.Products.Specification},Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Data.Items.Item)">
            <summary>
            Creates or updates the entity.
            </summary>
            <param name="externalProductId">The external product id.</param>
            <param name="entity">The entity.</param>
            <param name="productEntityFolderItem">The product entity folder item.</param>
            <param name="productEntityTemplateItem">The product entity template item.</param>
            <param name="entityTypeRootItem">The entity type root item.</param>
            <returns>Created or updated entity item.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.DelayedSyncProductRepository">
            <summary>
            The delayed sync product repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.DelayedSyncProductRepository.SyncObj">
            <summary>
            The synchronize object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DelayedSyncProductRepository.Save(Sitecore.Commerce.Entities.Products.Product,System.Boolean)">
            <summary>
            Saves the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="moveToBucket">if set to <c>true</c> [move to bucket].</param>
            <returns>The resulting entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DelayedSyncProductRepository.GetDelayedRepositoryRootItem">
            <summary>
            Gets the delayed repository root item.
            </summary>
            <returns>the item</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.DelayedSyncProductRepositoryHelper">
            <summary>
                The temp product repository helper.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.DelayedSyncProductRepositoryHelper.DelayedSyncProductRepositoryName">
            <summary>
                The temporary product repository name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DelayedSyncProductRepositoryHelper.GetDelayedSyncRepositoryItem(Sitecore.Data.Items.Item)">
            <summary>
                Gets the temporary repository item.
            </summary>
            <param name="rootRepositoryItem">The root repository item.</param>
            <returns>
                The temporary repository item
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ResourceTypes">
            <summary>
            Presents the constant values of the different types of the product resources.
            These constant values can be:
            <list type="bullet">
            <item>
            <description>
            Images in the Media Library. In this case, the constant value is Image.
            </description>
            </item>
            <item>
            <description>
            Non-image items in the Media Library, such as .zip and .pdf files. In this case, the constant value is Download.
            </description>
            </item>
            </list>
            The links to the external resources are also defined as downloads.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ResourceTypes.Download">
            <summary>
            The resource type: a download files, such as .zip and .pdf files.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ResourceTypes.Image">
            <summary>
            The resource type: image in Media Library.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ResourceRepository">
            <summary>
            Represents the repository that saves resources as items in the Media Library.
            This class:
            <list type="bullet">
            <item>
            <description>
            Receives the stream of bytes that define a resource. This stream contains the name and the MIME-type of a resource.
            </description>
            </item>
            <item>
            <description>
            Generates different types of items according to the MIME-type of the resource.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.ResourceRepository.mediaProvider">
            <summary>
            The media provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ResourceRepository.#ctor(Sitecore.Resources.Media.MediaProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ResourceRepository"/> class.
            </summary>
            <param name="mediaProvider">The media provider</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ResourceRepository.Save(Sitecore.Commerce.Entities.Products.Resource)">
            <summary>
            Saves the resource as an item in the Media Library.
            This class:
            <list type="bullet">
            <item>
            <description>
            Receives the stream of bytes that define a resource. This stream contains the name and the MIME-type of a resource.
            </description>
            </item>
            <item>
            <description>
            Generates different types of items according to the MIME-type of the resource.
            </description>
            </item>
            </list>
            </summary>
            <param name="resource">The resource</param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Entities.Products.Resource"/> object.
            </returns>
            TODO:[High] What is the reason in keeping silence when no data present?
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ResourceRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Resource)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ResourceRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Resource)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ResourceRepository.ProcessEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Resource)">
            <summary>
            Processes the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
            <returns>
            The result of entity item processing.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.DefaultValueRepository">
            <summary>
            Defines the repository which is able to save specification default values
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValueRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item id.
            </summary>
            <param name="root">The root.</param>
            <param name="entityKey">The entity key.</param>
            <returns>Entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValueRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Specification)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValueRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.Specification)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.ParentBasedSpecificationRepository">
            <summary>
            Defines the repository that stores the global product specifications.
            This class implements the SpecificationRepository class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.SpecificationRepository">
            <summary>
            Defines the repository that stores the global product specifications
            as items in the content tree.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.SpecificationRepository.specificationTemplateId">
            <summary>
            The specification template ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.SpecificationRepository.specificationLookupTemplateId">
            <summary>
            The specification lookup template ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.SpecificationRepository.specificationOptionRepository">
            <summary>
            The specification option repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationRepository.#ctor(System.String,System.String,Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.GlobalSpecificationOption})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.SpecificationRepository"/> class.
            </summary>
            <param name="specificationTemplateId">The specification template ID</param>
            <param name="specificationLookupTemplateId">The division template ID</param>
            <param name="specificationOptionRepository">The repository of the specification option</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecification)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item</param>
            <param name="entity">The entity</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecification)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root</param>
            <param name="entity">The entity</param>
            <returns>Entity item name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationRepository.GetEntityItemTemplateId(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecification)">
            <summary>
            Gets the entity item template ID.
            </summary>
            <param name="root">The root</param>
            <param name="entity">The entity</param>
            <returns>Entity item template name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ParentBasedSpecificationRepository.#ctor(System.String,System.String,Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.GlobalSpecificationOption})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.ParentBasedSpecificationRepository"/> class.
            </summary>
            <param name="specificationTemplateId">The specification template ID</param>
            <param name="specificationLookupTemplateId">The division template ID</param>
            <param name="specificationOptionRepository">The specification option repository</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.ParentBasedSpecificationRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item ID.
            This method uses the ID of the root item and entity key to generate the ID of the newly created entity item.
            </summary>
            <param name="root">The root item</param>
            <param name="entityKey">The entity key</param>
            <returns>The ID of the Entity item</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.SpecificationOptionRepository">
            <summary>
            Defines the repository that is able to save global specification options.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationOptionRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item id.
            </summary>
            <param name="root">The root.</param>
            <param name="entityKey">The entity key.</param>
            <returns>Entity item id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationOptionRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecificationOption)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root.</param>
            <param name="entity">The entity.</param>
            <returns>Entity item name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationOptionRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecificationOption)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.SpecificationsRepository">
            <summary>
            Defines the repository that stores global specifications as items in the content tree.
            The product items can then be linked to specifications items.
            For more information about the specifications repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.SpecificationsRepository.specificationLookupsFolderName">
            <summary>
            The specification lookups folder name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.SpecificationsRepository.globalSpecificationRepository">
            <summary>
            The global specification repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationsRepository.#ctor(System.String,Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.GlobalSpecification})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.SpecificationsRepository"/> class.
            </summary>
            <param name="specificationLookupsFolderName">Name of the specification lookups folder.</param>
            <param name="globalSpecificationRepository">The global specification repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationsRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item ID.
            </summary>
            <param name="root">The root</param>
            <param name="entityKey">The entity key</param>
            <returns>The ID for the entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationsRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecifications)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root</param>
            <param name="entity">The entity</param>
            <returns>Entity item name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.SpecificationsRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.GlobalSpecifications)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item</param>
            <param name="entity">The entity</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.DefaultValuesRepository">
            <summary>
            Defines the repository to store the default values as items in the content tree.
            A default value is another type of global specification. The product items can be linked to specifications items.
            The items that represent default values are stored under the same repository path as for the global specification and
            based on the same template.
            For more information about the default values repository, see the Sitecore.Commerce.Products.config file.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.DefaultValuesRepository.specificationLookupsFolderName">
            <summary>
            The specification lookups folder name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Data.Products.DefaultValuesRepository.globalSpecificationRepository">
            <summary>
            The global specification repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValuesRepository.#ctor(System.String,Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Specification})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Products.DefaultValuesRepository"/> class.
            </summary>
            <param name="specificationLookupsFolderName">Name of the specification lookups folder</param>
            <param name="globalSpecificationRepository">The global specification repository</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValuesRepository.GetEntityItemId(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the entity item ID.
            </summary>
            <param name="root">The root</param>
            <param name="entityKey">The entity key</param>
            <returns>The ID of the entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValuesRepository.GetEntityItemName(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ProductSpecifications)">
            <summary>
            Gets the name of the entity item.
            </summary>
            <param name="root">The root</param>
            <param name="entity">The entity</param>
            <returns>Entity item name</returns>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.DefaultValuesRepository.UpdateEntityItem(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Products.ProductSpecifications)">
            <summary>
            Updates the entity item.
            </summary>
            <param name="entityItem">The entity item</param>
            <param name="entity">The entity</param>
        </member>
        <member name="T:Sitecore.Commerce.Data.Products.XmlUtility">
            <summary>
            Defines the utility that is created to parse the string that represents XML node,
            check whether the specified attribute exists and their value represents GUID
            and return this GUID value.
            The main purpose is to get ID of the media item from the "src" attribute
            of the value of the image field.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Products.XmlUtility.GetGuidFromAttributeOfXmlNodeString(System.String,System.String)">
            <summary>
            Parses the string that represents XML node,
            check whether the specified attribute exists and their value represents GUID
            and return this GUID value.
            </summary>
            <param name="xmlNodeString">The XML string.</param>
            <param name="attributeName">Name of the attribute.</param>
            <returns>
            The GUID value.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.CartParty">
            <summary>
            Defines the CartParty class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.MappedEntity">
            <summary>
            Defines the base class for any object that can be managed by a unique string identifier.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Entity">
            <summary>
            Defines the base class used by all Commerce entities.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Entity.SetPropertyValue(System.String,System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <param name="key">The key value to add to the entity Properties collection.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Entity.SetPropertyValue(System.String)">
            <summary>
            Sets a property value.
            </summary>
            <param name="key">The key value to add to the entity Properties collection.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Entity.GetPropertyValue(System.String)">
            <summary>
            Gets a property value.
            </summary>
            <param name="key">The key value for the entity Properties collection.</param>
            <returns>The entity property value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Entity.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Entity.RemoveAllPropertiesFromEntity(Sitecore.Commerce.Entities.Entity)">
            <summary>
            Removes all parties from entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Entity.RemoveCollectionProperties``1(System.Collections.ObjectModel.ReadOnlyCollection{``0})">
            <summary>
            Removes the children properties.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <param name="children">The children.</param>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Entity.Properties">
            <summary>
            Gets or sets the dictionary used to hold all of the simple properties
            (i.e. strings, int, etc…) associated with the commerce entity.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.MappedEntity.ExternalId">
            <summary>
            Gets or sets the external ID. The external ID is a unique identifier for the user in the external commerce system.  
            You can use the API of the external commerce system to get a reference to the user.
            The external ID is not assigned to any value until an account has been created.
            </summary>
            <value>The external ID</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartParty.PartyID">
            <summary>
            Gets or sets the party identifier.
            </summary>
            <value>
            The party identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartParty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.PaymentInfo">
            <summary>
            Defines the PaymentInfo class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.PaymentInfo.LineIDs">
            <summary>
            Gets or sets the line item id list.
            </summary>
            <value>
            The line item id list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.PaymentInfo.PaymentMethodID">
            <summary>
            Gets or sets the payment method identifier.
            </summary>
            <value>
            The payment method identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.PaymentInfo.PaymentProviderID">
            <summary>
            Gets or sets the payment provider identifier.
            </summary>
            <value>
            The payment provider identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.PaymentInfo.PartyID">
            <summary>
            Gets or sets the party identifier.
            </summary>
            <value>
            The party identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.ShippingInfo">
            <summary>
            Defines the ShippingInfo class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.ShippingInfo.LineIDs">
            <summary>
            Gets or sets the line item id list.
            </summary>
            <value>
            The line item id list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.ShippingInfo.ShippingMethodID">
            <summary>
            Gets or sets the shipping method identifier.
            </summary>
            <value>
            The shipping method identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.ShippingInfo.ShippingProviderID">
            <summary>
            Gets or sets the shipping provider identifier.
            </summary>
            <value>
            The shipping provider identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.ShippingInfo.PartyID">
            <summary>
            Gets or sets the party identifier.
            </summary>
            <value>
            The party identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Catalog.SortDirection">
            <summary>
            Defines the SortDirection class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.EnumType`1">
            <summary>
            Defines the EnumType generic class./>
            </summary>
            <typeparam name="T">Type to be implemented.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EnumType`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.EnumType`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EnumType`1.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.EnumType`1"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EnumType`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EnumType`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EnumType`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.EnumType`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.EnumType`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Catalog.SortDirection"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Catalog.SortDirection"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.op_Implicit(Sitecore.Commerce.Entities.Catalog.SortDirection)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Sitecore.Commerce.Entities.Catalog.SortDirection"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.Catalog.SortDirection">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Sitecore.Commerce.Entities.Catalog.SortDirection"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.op_Equality(Sitecore.Commerce.Entities.Catalog.SortDirection,Sitecore.Commerce.Entities.Catalog.SortDirection)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.op_Inequality(Sitecore.Commerce.Entities.Catalog.SortDirection,Sitecore.Commerce.Entities.Catalog.SortDirection)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Catalog.SortDirection.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Catalog.SortDirection.Ascending">
            <summary>
            Gets the ascending enum value.
            </summary>
            <value>
            The ascending enum.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Catalog.SortDirection.Descending">
            <summary>
            Gets the descending enum value.
            </summary>
            <value>
            The descending enum value.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Customers.CommerceCustomer">
            <summary>
            Represents a person in business-to-consumer scenarios and a company in business-to-business scenarios.
            The CommerceCustomer class implements the Entity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CommerceCustomer.shops">
            <summary>
            Gets or sets the shops that the customer has access to.
            </summary>
            <value>
            The shops.
            </value>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CommerceCustomer.users">
            <summary>
            Gets or sets the list of user ids that the customer is associated with.
            </summary>
            <value>
            The user ids.
            </value>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CommerceCustomer.customerParties">
            <summary>
            The customer parties
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Customers.CommerceCustomer.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceCustomer.Name">
            <summary>
            Gets or sets the name of the customer.
            </summary>
            <value>
            The name of the customer.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceCustomer.IsDisabled">
            <summary>
            Gets or sets a value indicating whether [is disabled].
            </summary>
            <value>
              <c>true</c> if [is disabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceCustomer.Shops">
            <summary>
            Gets or sets the shops.
            </summary>
            <value>The shops.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceCustomer.Parties">
            <summary>
            Gets or sets  customer parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceCustomer.Users">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>The user ids.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Customers.CommerceUser">
            <summary>
            Represents a user account. A user is a visitor to a webshop that has identified themselves by creating a login account. 
            The CommerceUser entity is always extended to include custom information that is specific to the external commerce system.
            The CommerceUser class implements the Entity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CommerceUser.shops">
            <summary>
            The shops that the user has access to.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CommerceUser.customers">
            <summary>
            The ids of the customers that the user is associated with.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.FirstName">
            <summary>
            Gets or sets the first name of the user.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.LastName">
            <summary>
            Gets or sets the last name of the user.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.Email">
            <summary>
            Gets or sets the email of the user.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.Comment">
            <summary>
            Gets or sets the text that represents the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.IsDisabled">
            <summary>
            Gets or sets a value indicating whether this instance is disabled.
            </summary>
            <value>
            <c>true</c> if this instance is disabled.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.CreationDate">
            <summary>
            Gets or sets the time stamp that indicates the creation date and time of the account.
            </summary>
            <value>
            The creation date and time.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.LastActivityDate">
            <summary>
            Gets or sets the time stamp that indicates the last time that the user was authenticated or accessed the shop.
            </summary>
            <value>
            The last activity date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.LastLoginDate">
            <summary>
            Gets or sets the time stamp that indicates the last time that the user was authenticated.
            </summary>
            <value>
            The last login date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.LastDisabledDate">
            <summary>
            Gets or sets the time stamp that indicates the last time that the user account was disabled.
            </summary>
            <value>
            The last disabled date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.LastPasswordChangedDate">
            <summary>
            Gets or sets the time stamp that indicates the last time that the user's password was updated.
            </summary>
            <value>
            The last password changed date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.Shops">
            <summary>
            Gets or sets the shops that the user has access to.
            </summary>
            <value>
            The shops.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CommerceUser.Customers">
            <summary>
            Gets or sets the customer acccount ids that the visitor can use.
            </summary>
            <value>
            The customer account.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.EmailParty">
            <summary>
            Defines the EmailParty class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Party">
            <summary>
            Defines the Party class shared by Customers and Orders.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.PartyId">
            <summary>
            Gets or sets the party identifier.
            </summary>
            <value>
            The party identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.Address1">
            <summary>
            Gets or sets the address1.
            </summary>
            <value>
            The address1.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.Address2">
            <summary>
            Gets or sets the address2.
            </summary>
            <value>
            The address2.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.ZipPostalCode">
            <summary>
            Gets or sets the zip postal code.
            </summary>
            <value>
            The zip postal code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>
            The city.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>
            The country.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
            <value>
            The phone number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Party.IsPrimary">
            <summary>
            Gets or sets a value indicating whether this instance is primary.
            </summary>
            <value>
            <c>true</c> if this instance is primary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.EmailParty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.EmailParty.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.GiftCards.GiftCard">
            <summary>
            Gift card entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.Balance">
            <summary>
            Gets or sets the balance.
            </summary>
            <value>
            The balance.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.OriginalAmount">
            <summary>
            Gets or sets the original amount.
            </summary>
            <value>
            The original amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCard.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.GiftCards.GiftCardPaymentInfo">
            <summary>
            Commerce gift card payment info entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.GiftCards.GiftCardPaymentInfo.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockLocation">
            <summary>
            Represents the stock locations of a product.  
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockLocation.LocationId">
            <summary>
            Gets or sets the location ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockLocation.Name">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard">
            <summary>
            Loyalty card entity
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.UserId">
            <summary>
            Gets or sets the user ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.CardNumber">
            <summary>
            Gets or sets the card number.
            </summary>
            <value>
            The card number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.ProgramIds">
            <summary>
            Gets or sets the program identifiers.
            </summary>
            <value>
            The program identifiers.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard.RewardPoints">
            <summary>
            Gets or sets the reward points.
            </summary>
            <value>
            The reward points.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramStatus">
            <summary>
            Defines the LoyaltyProgramStatus class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram">
            <summary>
            Loyalty group entity
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgram.LoyaltyTiers">
            <summary>
            Gets or sets the loyalty tiers.
            </summary>
            <value>
            The loyalty tiers.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramStatus.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramStatus.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramStatus.LoyaltyCardId">
            <summary>
            Gets or sets the loyalty card identifier.
            </summary>
            <value>
            The loyalty card identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramStatus.LoyaltyCardTiers">
            <summary>
            Gets or sets the loyalty card tiers.
            </summary>
            <value>
            The loyalty card tiers.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary">
            <summary>
            Defines the LoyaltyProgramSummary class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary.LoyaltyProgramId">
            <summary>
            Gets or sets the loyalty program identifier.
            </summary>
            <value>
            The loyalty program identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyProgramSummary.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardPaymentInfo">
            <summary>
            Commerce loyalty card payment info entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardPaymentInfo.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTier">
            <summary>
            Loyalty card tier entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTier.TierId">
            <summary>
            Gets or sets the tier identifier.
            </summary>
            <value>
            The tier identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTier.ValidFrom">
            <summary>
            Gets or sets the valid from.
            </summary>
            <value>
            The valid from.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTier.ValidTo">
            <summary>
            Gets or sets the valid to.
            </summary>
            <value>
            The valid to.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction">
            <summary>
            Loyalty card transaction entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.LoyaltyCardId">
            <summary>
            Gets or sets the card identifier.
            </summary>
            <value>
            The card number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.RewardPointType">
            <summary>
            Gets or sets the type of the reward point.
            </summary>
            <value>
            The type of the reward point.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.RewardPointAmount">
            <summary>
            Gets or sets the reward point amount.
            </summary>
            <value>
            The reward point amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.EntryType">
            <summary>
            Gets or sets the type of the entry.
            </summary>
            <value>
            The type of the entry.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.ExpirationDate">
            <summary>
            Gets or sets the expiration date.
            </summary>
            <value>
            The expiration date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardTransaction.EntryDateTime">
            <summary>
            Gets or sets the entry date time.
            </summary>
            <value>
            The entry date time.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint">
            <summary>
            Loyalty reward point entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.RewardPointType">
            <summary>
            Gets or sets the type of the reward point.
            </summary>
            <value>
            The type of the reward point.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.CurrencyCode">
            <summary>
            Gets or sets the reward point currency.
            </summary>
            <value>
            The reward point currency.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.IssuedPoints">
            <summary>
            Gets or sets the issued points.
            </summary>
            <value>
            The issued points.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.UsedPoints">
            <summary>
            Gets or sets the used points.
            </summary>
            <value>
            The used points.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.ExpiredPoints">
            <summary>
            Gets or sets the expired points.
            </summary>
            <value>
            The expired points.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPoint.ActivePoints">
            <summary>
            Gets or sets the active points.
            </summary>
            <value>
            The active points.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType">
            <summary>
            Defines the LoyaltyRewardPointEntryType enum type.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.op_Implicit(Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.op_Equality(Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType,Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.op_Inequality(Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType,Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.None">
            <summary>
            Gets the unassigned reward point entry type.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.Earn">
            <summary>
            Gets the 'Earn' reward point entry type.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyRewardPointEntryType.Redeem">
            <summary>
            Gets the 'Redeem' reward point entry type.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyTier">
            <summary>
            Loyalty tier entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyTier.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyTier.TierId">
            <summary>
            Gets or sets the tier identifier.
            </summary>
            <value>
            The tier identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyTier.TierLevel">
            <summary>
            Gets or sets the tier level.
            </summary>
            <value>
            The tier level.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.PointBasedLoyaltyTier">
            <summary>
            Defines the PointBasedLoyaltyTier class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.PointBasedLoyaltyTier.PointsNeeded">
            <summary>
            Gets or sets the points need to move to next tier or the current tier.
            </summary>
            <value>
            The points are returned.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType">
            <summary>
            Defines the RewardPointType class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.NotRedeemableFlag">
            <summary>
            The reward point is not redeemable
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.RedeemableFlag">
            <summary>
            The reward point is redeemable
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.op_Implicit(Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.op_Equality(Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType,Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.op_Inequality(Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType,Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.NotRedeemable">
            <summary>
            Gets the not redeemable reward point type.
            </summary>
            <value>
            The not redeemable reward point type.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.LoyaltyPrograms.RewardPointType.Redeemable">
            <summary>
            Gets the redeemable reward point type.
            </summary>
            <value>
            The redeemable reward point type.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Payments.PaymentLookup">
            <summary>
            Represents a payment method costs lookup object.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentLookup.OptionId">
            <summary>
            Gets or sets the payment option Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentLookup.MethodId">
            <summary>
            Gets or sets the payment method Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentLookup.LineItemIds">
            <summary>
            Gets or sets the line item ids.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.LineShippingOption">
            <summary>
            Shipping option entity
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.LineShippingOption.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Shipping.LineShippingOption"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.LineShippingOption.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.LineShippingOption.LineId">
            <summary>
            Gets or sets the line identifier.
            </summary>
            <value>
            The line identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.LineShippingOption.ShippingOptions">
            <summary>
            Gets or sets the shipping options.
            </summary>
            <value>
            The shipping options.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Orders.Order">
            <summary>
            Defines the Order class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.Cart">
            <summary> 
            Represents a group of products that a customer wants to buy.
            The customer uses the cart to view its content and decide on any further personalization. 
            The Cart class implements the CartBase class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.CartBase">
            <summary>
            Represents a data summary of the main cart. The CartBase class is used as a return type for the GetCarts method.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Carts.CartBase.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.UserId">
            <summary>
            Gets or sets the user ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.CustomerId">
            <summary>
            Gets or sets the customer ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.Name">
            <summary>
            Gets or sets the cart name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.IsLocked">
            <summary>
            Gets or sets a value that indicates whether the cart is locked.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.Status">
            <summary>
            Gets or sets the cart status.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.CartType">
            <summary>
            Gets or sets the type of cart.
            <example>
            <list type="bullet">
            <item>
            <description>
            Regular
            </description>
            </item>
            <item>
            <description>
            Wish list
            </description>
            </item>
            </list>
            </example>
            </summary>
            <value>The type of the cart.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.BuyerCustomerParty">
            <summary>
            Gets or sets the buyer customer party.
            </summary>
            <value>
            The buyer customer party.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.AccountingCustomerParty">
            <summary>
            Gets or sets the accounting customer party.
            </summary>
            <value>
            The accounting customer party.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.LoyaltyCardID">
            <summary>
            Gets or sets the loyalty card identifier.
            </summary>
            <value>
            The loyalty card identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartBase.Email">
            <summary>
            Gets or sets the email address.
            </summary>
            <value>
            The email address.
            </value>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Carts.Cart.adjustments">
            <summary>
            Represents a collection of adjustments that describe any differences between the total and the sum of the prices of the individual cart line items.
            Examples are coupon codes that are manually triggered and shipping surcharges that are automatically triggered.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Carts.Cart.cartLines">
            <summary>
            Represents the cart lines in the cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Carts.Cart.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.Cart.Adjustments">
            <summary>
            Gets or sets the adjustments that describe any differences between the total and the sum of the prices of the individual cart line items.
            Examples are coupon codes that are manually triggered and shipping surcharges that are automatically triggered.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.Cart.Lines">
            <summary>
            Gets or sets the sublines of the cart line.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.Cart.Total">
            <summary>
            Gets or sets the total for the products in the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.Cart.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.Cart.Shipping">
            <summary>
            Gets or sets the shipping list.
            </summary>
            <value>
            The shipping list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.Cart.Payment">
            <summary>
            Gets or sets the payment list.
            </summary>
            <value>
            The payment list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Orders.Order.OrderID">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Orders.Order.OrderDate">
            <summary>
            Gets or sets the order date.
            </summary>
            <value>
            The order date.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Orders.OrderHeader">
            <summary>
            Defines the OrderHeader class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Orders.OrderHeader.OrderID">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Orders.OrderHeader.OrderDate">
            <summary>
            Gets or sets the order date.
            </summary>
            <value>
            The order date.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Payments.PaymentMethod">
            <summary>
            Defines the PaymentMethod class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentMethod.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentMethod.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentMethod.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentMethod.PaymentOptionId">
            <summary>
            Gets or sets the payment option identifier.
            </summary>
            <value>
            The payment option identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Payments.PaymentOption">
            <summary>
            Defines the PaymentOption class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOption.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOption.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOption.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOption.PaymentOptionType">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Payments.PaymentOptionType">
            <summary>
            Represents the payment option type.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Payments.PaymentOptionType"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Payments.PaymentOptionType"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.op_Implicit(Sitecore.Commerce.Entities.Payments.PaymentOptionType)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Sitecore.Commerce.Entities.Payments.PaymentOptionType"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.Payments.PaymentOptionType">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Sitecore.Commerce.Entities.Payments.PaymentOptionType"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.op_Equality(Sitecore.Commerce.Entities.Payments.PaymentOptionType,Sitecore.Commerce.Entities.Payments.PaymentOptionType)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.op_Inequality(Sitecore.Commerce.Entities.Payments.PaymentOptionType,Sitecore.Commerce.Entities.Payments.PaymentOptionType)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Payments.PaymentOptionType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOptionType.None">
            <summary>
            Gets the Undefined payment option type.
            </summary>
            <value>
            The none.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOptionType.PayCard">
            <summary>
            Gets the pay card payment option type.
            </summary>
            <value>
            The pay card.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOptionType.PayLoyaltyCard">
            <summary>
            Gets the pay loyalty card payment option type.
            </summary>
            <value>
            The pay loyalty card.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentOptionType.PayGiftCard">
            <summary>
            Gets the pay gift card payment option type.
            </summary>
            <value>
            The pay gift card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.ShippingLookup">
            <summary>
            Represents a shipping costs lookup object.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingLookup.OptionId">
            <summary>
            Gets or sets the shipping option Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingLookup.MethodId">
            <summary>
            Gets or sets the shipping method Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingLookup.LineItemIds">
            <summary>
            Gets or sets the line item ids.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.ShippingMethod">
            <summary>
            Defines the ShippingMethod class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingMethod.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingMethod.Name">
            <summary>
            Gets or sets the name of the shipping method.
            </summary>
            <value>
            The name of the shipping method.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingMethod.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingMethod.ShippingOptionId">
            <summary>
            Gets or sets the shipping option identifier.
            </summary>
            <value>
            The shipping option identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.ShippingMethodPerItem">
            <summary>
            Defines the ShippingMethodPerItem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingMethodPerItem.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingMethodPerItem.LineId">
            <summary>
            Gets or sets the line identifier.
            </summary>
            <value>
            The line identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingMethodPerItem.ShippingMethods">
            <summary>
            Gets or sets the shipping methods.
            </summary>
            <value>
            The shipping methods.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.ShippingOption">
            <summary>
            Shipping option entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOption.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOption.ShippingOptionType">
            <summary>
            Gets or sets the type of the shipping option.
            </summary>
            <value>
            The type of the shipping option.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOption.Name">
            <summary>
            Gets or sets the name of the shipping option.
            </summary>
            <value>
            The name of the shipping option.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOption.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.ShippingOptionType">
            <summary>
            Represents the shipping option type.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Shipping.ShippingOptionType"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Shipping.ShippingOptionType"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.op_Implicit(Sitecore.Commerce.Entities.Shipping.ShippingOptionType)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Sitecore.Commerce.Entities.Shipping.ShippingOptionType"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.Shipping.ShippingOptionType">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Sitecore.Commerce.Entities.Shipping.ShippingOptionType"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.op_Equality(Sitecore.Commerce.Entities.Shipping.ShippingOptionType,Sitecore.Commerce.Entities.Shipping.ShippingOptionType)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.op_Inequality(Sitecore.Commerce.Entities.Shipping.ShippingOptionType,Sitecore.Commerce.Entities.Shipping.ShippingOptionType)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.None">
            <summary>
            Gets the Undefined shipping option type.
            </summary>
            <value>
            The none.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.ShipToAddress">
            <summary>
            Gets the ship to address shipping option type.
            </summary>
            <value>
            The ship to address.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.PickupFromStore">
            <summary>
            Gets the pickup from store shipping option type.
            </summary>
            <value>
            The pickup from store.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.ElectronicDelivery">
            <summary>
            Gets the electronic delivery shipping option type.
            </summary>
            <value>
            The electronic delivery.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingOptionType.DeliverItemsIndividually">
            <summary>
            Gets the deliver items individually.
            </summary>
            <value>
            The deliver items individually.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Shipping.ShippingPrice">
            <summary>
            Represents the price of a shipping option.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Prices.Price">
            <summary>
            Represents the price of a product. The Price object indicates the value that a customer pays for a single product,
            but the Total object indicates the total cost, which includes additional items such as tax and shipping.
            The Pricing Service Provider uses the GetProductPrices to return the price.
            A product may be assigned multiple prices. You can use one single call to get a group of objects that represent the different prices.  
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Prices.Price.conditions">
            <summary>
            Represents the conditions for a special price.
            Some special prices are applicable when certain conditions are met, for example, a campaign on a product, if the customer has bought at least five products, or a special date.
            You can use this property to define the conditions. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Prices.Price.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Prices.Price"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Prices.Price.#ctor(System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Prices.Price"/> class.
            </summary>
            <param name="amount">The value of the price.</param>
            <param name="currency">The currency of the price.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Prices.Price.ToString">
            <summary>
            Returns a string that represents the price.
            </summary>
            <returns>A string that represents the price.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Prices.Price.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Price.Amount">
            <summary>
            Gets or sets the price.
            </summary>
            <value>The amount.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Price.Conditions">
            <summary>
            Gets or sets the group of price conditions used for break pricing and campaigns, where a 
            specific price is only applicable when certain conditions are met.
            <example>
            <list type="bullet">
            <item>
            <description>
            The customer has bought at least five products.
            </description>
            </item>
            <item>
            <description>
            The date is in the year 2013.
            </description>
            </item>
            </list>
            </example> 
            </summary>
            <value>
            A collection of the price conditions.
            </value> 
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Price.CurrencyCode">
            <summary>
            Gets or sets the currency that the price is displayed in. 
            </summary>
            <value>The currency of the price.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Price.Description">
            <summary>
            Gets or sets the text that describes the price.
            </summary>
            <value>
            A description of the price.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Price.PriceType">
            <summary>
            Gets or sets the type of the price.
            <example>
            <list type="bullet">
            <item>
            <description>
            List Price
            </description>
            </item>
            <item>
            <description>
            Customer Price
            </description>
            </item>
            </list>
            </example>
            The list price is the original price without any condition.
            The customer price is the price that the customer pays taking all conditions into account.
            </summary>
            <value>The type of the price.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingPrice.OptionId">
            <summary>
            Gets or sets the shipping option Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingPrice.MethodId">
            <summary>
            Gets or sets the shipping method Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Shipping.ShippingPrice.LineItemIds">
            <summary>
            Gets or sets the line item ids.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.WishLists.WishList">
            <summary>
            Wish list entity
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.WishLists.WishList.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishList.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishList.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishList.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishList.UserId">
            <summary>
            Gets or sets the user ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishList.IsFavorite">
            <summary>
            Gets or sets a value indicating whether this instance is favorite.
            </summary>
            <value>
            <c>true</c> if this instance is favorite; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishList.Lines">
            <summary>
            Gets or sets the wish list lines.
            </summary>
            <value>
            The wish list lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.WishLists.WishListHeader">
            <summary>
            Defines the WishListHeader class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListHeader.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListHeader.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListHeader.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListHeader.IsFavorite">
            <summary>
            Gets or sets a value indicating whether this instance is favorite.
            </summary>
            <value>
            <c>true</c> if this instance is favorite; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.WishLists.WishListLine">
            <summary>
            Wish list line entity
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.WishLists.WishListLine.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListLine.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>
            The quantity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListLine.Product">
            <summary>
            Gets or sets the product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.WishLists.WishListLine.Total">
            <summary>
            Gets or sets the total.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Multishop.IInventoryProductBuilder">
            <summary>
             Creates an inventory product builder.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IInventoryProductBuilder.CreateInventoryProduct(System.String)">
            <summary>
            Creates an inventory product 
            </summary>
            <param name="productId">The product id</param>
            <returns>
            An inventory product
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IInventoryProductBuilder.AreProductsEqual(Sitecore.Commerce.Entities.Inventory.InventoryProduct,Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Compares two <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct"/> objects for equality.
            </summary>
            <param name="firstInventoryProduct">The first object.</param>
            <param name="secondInventoryProduct">The second object.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IInventoryProductBuilder.GetProductHashCode(Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Gets the hash code for a <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct"/>.
            </summary>
            <param name="obj">The object to hash.</param>
            <returns>The hash code for the object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IInventoryProductBuilder.ProductToString(Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Converts a <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct"/> to a string.
            </summary>
            <param name="product">The object to convert.</param>
            <returns>The string version of the object</returns>
        </member>
        <member name="P:Sitecore.Commerce.Multishop.IInventoryProductBuilder.EntityFactory">
            <summary>
            Gets or sets the entity factory
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Multishop.IInventoryProductBuilder.CommerceContext">
            <summary>
            Gets or sets the Commerce context
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Multishop.InventoryProductBuilder">
            <summary>
             Creates an inventory product builder.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.InventoryProductBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Multishop.InventoryProductBuilder"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.InventoryProductBuilder.CreateInventoryProduct(System.String)">
            <summary>
            Creates an inventory product 
            </summary>
            <param name="productId">The product id</param>
            <returns>
            An inventory product
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.InventoryProductBuilder.AreProductsEqual(Sitecore.Commerce.Entities.Inventory.InventoryProduct,Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Compares two <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct"/> objects for equality.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.InventoryProductBuilder.GetProductHashCode(Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Gets the hash code for a <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct"/>.
            </summary>
            <param name="obj">The object to hash.</param>
            <returns>The hash code for the object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.InventoryProductBuilder.ProductToString(Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Converts a <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct"/> to a string.
            </summary>
            <param name="product">The object to convert.</param>
            <returns>The string version of the object</returns>
        </member>
        <member name="P:Sitecore.Commerce.Multishop.InventoryProductBuilder.EntityFactory">
            <summary>
            Gets or sets the entity factory
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Multishop.InventoryProductBuilder.CommerceContext">
            <summary>
            Gets or sets the Commerce context
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct">
            <summary>
            InventoryProduct represents the product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.InventoryProduct.ProductId">
            <summary>
            Gets or sets the unique identifier for the product or product variant in the commerce system.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate">
            <summary>
            StockInformationUpdate is used as a strongly typed composite return value from method GetBackInStockInformation to
            indicate the product and the locations where it will be back in stock optionally along with availability date and count.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate.Product">
            <summary>
            Gets or sets the product in the commerce system.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate.StockInformationUpdateLocations">
            <summary>
            Gets or sets the stock information update locations.
            </summary>
            <value>
            The stock information update locations.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation">
            <summary>
            StockInformationUpdateLocation is used as a strongly typed value nested only into StockInformationUpdate returned
            from method GetBackInStockInformation to indicate the locations where the product will be back in stock optionally
            along with availability date and count
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation.Location">
            <summary>
            Gets or sets the name of the location.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation.AvailabilityDate">
            <summary>
            Gets or sets an optional date and time indicating when the product will be in stock.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation.Count">
            <summary>
            Gets or sets an optional count of products that are in stock at the <see cref="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation.Location"/> at the specified <see cref="P:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation.AvailabilityDate"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest">
            <summary>
            Represents data associated with a user request to be notified when a product is back in stock.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.#ctor(Sitecore.Commerce.Entities.Inventory.InventoryProduct,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> class.
            </summary>
            <param name="product">The inventory product identifier.</param>
            <param name="shopName">The shop name.</param>
            <param name="interestDate">The interest date.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.Product">
            <summary>
            Gets or sets the unique identifier for the product or product variant in the commerce system.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest.InterestDate">
            <summary>
            Gets or sets the a date and time that signals the deadline for which to notify the visitor
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequestEqualityComparer">
            <summary>
            Tests two <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects for equality.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockNotificationRequestEqualityComparer.Equals(Sitecore.Commerce.Entities.Inventory.StockNotificationRequest,Sitecore.Commerce.Entities.Inventory.StockNotificationRequest)">
            <summary>
            Compares two <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects for equality.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockNotificationRequestEqualityComparer.GetHashCode(Sitecore.Commerce.Entities.Inventory.StockNotificationRequest)">
            <summary>
            Gets the hash code for the specified <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> object.
            </summary>
            <param name="obj">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> object.</param>
            <returns>The hash code for the specified <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> object.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockNotificationRequestEqualityComparer.Default">
            <summary>
            Gets or sets the default <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequestEqualityComparer"/> implementation.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.AccountAnalyticsData">
            <summary>
            Defines the AccountAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AccountAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AccountAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AccountAnalyticsData.GetPageEventComment(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event comment.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The page event comment.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.AccountAnalyticsData.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData">
            <summary>
            Defines the AddToCartStockStatusAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.GetCartFromArgs">
            <summary>
            Gets the cart from args.
            </summary>
            <returns>
            The cart in the args parameter
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.GetCartLinesFromArgs">
            <summary>
            Gets the cart from args.
            </summary>
            <returns>
            The cart lines in the args parameter
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.InitializeCartLineData(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine})">
            <summary>
            Initializes the cart line data collection.
            </summary>
            <param name="cartLines">The cart lines.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.ReturnCartLinesCustomValues">
            <summary>
            Returns the cart lines custom values.
            </summary>
            <returns>The cart lines custom values. </returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.CartLines">
            <summary>
            Gets or sets the cart lines.
            </summary>
            <value>
            The cart lines.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.AddToCartStockStatusAnalyticsData.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData">
            <summary>
            Defines the BackInStockSubscriptionAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.InventoryProduct">
            <summary>
            Gets or sets the inventory product.
            </summary>
            <value>
            The inventory product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.InterestDate">
            <summary>
            Gets or sets the interest date.
            </summary>
            <value>
            The interest date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockSubscriptionAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData">
            <summary>
            Defines the BackInStockUnsubscriptionAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.InventoryProduct">
            <summary>
            Gets or sets the inventory product.
            </summary>
            <value>
            The inventory product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.BackInStockUnsubscriptionAnalyticsData.VisitorId">
            <summary>
            Gets or sets the visitor identifier.
            </summary>
            <value>
            The visitor identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData">
            <summary>
            Defines the CartLineAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Entities.Carts.CartLine)">
            <summary>
            Initializes the content with the specific arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="cartLine">The cart line.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>
            The product identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>
            The quantity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.Price">
            <summary>
            Gets or sets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.ProductName">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>
            The name of the product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineAnalyticsData.CartLine">
            <summary>
            Gets or sets the cart line.
            </summary>
            <value>
            The cart line.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData">
            <summary>
            Defines the CartLinesAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.ReturnCartLinesCustomValues">
            <summary>
            Returns the cart lines custom values.
            </summary>
            <returns>The cart lines custom values. </returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.InitializeCartLineData(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine},Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes the cart line data collection.
            </summary>
            <param name="cartLines">The cart lines.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.GetCartFromArgs">
            <summary>
            Gets the cart from the arguments.
            </summary>
            <returns>The cart.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.CartLines">
            <summary>
            Gets or sets the cart lines.
            </summary>
            <value>
            The cart lines.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLinesAnalyticsData.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData">
            <summary>
            Defines the CartLineStockStatusAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Entities.Carts.CartLine)">
            <summary>
            Initializes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="cartLine">The cart line.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>
            The product identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.StockStatus">
            <summary>
            Gets or sets the stock status.
            </summary>
            <value>
            The stock status.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.InStockDate">
            <summary>
            Gets or sets the in stock date.
            </summary>
            <value>
            The in stock date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.ShippingDate">
            <summary>
            Gets or sets the shipping date.
            </summary>
            <value>
            The shipping date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartLineStockStatusAnalyticsData.ProductName">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>
            The name of the product.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData">
            <summary>
            Defines the CartUpdatedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.GetCartFromArgs">
            <summary>
            Gets the cart from the arguments.
            </summary>
            <returns>The cart.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.Changes">
            <summary>
            Gets or sets the changes.
            </summary>
            <value>
            The changes.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartUpdatedAnalyticsData.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CartAnalyticsData">
            <summary>
            Defines the CartAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.GetCartFromArgs">
            <summary>
            Gets the cart from the arguments.
            </summary>
            <returns>The cart.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.CartName">
            <summary>
            Gets or sets the name of the cart.
            </summary>
            <value>
            The name of the cart.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.CartStatus">
            <summary>
            Gets or sets the cart status.
            </summary>
            <value>
            The cart status.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartAnalyticsData.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CartResumedAnalyticsData">
            <summary>
            Defines the CartResumedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartResumedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartResumedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CartResumedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CartResumedAnalyticsData.PreviousStateName">
            <summary>
            Gets or sets the name of the previous state.
            </summary>
            <value>
            The name of the previous state.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData">
            <summary>
            Defines the CultureChosenAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CultureChosenAnalyticsData.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData">
            <summary>
            Defines the CustomerAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.CustomerName">
            <summary>
            Gets or sets the name of the customer.
            </summary>
            <value>
            The name of the customer.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.CustomerAnalyticsData.Customer">
            <summary>
            Gets or sets the customer.
            </summary>
            <value>
            The customer.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData">
            <summary>
            Defines the FacetAppliedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.Facet">
            <summary>
            Gets or sets the facet.
            </summary>
            <value>
            The facet.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.FacetAppliedAnalyticsData.IsApplied">
            <summary>
            Gets or sets a value indicating whether this instance is applied.
            </summary>
            <value>
            <c>true</c> if this instance is applied; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData">
            <summary>
            Defines the GiftCardPurchaseAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.TryGetResultAndPayment(Sitecore.Commerce.Entities.GiftCards.GiftCardPaymentInfo@,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult@)">
            <summary>
            Tries the get result and payment.
            </summary>
            <param name="payment">The payment.</param>
            <param name="result">The result.</param>
            <returns>
            True if the payment and result were found; Other wise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.GetGiftCardBalance(System.String,System.String)">
            <summary>
            Gets the gift card balance.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>Will be null if the retrieval of the balance failed.  Otherwise the card balance is returned.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.GetGiftCardServiceProvider">
            <summary>
            Gets the gift card service provider.
            </summary>
            <returns>The instantiated GiftCardServiceProvider.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.OrderId">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.Total">
            <summary>
            Gets or sets the total.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.GiftCardAmount">
            <summary>
            Gets or sets the gift card amount.
            </summary>
            <value>
            The gift card amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.Balance">
            <summary>
            Gets or sets the balance.
            </summary>
            <value>
            The balance.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.GiftCardPurchaseAnalyticsData.HasData">
            <summary>
            Gets or sets a value indicating whether this instance has data.
            </summary>
            <value>
              <c>true</c> if this instance has data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData">
            <summary>
            Defines the LinesAddedToWishListAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.ReturnWishListLinesCustomValues">
            <summary>
            Returns the wish list lines custom values.
            </summary>
            <returns>The WishList lines.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.InitializeWishListLineData(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Initializes the wish list line data.
            </summary>
            <param name="wishListLines">The wish list lines.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.GetAddedLinesFromArgs">
            <summary>
            Gets the removed lines from arguments.
            </summary>
            <returns>The list of wish list lines.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.GetWishListFromArgs">
            <summary>
            Gets the wish list from arguments.
            </summary>
            <returns>The wish list.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesAddedToWishListAnalyticsData.WishListLines">
            <summary>
            Gets or sets the wish list lines.
            </summary>
            <value>
            The wish list lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData">
            <summary>
            Defines the LinesRemovedFromWishListAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.ReturnWishListLinesCustomValues">
            <summary>
            Returns the wish list lines custom values.
            </summary>
            <returns>The WishList lines custom value dictionary.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.InitializeWishListLineData(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Initializes the wish list line data.
            </summary>
            <param name="wishListLines">The wish list lines.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.GetRemovedLinesFromArgs">
            <summary>
            Gets the removed lines from arguments.
            </summary>
            <returns>The list of wish list lines.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.GetWishListFromArgs">
            <summary>
            Gets the wish list from arguments.
            </summary>
            <returns>The wish list.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesRemovedFromWishListAnalyticsData.WishListLines">
            <summary>
            Gets or sets the wish list lines.
            </summary>
            <value>
            The wish list lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData">
            <summary>
            Defines the LinesUpdatedOnWishListAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.ReturnWishListLinesCustomValues">
            <summary>
            Returns the wish list lines custom values.
            </summary>
            <returns>The WishList lines custom value dictionary.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.InitializeWishListLineData(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Initializes the wish list line data.
            </summary>
            <param name="wishListLines">The wish list lines.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.GetUpdatedLinesFromArgs">
            <summary>
            Gets the updated lines from arguments.
            </summary>
            <returns>The list of updated wish list lines.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.GetWishListFromArgs">
            <summary>
            Gets the wish list from arguments.
            </summary>
            <returns>The WishList.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LinesUpdatedOnWishListAnalyticsData.WishListLines">
            <summary>
            Gets or sets the wish list lines.
            </summary>
            <value>
            The wish list lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData">
            <summary>
            Defines the LoyaltyCardPurchaseAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.TryGetResultAndPayment(Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardPaymentInfo@,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult@)">
            <summary>
            Tries the get result and payment.
            </summary>
            <param name="payment">The payment.</param>
            <param name="result">The result.</param>
            <returns>
            True if the payment and result were found; Other wise false.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.OrderId">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.Total">
            <summary>
            Gets or sets the total.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.LoyaltyCardAmount">
            <summary>
            Gets or sets the loyalty card amount.
            </summary>
            <value>
            The loyalty card amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyCardPurchaseAnalyticsData.HasData">
            <summary>
            Gets or sets a value indicating whether this instance has data.
            </summary>
            <value>
              <c>true</c> if this instance has data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData">
            <summary>
            Defines the LoyaltyProgramJoinedGoalAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.GetLoyaltyCardFromArgs">
            <summary>
            Gets the loyalty card from arguments.
            </summary>
            <returns>The LoyaltyCard.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.CardNumber">
            <summary>
            Gets or sets the card number.
            </summary>
            <value>
            The card number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.LoyaltyProgramJoinedGoalAnalyticsData.LoyaltyCard">
            <summary>
            Gets or sets the loyalty card.
            </summary>
            <value>
            The loyalty card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData">
            <summary>
            Defines the OrderGoalAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.GetOrderFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.Total">
            <summary>
            Gets or sets the total.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.OrderGoalAnalyticsData.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData">
            <summary>
            Defines the OrderStatusChangedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData.OrderId">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.OrderStatusChangedAnalyticsData.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
            <value>
            The order status.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.AnalyticsDataInitializerFactory">
            <summary>
            Defines the AnalyticsDataInitializerFactory class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AnalyticsDataInitializerFactory.Create(System.String)">
            <summary>
            Creates the specified object given an entity name.
            </summary>
            <param name="entityName">Name of the entity.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AnalyticsDataInitializerFactory.Create``1">
            <summary>
            Creates an instance of a serializer based on the given type.
            </summary>
            <typeparam name="T">The base type of the object to create.</typeparam>
            <returns>The created object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.AnalyticsDataInitializerFactory.Create``1(System.String)">
            <summary>
            Creates an instance of a serializer based on the given name.
            </summary>
            <typeparam name="T">The base type of the object to create.</typeparam>
            <param name="entityName">Name of the entity.</param>
            <returns>The created object.</returns>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.ProductsAreBackInStockAnalyticsData">
            <summary>
            Defines the ProductsAreBackInStockAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductsAreBackInStockAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductsAreBackInStockAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductsAreBackInStockAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductsAreBackInStockAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.ProductsAreBackInStockAnalyticsData.Request">
            <summary>
            Gets or sets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData">
            <summary>
            Defines the ProductSortingAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.SortKey">
            <summary>
            Gets or sets the sort key.
            </summary>
            <value>
            The sort key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.ProductSortingAnalyticsData.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData">
            <summary>
            Defines the SearchAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.SearchTerm">
            <summary>
            Gets or sets the search item.
            </summary>
            <value>
            The search item.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.SearchAnalyticsData.NumberOfHits">
            <summary>
            Gets or sets the number of hits.
            </summary>
            <value>
            The number of hits.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.UserAnalyticsData">
            <summary>
            Defines the UserAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.GetCommerceUserFromArgs">
            <summary>
            Gets the commerce user from the arguments.
            </summary>
            <returns>The CommerceUser.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.UserAnalyticsData.CommerceUser">
            <summary>
            Gets or sets the commerce user.
            </summary>
            <value>
            The commerce user.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData">
            <summary>
            Defines the VisitedCategoryPageAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.CategoryId">
            <summary>
            Gets or sets the category identifier.
            </summary>
            <value>
            The category identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedCategoryPageAnalyticsData.CategoryName">
            <summary>
            Gets or sets the name of the category.
            </summary>
            <value>
            The name of the category.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData">
            <summary>
            Defines the VisitedProductDetailsPageAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>
            The product identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.ProductName">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>
            The name of the product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.ParentCategoryId">
            <summary>
            Gets or sets the parent category identifier.
            </summary>
            <value>
            The parent category identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.ParentCategoryName">
            <summary>
            Gets or sets the name of the parent category.
            </summary>
            <value>
            The name of the parent category.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductDetailsPageAnalyticsData.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData">
            <summary>
            Defines the VisitedProductStockStatusAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.InventoryProduct">
            <summary>
            Gets or sets the inventory product.
            </summary>
            <value>
            The inventory product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.StockStatus">
            <summary>
            Gets or sets the stock status.
            </summary>
            <value>
            The stock status.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.AvailabilityDate">
            <summary>
            Gets or sets the availability date.
            </summary>
            <value>
            The availability date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitedProductStockStatusAnalyticsData.StockCount">
            <summary>
            Gets or sets the stock count.
            </summary>
            <value>
            The stock count.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData">
            <summary>
            Defines the VisitorCancelOrderAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.GetCancelledOrderFromArgs">
            <summary>
            Gets the cancelled order from the arguments.
            </summary>
            <returns>The cancelled Order.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.OrderId">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.TotalAmount">
            <summary>
            Gets or sets the total amount.
            </summary>
            <value>
            The total amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorCancelOrderAnalyticsData.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData">
            <summary>
            Defines the VisitorViewedOrderDetailsAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.GetOrderFromArgs">
            <summary>
            Gets the order from arguments.
            </summary>
            <returns>The Order.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.OrderId">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.TotalAmount">
            <summary>
            Gets or sets the total amount.
            </summary>
            <value>
            The total amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderDetailsAnalyticsData.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData">
            <summary>
            Defines the VisitorViewedOrderHistoryAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData.GetRequestFromArgs">
            <summary>
            Gets the request from the arguments.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData.CustomerId">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.VisitorViewedOrderHistoryAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData">
            <summary>
            Defines the WishListCreatedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.GetWishFromArgs">
            <summary>
            Gets the wish from arguments.
            </summary>
            <returns>
            The wish list; otherwise null if it is not found in the arguments.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListCreatedAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData">
            <summary>
            Defines the WishListLineAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Entities.WishLists.WishListLine)">
            <summary>
            Initializes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="wishListLine">The wish list line.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>
            The product identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>
            The quantity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListLineAnalyticsData.Price">
            <summary>
            Gets or sets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData">
            <summary>
            Defines the WishListAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Entities.WishLists.WishList)">
            <summary>
            Initializes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="wishList">The wish list.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData">
            <summary>
            Defines the WishListDeletedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.GetWishFromArgs">
            <summary>
            Gets the wish from arguments.
            </summary>
            <returns>
            The wish list; otherwise null if it is not found in the arguments.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListDeletedAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData">
            <summary>
            Defines tghe WishListPrintedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.GetWishListFromArgs">
            <summary>
            Gets the wish from arguments.
            </summary>
            <returns>
            The wish list; otherwise null if it is not found in the arguments.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListPrintedAnalyticsData.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData">
            <summary>
            Defines the WishListsEmailedAnalyticsData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the content using the given arguments
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the content in the given custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified custom values.
            </summary>
            <param name="customValues">The custom values.</param>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.GetWishListsFromArgs">
            <summary>
            Gets the wish from arguments.
            </summary>
            <returns>
            The wish list; otherwise null if it is not found in the arguments.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.ReturnWishListsCustomValues">
            <summary>
            Returns the wish lists custom values.
            </summary>
            <returns>The WishList custom values.</returns>
        </member>
        <member name="M:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.InitializeWishListData(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishList})">
            <summary>
            Initializes the wish list data.
            </summary>
            <param name="wishLists">The wish lists.</param>
        </member>
        <member name="P:Sitecore.Commerce.AnalyticsData.WishListsEmailedAnalyticsData.WishLists">
            <summary>
            Gets or sets the wishlists.
            </summary>
            <value>
            The wishlists.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData">
            <summary>
            Defines the AbandonedCartOutcomeData class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.OutcomeData.BaseOutcomeData">
            <summary>
            Defines the BaseOutcomeData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the instance from the given arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.GetMonetaryValue">
            <summary>
            Gets the monetary value of the outcome.
            </summary>
            <returns>The monetary value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.Serialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Serializes the specified values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.Deserialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Deserializes the content into the given values argument.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.AddValuesToOutcome(Sitecore.Analytics.Outcome.Model.ContactOutcome)">
            <summary>
            Adds the values to given outcome.
            </summary>
            <param name="outcome">The outcome.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.SetValuesFromOutcomeValues(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the values from outcome values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.DeserializeCustomValue(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Extension allowing external developers the ability to deserialized the Custom object.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.AddEntityToSimpleValues``1(``0,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Adds the entity to the event dictionary.
            </summary>
            <typeparam name="T">The base type of the entity.</typeparam>
            <param name="connectEntity">The entity.</param>
            <param name="values">The values.</param>
            <param name="baseTypeKey">The base type key.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.GetMandatoryValueAsString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the mandatory value as string.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The values.</param>
            <returns>The value for the given key.</returns>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.BaseOutcomeData.GetOptionalValueAsObject``1(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the optional custom value as object.
            </summary>
            <typeparam name="T">Object type</typeparam>
            <param name="key">The key.</param>
            <param name="customValues">The custom values.</param>
            <returns>The custom value.</returns>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.BaseOutcomeData.ServicePipelineArgs">
            <summary>
            Gets or sets the service pipeline arguments.
            </summary>
            <value>
            The service pipeline arguments.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.BaseOutcomeData.Custom">
            <summary>
            Gets or sets the custom class.
            </summary>
            <value>
            The custom.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.Initialize(System.String,System.String,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes the object with the given parameters.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.Serialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Serializes the content into the given dictionary.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.Deserialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Deserializes the content from the given values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.GetMonetaryValue">
            <summary>
            Gets the monetary value of the outcome.
            </summary>
            <returns>
            The monetary value.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.AbandonedCartOutcomeData.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.OutcomeData.OutcomeDataFactory">
            <summary>
            Defines the OutcomeDataFactory class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.OutcomeDataFactory.Create(System.String)">
            <summary>
            Creates the specified object given an entity name.
            </summary>
            <param name="entityName">Name of the entity.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.OutcomeDataFactory.Create``1">
            <summary>
            Creates an instance of a serializer based on the given type.
            </summary>
            <typeparam name="T">The base type of the object to create.</typeparam>
            <returns>The created object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.OutcomeDataFactory.Create``1(System.String)">
            <summary>
            Creates an instance of a serializer based on the given name.
            </summary>
            <typeparam name="T">The base type of the object to create.</typeparam>
            <param name="entityName">Name of the entity.</param>
            <returns>The created object.</returns>
        </member>
        <member name="T:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData">
            <summary>
            Defines the SubmittedOrderOutcomeData class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.Initialize(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Initializes the instance from the given arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.Serialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Serializes the specified values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.Deserialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Deserializes the content into the given values argument.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.GetMonetaryValue">
            <summary>
            Gets the monetary value of the outcome.
            </summary>
            <returns>
            The monetary value.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.GetOrderFromArgs">
            <summary>
            Gets the order from arguments.
            </summary>
            <returns>The Order.</returns>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.OutcomeData.SubmittedOrderOutcomeData.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.AddParties.AddPartiesToCart">
            <summary>
            Defines the AddParties class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.PipelineProcessor`1">
            <summary>
            Defines the base pipeline processor class.
            </summary>
            <typeparam name="TArgs">The type of the args.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.PipelineProcessor`1.Process(`0)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddParties.AddPartiesToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart">
            <summary>
            Defines the AddPaymentInfoToCart processor.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddPaymentInfo.AddPaymentInfoToCart.ValidatePayment(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.PaymentInfo)">
            <summary>
            Validates the payment and ensure the Party reference exists.
            </summary>
            <param name="cart">The cart.</param>
            <param name="payment">The payment.</param>
            <returns>True if the party reference exists, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart">
            <summary>
            Defines the AddShippingInfoToCart processor.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddShippingInfo.AddShippingInfoToCart.ValidateShipping(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Validates the payment and ensure the Party reference exists.
            </summary>
            <param name="cart">The cart.</param>
            <param name="shipping">The payment.</param>
            <returns>True if the party reference exists, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.CartPipelineProcessor">
            <summary>
            Base class for cart related pipeline processors.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.CartPipelineProcessor.CombineCart(Sitecore.Commerce.Entities.Carts.CartBase,Sitecore.Commerce.Entities.Carts.CartBase)">
            <summary>
            Combines the cart.
            </summary>
            <param name="externalSystemCart">The external system cart.</param>
            <param name="engagementPlanCart">The engagement plan cart.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartLinesPageEvent">
            <summary>
            Defines the processor that triggers the page events when adding cart lines.
            The TriggerPageEventsForCartLines process is used by the following pipelines:
            <list type="bullet">
            <item>
            <description>
            AddCartLines
            </description>
            </item>
            <item>
            <description>
            RemoveCartLines
            </description>
            </item>
            <item>
            <description>
            UpdateCartLines
            </description>
            </item>
            </list>
            The TriggerCartLinesPageEvent processor also registers the following values for a cart line:
            <list type="bullet">
            <item>
            <description>
            The Product ID
            </description>
            </item>
            <item>
            <description>
            The quantity
            </description>
            </item>
            <item>
            <description>
            The price
            </description>
            </item>
            <item>
            <description>
            The currency
            </description>
            </item>
            </list>
            The base class reads the name and text of the event.
            The specialized processor, in addition, adds information about the product ID, Quantity and Price to the event data.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent">
            <summary>
            Defines the processor that triggers a specified page event. 
            The event name and associated text are read from the processor parameters in the configuration file.
            The page event text is localized using the Sitecore dictionary.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.ShouldRegisterEvent(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets a value indicating whether the page event should be registered.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
              <c>true</c> if the page event should be registered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.    
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The page event text.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.AddEntityToEventDictionary``1(``0,System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Adds the entity to the event dictionary.
            </summary>
            <typeparam name="T">The base type of the entity.</typeparam>
            <param name="connectEntity">The entity.</param>
            <param name="data">The data.</param>
            <param name="baseTypeKey">The base type key.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.Name">
            <summary>
            Gets or sets the name of the page event to trigger.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Common.TriggerPageEvent.Text">
            <summary>
            Gets or sets the page event text.
            </summary>
            <value>
            The page event text.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartLinesPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartPageEvent">
            <summary>
            Defines the processor that triggers the page events for a cart.
            This class implements the TriggerPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.TriggerCartPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.UpdateVisitorInEAPlan">
            <summary>
            Defines the UpdateVisitorInEAPlan class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.UpdateVisitorInEAPlan.#ctor(Sitecore.Commerce.Multishop.IEaPlanProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.Common.UpdateVisitorInEAPlan"/> class.
            </summary>
            <param name="eaPlanProvider">The ea plan provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.UpdateVisitorInEAPlan.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.UpdateVisitorInEAPlan.GetContactIdentifier(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Services.Carts.CartResult)">
            <summary>
            Gets the contact identifier.
            </summary>
            <param name="args">The arguments.</param>
            <param name="result">The result.</param>
            <returns>The contact identifier.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Carts.Common.UpdateVisitorInEAPlan.EaPlanProvider">
            <summary>
            Gets or sets the ea plan provider.
            </summary>
            <value>
            The ea plan provider.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateCart.TriggerCartCreatedPageEvent">
            <summary>
            Triggers the page events for the created cart.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.RemoveParties.RemovePartiesFromCart">
            <summary>
            Defines the RemovePartiesFromCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.RemoveParties.RemovePartiesFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.RemoveParties.RemovePartiesFromCart.RemovePartyAssociations(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Party)">
            <summary>
            Removes the party associations.
            </summary>
            <param name="cart">The cart.</param>
            <param name="partyToRemove">The party to remove.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.RemovePaymentInfo.RemovePaymentInfoFromCart">
            <summary>
            Defines the RemovePaymentInfoFromCart processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.RemovePaymentInfo.RemovePaymentInfoFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.RemoveShippingInfo.RemoveShippingInfoFromCart">
            <summary>
            Defines the RemoveShippingInfoFromCart processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.RemoveShippingInfo.RemoveShippingInfoFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.ResumeCart.TriggerCartResumedPageEvent">
            <summary>
            Defines the processor that triggers a specified page event when resuming the cart and registers the following cart values:
            <list type="bullet">
            <item>
            <description>
            ExternalCartId, which contains the ID of the cart in the external commerce system.
            </description>
            </item>
            <item>
            <description>
            UserId, which contains the ID of the visitor in Sitecore.
            </description>
            </item>
            <item><description>
            CartName, which contains the name of the cart in Sitecore.
            </description>
            </item>
            <item>
            <description>
            CartStatus, which contains the current state of the cart in the EA plan.
            </description>
            </item>
            StateName, which contains the previous state of the cart.
            </list>
            The Page Event text is automatically localized using the Sitecore dictionary.
            The TriggerCartCreatedPageEventForResumedCart processor is used by the ResumeCart pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.TriggerCartResumedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.TriggerCartResumedPageEvent.GetCartFromArgs(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the cart from the arguments.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The cart extracted from arguments.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.TriggerCartResumedPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The page event text.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.TriggerCartResumedPageEvent.GetPreviousStateName(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the name of the previous state.
            The previous state name is stored in the custom data by the CheckCanBeResumed processor.
            </summary>
            <param name="args">The arguments.</param>
            <returns>Name of the previous state.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.UpdateCart.TriggerCartUpdatedPageEvent">
            <summary>
            Defines the processor that triggers a page event for the cart is updated and registers the values:
            <list type="bullet">
            <item>
            <description>
            CustomerId
            </description>
            </item>
            <item>
            <description>
            CartName
            </description>
            </item>
            <item>
            <description>
            ShopName
            </description>
            </item>
            </list>
            The Page Event text is automatically localized using the Sitecore dictionary.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UpdateCart.TriggerCartUpdatedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.UpdateParties.UpdatePartiesInCart">
            <summary>
            Defines the UpdatePartiesInCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UpdateParties.UpdatePartiesInCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Catalog.Common.TriggerCatalogPageEvent">
            <summary>
            Defines the TriggerCatalogPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.Common.TriggerCatalogPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Catalog.TriggerFacetAppliedPageEvent">
            <summary>
            Defines the TriggerFacetAppliedPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerFacetAppliedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerFacetAppliedPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The page event text.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Catalog.TriggerProductSortingPageEvent">
            <summary>
            Defines the TriggerProductSortingPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerProductSortingPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerProductSortingPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The page event text.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Catalog.TriggerSearchPageEvent">
            <summary>
            Defines the TriggerSearchPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerSearchPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerSearchPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerSearchPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The page event text.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedCategoryPagePageEvent">
            <summary>
            Defines the TriggerVisitedCategoryPagePageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedCategoryPagePageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedCategoryPagePageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedCategoryPagePageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The page event text.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedProductDetailsPagePageEvent">
            <summary>
            Defines the TriggerVisitedProductDetailsPagePageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedProductDetailsPagePageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedProductDetailsPagePageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Catalog.TriggerVisitedProductDetailsPagePageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The page event text.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Common.TriggerOutcome">
            <summary>
            Defines the TriggerOutcome class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerOutcome.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Common.TriggerOutcome.GetOutcomeData">
            <summary>
            Gets the outcome data instance.
            </summary>
            <returns>The outcome data instance.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Common.TriggerOutcome.OutcomeId">
            <summary>
            Gets or sets the outcome identifier.
            </summary>
            <value>
            The outcome identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.ContentIndex.CustomIndex.FetchCustomIndex">
            <summary>
            Defines the pipeline processor that fetches custom index for products.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.ContentIndex.CustomIndex.FetchCustomIndex.Process(Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs)">
            <summary>
            Defines the fetch custom index pipeline processor class.
            </summary>
            <param name="args">The pipeline args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.ContentIndex.CustomIndex.FetchCustomIndex.GetContextIndex(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs)">
            <summary>
            Gets the index of the context.
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="args">The arguments.</param>
            <returns>the index name</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.TriggerAccountPageEvent">
            <summary>
            Defines the processor that triggers the page event of an account. This class implements the TriggerPageEvent class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.TriggerCustomerPageEvent">
            <summary>
            Defines the processor that triggers the page event of a customer. This class implements the TriggerAccountPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.TriggerCustomerPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.TriggerUserPageEvent">
            <summary>
            Defines the processor that triggers page event for a user. This class implements the TriggerAccountPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.TriggerUserPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb">
            <summary>
            Creates the Contact for a Sitecore user
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.UserPipelineProcessor">
            <summary>
            Defines the base class used by all user pipeline processors.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.UserPipelineProcessor.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.Common.UserPipelineProcessor"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Customers.Common.UserPipelineProcessor.UserRepository">
            <summary>
            Gets or sets the user repository.
            </summary>
            <value>
            The user repository.
            </value>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb" /> class.
            </summary>
            <param name="userRepository">The user repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Called when the pipeline executes
            </summary>
            <param name="args">The args used to drive the creation of the user</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb.CreateContact(Sitecore.Analytics.Data.ContactRepositoryBase,Sitecore.Commerce.Services.Customers.CreateUserResult)">
            <summary>
            Creates a Contact in the repositor
            </summary>
            <param name="contactRepositoryBase">The repository to create the Contact in</param>
            <param name="createUserResult">The result containing details about the created user</param>
            <returns>The created Contact</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb.AddFacets(Sitecore.Analytics.Tracking.Contact,Sitecore.Commerce.Services.Customers.CreateUserResult)">
            <summary>
            Adds some basic facets to the Contact
            </summary>
            <param name="contact">The Contact to add facets to</param>
            <param name="createUserResult">The result containing details about the created user</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateContact.CreateContactInXDb.GetUserIdentifier(Sitecore.Commerce.Services.Customers.CreateUserResult)">
            <summary>
            Gets the string to identify the user with
            </summary>
            <param name="result">The result that contains all info about the user</param>
            <returns>The string to identify the user with</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemoveCustomersFromExternalSystem">
            <summary>
            Defines the RemoveCustomersFromExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveCustomersFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemoveCustomersFromSitecore">
            <summary>
            Ddefines the RemoveCustomersFromSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveCustomersFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.RemoveCustomersFromSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveCustomersFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemoveUsersFromExternalSystem">
            <summary>
            Defines the RemoveUsersFromExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveUsersFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemoveUsersFromSitecore">
            <summary>
            Ddefines the RemoveUsersFromSitecore class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.CustomerPipelineProcessor">
            <summary>
            Defines the base class used by all customer pipeline processors.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.CustomerPipelineProcessor.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.Common.CustomerPipelineProcessor"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Customers.Common.CustomerPipelineProcessor.CustomerRepository">
            <summary>
            Gets or sets the customer repository.
            </summary>
            <value>
            The customer repository.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveUsersFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.RemoveUsersFromSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveUsersFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddUsersToExternalSystem">
            <summary>
            Defines the AddUsersToExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddUsersToExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddUsersToSitecore">
            <summary>
            Ddefines the AddUsersToSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddUsersToSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.AddUsersToSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddUsersToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddCustomersToExternalSystem">
            <summary>
            Defines the AddCustomersToExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddCustomersToExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddCustomersToSitecore">
            <summary>
            Ddefines the AddCustomersToSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddCustomersToSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.AddCustomersToSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddCustomersToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetCustomer.GetCustomerFromSitecore">
            <summary>
            Defines the processor that gets customers from Sitecore. This class implements the ManageCustomerInEaPlan class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetCustomer.GetCustomerFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.GetCustomer.GetCustomerFromSitecore"/> class. 
            </summary>
            <param name="customerRepository">
            The repository of the state customer.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetCustomer.GetCustomerFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetCustomerFromSitecore processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetCustomer.GetCustomerFromExternalSystem">
            <summary>
            Defines the processor that get a customer from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetCustomer.GetCustomerFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetCustomerFromExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetUser.GetUserFromSitecore">
            <summary>
            Defines the processor that gets a user from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetUser.GetUserFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.GetUser.GetUserFromSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetUser.GetUserFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetUserFromSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetUser.GetUserFromExternalSystem">
            <summary>
            Defines the processor that gets a user from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetUser.GetUserFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetUserFromExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb">
            <summary>
            Updates the Contact of a user in the XDb
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.LeaseOwnerPrefix">
            <summary>
            The prefix used for the lease owner identifier
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb" /> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Called into when the pipeline executes
            </summary>
            <param name="args">The requests to update the user</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.UpdateFacets(Sitecore.Analytics.Tracking.Contact,Sitecore.Commerce.Services.Customers.UserResultWithUser)">
            <summary>
            Updates all of the facets on a user's Contact
            </summary>
            <param name="contact">The Contact to update</param>
            <param name="userResultWithUser">The result of the updating of the user</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.UpdatePersonal(Sitecore.Analytics.Tracking.Contact,Sitecore.Commerce.Services.Customers.UserResultWithUser)">
            <summary>
            Updates the Personal facet of the Contact
            </summary>
            <param name="contact">The Contact to update</param>
            <param name="userResultWithUser">The result of the updating of the user</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.UpdateEmails(Sitecore.Analytics.Tracking.Contact,Sitecore.Commerce.Services.Customers.UserResultWithUser)">
            <summary>
            Updates the Email facet of the Contact
            </summary>
            <param name="contact">The Contact to update</param>
            <param name="userResultWithUser">The result of the updating of the user</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateContact.UpdateContactInXDb.GetUserIdentifier(Sitecore.Commerce.Services.Customers.UserResultWithUser)">
            <summary>
            Gets the string to identify the user with
            </summary>
            <param name="result">The result that contains all info about the user</param>
            <returns>The string to identify the user with</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdatePassword">
            <summary>
            Defines the processor that updates the user password.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdatePassword.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.UpdatePassword"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdatePassword.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UpdatePassword processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Globalization.TriggerCultureChosenPageEvent">
            <summary>
            Defines the TriggerCultureChosenPageEvent class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Globalization.Common.TriggerGlobalizationPageEvent">
            <summary>
            Defines the TriggerGlobalizationPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Globalization.Common.TriggerGlobalizationPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEvent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Globalization.TriggerCultureChosenPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.RegisterConnectTypesWithMongo">
            <summary>
            Defines the RegisterConnectTypesWithMongo class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.RegisterConnectTypesWithMongo.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.Common.TriggerAddToCartStockStatusPageEvent">
            <summary>
            Defines the processor which triggers page event to track cart lines stock status.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.Common.TriggerAddToCartStockStatusPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetProductStockLocations.GetProductStockLocations">
            <summary>
            Placeholder pipeline processor for the GetProductStockLocations pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetProductStockLocations.GetProductStockLocations.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.GetBackInStockInformation">
            <summary>
            Placeholder pipeline processor for the GetBackInStockInformation pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.GetBackInStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetStockLocations.GetStockLocations">
            <summary>
            Placeholder pipeline processor for the GetStockLocations pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetStockLocations.GetStockLocations.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.ProductsAreBackInStock.TriggerProductsAreBackInStockPageEvent">
            <summary>
            Defines the processor which triggers the page event Products Back In Stock, so that the visitors which have signed up, can be notified.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.ProductsAreBackInStock.TriggerProductsAreBackInStockPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification">
            <summary>
            Removes a back-in-stock notification request that a visitor has previously requested.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification.ToStockNotificationRequest(Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest)">
            <summary>
            Converts a <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest"/> into a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/>.
            </summary>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest"/> to convert.</param>
            <returns>The converted <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/>.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification.EngagementPlanName">
            <summary>
            Gets or sets the engagement plan name.
            </summary>
            <value>
            The engagement plan name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.RemoveVisitorFromStockNotification.AutomationProvider">
            <summary>
            Gets the inventory automation provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.TriggerBackInStockUnsubscriptionPageEvent">
            <summary>
            Defines the pipeline processor which triggers page event to subscripte the user for back in stock notification.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.TriggerBackInStockUnsubscriptionPageEvent.RequestNotificationRemovedParameterName">
            <summary>
            The request context parameter that indicates whether the back-in-stock notification in the request parameters was successfully removed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.TriggerBackInStockUnsubscriptionPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.RemoveVisitorFromStockNotification.TriggerBackInStockUnsubscriptionPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.VisitedProductStockStatus.TriggerVisitedProductStockStatusPageEvent">
            <summary>
            Defines the processor which triggers page event to track product stock status.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitedProductStockStatus.TriggerVisitedProductStockStatusPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.TriggerBackInStockSubscriptionPageEvent">
            <summary>
            Defines the pipeline processor which triggers page event to subscribe the user for back in stock notification.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.TriggerBackInStockSubscriptionPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification">
            <summary>
            Defines the pipeline processor which adds the visitor to the EA plan back in stock notification.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification._eaPlanProvider">
            <summary>
            The Engagement Automation Plan provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.#ctor(Sitecore.Commerce.Multishop.IEaPlanProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification"/> class.
            </summary>
            <param name="eaPlanProvider">The Engagement Automation Plan provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.ToStockNotificationRequest(Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest)">
            <summary>
            Converts a <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest"/> into a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/>.
            </summary>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest"/> to convert.</param>
            <returns>The converted <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.AddVisitorToPlan(System.String,Sitecore.Data.ID,Sitecore.Data.ID,Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest)">
            <summary>
            Adds a visitor to the initial state of an engagement plan.
            </summary>
            <param name="visitorId">The visitor ID.</param>
            <param name="planId">The ID of the engagement plan.</param>
            <param name="initialStateId">The ID of the engagement plan initial state.</param>
            <param name="request">The request that specifies the product for which the visitor is requesting back-in-stock notification.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.UpdateVisitorStateData(System.String,Sitecore.Analytics.Automation.Data.AutomationStateContext,Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest)">
            <summary>
            Updates the existing engagemtnt plan state for a a visitor.
            </summary>
            <param name="visitorId">The visitor ID.</param>
            <param name="stateContext">The ID of the engagement plan state to update.</param>
            <param name="request">The request that specifies the product for which the visitor is requesting back-in-stock notification.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.EngagementPlanName">
            <summary>
            Gets or sets the engagement plan name.
            </summary>
            <value>
            The engagement plan name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.InitialStateName">
            <summary>
            Gets or sets the engagement plan's initial state name.
            </summary>
            <value>
            The engagement plan's initial state name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Inventory.VisitorSignUpForStockNotification.VisitorSignUpForStockNotification.AutomationProvider">
            <summary>
            Gets the inventory automation provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddCustomerPartiesToExternalSystem">
            <summary>
            Defines the AddCustomerPartiesToExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddCustomerPartiesToExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddPartiesToExternalSystem">
            <summary>
            Defines the AddPartiesToExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddPartiesToExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddPartiesToSitecore">
            <summary>
            Defines the AddPartiesToSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddPartiesToSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.AddPartiesToSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddPartiesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInSitecore">
            <summary>
            Defines the processor that assigns a customer to an engagement automation plan. This class implements the ManageCustomerInEaPlan class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInSitecore"/> class.
            </summary>
            <param name="customerRepository">The repository of the state customer.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the AddCustomerToEaPlan processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Customers.CustomerParty">
            <summary>
            Defines the CustomerParty class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CustomerParty.PartyID">
            <summary>
            Gets or sets the party identifier.
            </summary>
            <value>
            The party identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CustomerParty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Customers.CustomerParty.PartyType">
            <summary>
            Gets or sets the type of the party.
            </summary>
            <value>
            The type of the party.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Customers.CustomerPartyTypes">
            <summary>
            Defines the types of customer party.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CustomerPartyTypes.BuyerParty">
            <summary>
            The buyer party
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Customers.CustomerPartyTypes.AccountingParty">
            <summary>
            The accounting party
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.AddCustomerPartiesToSitecore">
            <summary>
            Ddefines the AddCustomerPartiesToSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddCustomerPartiesToSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.AddCustomerPartiesToSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.AddCustomerPartiesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetPartiesFromExternalSystem">
            <summary>
            Defines the GetPartiesFromExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetPartiesFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetPartiesFromSitecore">
            <summary>
            Defines the GetPartiesFromSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetPartiesFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.GetPartiesFromSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetPartiesFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemoveCustomerPartiesFromExternalSystem">
            <summary>
            Defines the RemoveCustomerPartiesFromExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveCustomerPartiesFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemoveCustomerPartiesFromSitecore">
            <summary>
            Defines the RemoveCustomerPartiesFromSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveCustomerPartiesFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.RemoveCustomerPartiesFromSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemoveCustomerPartiesFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemovePartiesFromExternalSystem">
            <summary>
            Defines the RemovePartiesFromExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemovePartiesFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.RemovePartiesFromSitecore">
            <summary>
            Defines the RemovePartiesFromSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemovePartiesFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.RemovePartiesFromSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.RemovePartiesFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>RemoveParties
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateCustomerPartiesInExternalSystem">
            <summary>
            Defines the UpdateCustomerPartiesInExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateCustomerPartiesInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateCustomerPartiesInSitecore">
            <summary>
            Dedfines the UpdateCustomerPartiesInSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateCustomerPartiesInSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.UpdateCustomerPartiesInSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateCustomerPartiesInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateParties.UpdatePartiesInExternalSystem">
            <summary>
            Defines the UpdatePartiesInExternalSystem class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateParties.UpdatePartiesInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdatePartiesInSitecore">
            <summary>
            Defines the UpdatePartiesInSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdatePartiesInSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.UpdatePartiesInSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdatePartiesInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.ContentEditorLicenseWarning">
            <summary>
            Content editor license warning class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.ContentEditorLicenseWarning.Process(Sitecore.Pipelines.GetContentEditorWarnings.GetContentEditorWarningsArgs)">
            <summary>
            pipeline execution method.  If necessary, returns a message in the content editor indicating a license error.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.LoyaltyPrograms.Common.LoyaltyProgramPipelineProcessor">
            <summary>
            Defines the LoyaltyProgramPipelineProcessor class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.LoyaltyPrograms.Common.TriggerLoyaltyProgramPageEvent">
            <summary>
            Defines the TriggerWishListPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.LoyaltyPrograms.Common.TriggerLoyaltyProgramPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.LoyaltyPrograms.JoinLoyaltyProgram.TriggerLoyaltyProgramJoinedGoal">
            <summary>
            Defines the TriggerLoyaltyProgramJoinedGoal class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.LoyaltyPrograms.JoinLoyaltyProgram.TriggerLoyaltyProgramJoinedGoal.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan">
            <summary>
            Defines the AddOrderToEAPlan class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.DataKey">
            <summary>
            The EAP data key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan._eaPlanProvider">
            <summary>
            The Engagement Automation Plan provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.#ctor(Sitecore.Commerce.Multishop.IEaPlanProvider,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan"/> class.
            </summary>
            <param name="eaPlanProvider">The ea plan provider.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.UpdateVisitorStateData(System.String,Sitecore.Analytics.Automation.Data.AutomationStateContext,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult)">
            <summary>
            Updates state data for a visitor that already exists in an EAP state.
            </summary>
            <param name="contactIdentifier">The contact identifier.</param>
            <param name="stateContext">The existing automation state context for the contact.</param>
            <param name="result">The result of the current pipeline run.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.AddContactToPlan(System.String,Sitecore.Data.ID,Sitecore.Data.ID,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult)">
            <summary>
            Adds the visitor to plan.
            </summary>
            <param name="contactIdentifier">The contact identifier.</param>
            <param name="planId">The engagement plan identifier.</param>
            <param name="initialStateId">The initial state identifier.</param>
            <param name="result">The result of the current pipeline run.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.GetContactIdentifier(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderRequest)">
            <summary>
            Gets the contact identifier.
            </summary>
            <param name="args">The arguments.</param>
            <param name="request">The request.</param>
            <returns>The contact identifier.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.EngagementPlanName">
            <summary>
            Gets or sets the engagement plan name.
            </summary>
            <value>
            The engagement plan name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan.InitialStateName">
            <summary>
            Gets or sets the engagement plan's initial state name.
            </summary>
            <value>
            The engagement plan's initial state name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.Common.TriggerOrderGoal">
            <summary>
            Defines the TriggerOrderGoal class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.Common.TriggerOrderPageEvent">
            <summary>
            Defines the TriggerOrderPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.TriggerOrderPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.Common.TriggerOrderGoal.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.GetAvailableCountries">
            <summary>
            Defines the GetAvailableCountries class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.GetAvailableCountries.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetAvailableCountries processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.GetAvailableRegions">
            <summary>
            Defines the GetAvailableRegions class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.GetAvailableRegions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetAvailableRegions processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.GetVisitorOrders.TriggerVisitorViewedOrderHistoryPageEvent">
            <summary>
            Defines the TriggerVisitorViewedOrderHistoryPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.GetVisitorOrders.TriggerVisitorViewedOrderHistoryPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.GetVisitorOrder.TriggerVisitorViewedOrderDetailsPageEvent">
            <summary>
            Defines the TriggerVisitorViewedOrderDetailsPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.GetVisitorOrder.TriggerVisitorViewedOrderDetailsPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent">
            <summary>
            Defines the processor that triggers the page events when an order status changes.
            The TriggerOrderedProductStockStatusPageEvent process is used by the following pipelines:
            <list type="bullet">
            <item>
            <description>
            OrderedProductStockStatus
            </description>
            </item>
            </list>
            The TriggerOrderedProductStockStatusPageEvent processor also registers the following values for an order:
            <list type="bullet">
            <item>
            <description>
            The product id
            </description>
            </item>
            <item>
            <description>
            Stock status
            </description>
            </item>
            <item>
            <description>
            Pre-orderable
            </description>
            </item>
            <item>
            <description>
            In-Stock Date
            </description>
            </item>
            <item>
            <description>
            Shipping Date
            </description>
            </item>
            </list>
            The base class reads the name and text of the event.
            The specialized processor, in addition, adds information about the Product ID , Stock Status, Pre-orderable, In-Stock Date, Shipping Date, if and only if the Stock Status != InStock.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.ShouldRegisterEvent(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets a value indicating whether the page event should be registered.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
              <c>true</c> if the page event should be registered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.    
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.GetPageEventData(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartProduct})">
            <summary>
            Gets the page event data.
            </summary>
            <param name="shopName">The shop name.</param>
            <param name="lineItems">The order line items.</param>
            <returns>The page event data.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The page event text.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.GetPageEventData(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event data.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The page event data.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.GetLineItemsForPageEvents(System.String,Sitecore.Commerce.Entities.Orders.Order)">
            <summary>
            Gets a list of CartProducts that are not in stock
            </summary>
            <param name="shopName">The name of the shop to check against</param>
            <param name="order">The order containing the products to check</param>
            <returns>A list of not in stock cart products</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.CreateInventoryProduct(Sitecore.Commerce.Entities.Carts.CartProduct)">
            <summary>
            Creates an instance of an inventory product from a cart product
            </summary>
            <param name="cartProduct">The cart product to create the inventory product from</param>
            <returns>an inventory product</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.RaisePageEvent(System.Collections.Generic.Dictionary{System.String,System.Object},Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Raises a page event in the given data
            </summary>
            <param name="data">The data to add to the event</param>
            <param name="args">The source args for the processor</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.Name">
            <summary>
            Gets or sets the name of the page event to trigger.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Orders.TriggerOrderedProductStockStatusPageEvent.Text">
            <summary>
            Gets or sets the page event text.
            </summary>
            <value>
            The page event text.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.OrderStatusChanged.TriggerOrderStatusChangedPageEvent">
            <summary>
            Defines the processor that triggers the page events when an order status changes.
            The TriggerOrderStatusChangedPageEvent process is used by the following pipelines:
            <list type="bullet">
            <item>
            <description>
            OrderStatusChanged
            </description>
            </item>
            </list>
            The TriggerOrderStatusChangedPageEvent processor also registers the following values for an order:
            <list type="bullet">
            <item>
            <description>
            The order id
            </description>
            </item>
            <item>
            <description>
            The order status
            </description>
            </item>
            </list>
            The base class reads the name and text of the event.
            The specialized processor, in addition, adds information about the order id, customer id and order status to the event data.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.OrderStatusChanged.TriggerOrderStatusChangedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.TriggerOrderOutcome">
            <summary>
            Defines the OrderOutcome class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerOrderOutcome.GetOutcomeData">
            <summary>
            Gets the outcome data instance.
            </summary>
            <returns>
            The outcome data instance.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.TriggerGiftCardPurchasePageEvent">
            <summary>
            Defines the TriggerGiftCardPurchasePageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerGiftCardPurchasePageEvent.ShouldRegisterEvent(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets a value indicating whether the page event should be registered.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
              <c>true</c> if the page event should be registered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerGiftCardPurchasePageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerGiftCardPurchasePageEvent.TryGetResultAndPayment(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Entities.GiftCards.GiftCardPaymentInfo@,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult@)">
            <summary>
            Tries the get result and payment.
            </summary>
            <param name="args">The arguments.</param>
            <param name="payment">The payment.</param>
            <param name="result">The result.</param>
            <returns>True if the payment and result were found; Other wise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.TriggerLoyaltyCardPurchasePageEvent">
            <summary>
            Defines the TriggerLoyaltyCardPurchasePageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerLoyaltyCardPurchasePageEvent.ShouldRegisterEvent(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets a value indicating whether the page event should be registered.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
              <c>true</c> if the page event should be registered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerLoyaltyCardPurchasePageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.TriggerLoyaltyCardPurchasePageEvent.TryGetResultAndPayment(Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCardPaymentInfo@,Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult@)">
            <summary>
            Tries the get result and payment.
            </summary>
            <param name="args">The arguments.</param>
            <param name="payment">The payment.</param>
            <param name="result">The result.</param>
            <returns>True if the payment and result were found; Other wise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Orders.VisitorCancelOrder.TriggerVisitorCancelOrderPageEvent">
            <summary>
            Defines the TriggerVisitorCancelOrderPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Orders.VisitorCancelOrder.TriggerVisitorCancelOrderPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Prices.TriggerCurrencyChosenPageEvent">
            <summary>
            Defines the TriggerCurrencyChosenPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Prices.TriggerCurrencyChosenPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>
            The page event serializer.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Prices.TriggerCurrencyChosenPageEvent.GetPageEventText(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the page event text.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The page event text.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Prices.GetCartTotal.GetCartTotal">
            <summary>
              Gets total price for the cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Prices.GetCartTotal.GetCartTotal.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Prices.GetProductBulkPrices.GetProductBulkPrices">
            <summary>
            Gets product bulk prices.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Prices.GetProductBulkPrices.GetProductBulkPrices.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Prices.GetProductPrices.GetProductPrices">
            <summary>
             Gets product prices.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Prices.GetProductPrices.GetProductPrices.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Prices.GetSupportedCurrencies.GetSupportedCurrencies">
            <summary>
              Gets the supported currencies.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Prices.GetSupportedCurrencies.GetSupportedCurrencies.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.DeleteProductFromSitecore">
            <summary>
            The delete product from Sitecore processor.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.DeleteProductFromSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.DeleteProductFromSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.DeleteProductFromSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.DeleteProductFromSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.DeleteProductFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.StopSearchIndexing">
            <summary>
            The stops search indexing.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor">
            <summary>
            The search index processor base.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.statusUpdater">
            <summary>
            The status updater.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.ManageIndex(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Manages the index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.GetSearchIndexes">
            <summary>
            Processes the specified arguments.
            </summary>
            <returns>The search indexes.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.IndexNames">
            <summary>
            Gets or sets the name of the index.
            </summary>
            <value> name of the index.</value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.StatusMessageTemplate">
            <summary>
            Gets or sets the status message template.
            </summary>
            <value>The status message template.</value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SearchIndexProcessor.StatusUpdater">
            <summary>
            Gets or sets the status updater.
            </summary>
            <value>
            The status updater.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.StopSearchIndexing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.StopSearchIndexing"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.StopSearchIndexing.ManageIndex(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.DeleteProductsFromSitecore">
            <summary>
            Deletes products from Sitecore that were deleted from the external system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.DeleteProductsFromSitecore._productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.DeleteProductsFromSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.DeleteProductsFromSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.DeleteProductsFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.AddLinesToWishList.TriggerLinesAddedToWishListPageEvent">
            <summary>
            Defines the TriggerLinesAddedToWishListPageEvent class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.Common.TriggerWishListPageEvent">
            <summary>
            Defines the TriggerWishListPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.Common.TriggerWishListPageEvent.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the TriggerPageEevent processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.AddLinesToWishList.TriggerLinesAddedToWishListPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.Common.WishListPipelineProcessor">
            <summary>
            Defines the WishListPipelineProcessor class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan">
            <summary>
            Defines the AddVisitorToEaPlan class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.DataKey">
            <summary>
            The EAP data key.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.#ctor(Sitecore.Commerce.Multishop.IEaPlanProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan"/> class.
            </summary>
            <param name="eaPlanProvider">The ea plan provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.UpdateVisitorStateData(System.String,Sitecore.Analytics.Automation.Data.AutomationStateContext,Sitecore.Commerce.Services.WishLists.CreateWishListResult)">
            <summary>
            Updates state data for a visitor that already exists in an EAP state.
            </summary>
            <param name="contactIdentifier">The contact identifier.</param>
            <param name="stateContext">The existing automation state context for the contact.</param>
            <param name="result">The result of the current pipeline run.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.AddVisitorToPlan(System.String,Sitecore.Data.ID,Sitecore.Data.ID,Sitecore.Commerce.Services.WishLists.CreateWishListResult)">
            <summary>
            Adds a visitor to the cofigured engagement plan.
            </summary>
            <param name="contactIdentifier">The contact identifier.</param>
            <param name="planId">The ID of th eengagement plan the contact will be added to.</param>
            <param name="initialStateId">The ID of the EAP state the contatc will be added to.</param>
            <param name="result">The result of the current pipeline run.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.EngagementPlanName">
            <summary>
            Gets or sets the engagement plan name.
            </summary>
            <value>
            The engagement plan name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.AddVisitorToEaPlan.InitialStateName">
            <summary>
            Gets or sets the engagement plan's initial state name.
            </summary>
            <value>
            The engagement plan's initial state name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.TriggerWishListCreatedPageEvent">
            <summary>
            Defines the TriggerWishListCreatedPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.CreateWishList.TriggerWishListCreatedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.DeleteWishList.TriggerWishListDeletedPageEvent">
            <summary>
            Defines the TriggerWishListCreatedPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.DeleteWishList.TriggerWishListDeletedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.EmailWishLists.TriggerWishListsEmailedPageEvent">
            <summary>
            Defines the TriggerWishListEmailedPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.EmailWishLists.TriggerWishListsEmailedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.PrintWishList.TriggerWishListPrintedPageEvent">
            <summary>
            Defines the TriggerWishListPrintedPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.PrintWishList.TriggerWishListPrintedPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.RemoveWishListLines.TriggerLinesRemovedFromWishListPageEvent">
            <summary>
            Defines the TriggerLinesAddedToWishListPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.RemoveWishListLines.TriggerLinesRemovedFromWishListPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.WishLists.UpdateWishListLines.TriggerLinesUpdatedOnWishListPageEvent">
            <summary>
            Defines the TriggerLinesUpdatedFromWishListPageEvent class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.WishLists.UpdateWishListLines.TriggerLinesUpdatedOnWishListPageEvent.GetAnalyticsData">
            <summary>
            Gets the page event serializer.
            </summary>
            <returns>The page event serializer.</returns>
        </member>
        <member name="T:Sitecore.Commerce.ReadOnlyCollectionAdapter`1">
            <summary>
            Adapter used to convert list and enumerable objects into a ReadOnlyCollection.
            </summary>
            <typeparam name="T">The type of items stored in the collection.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.ReadOnlyCollectionAdapter`1.#ctor">
            <summary>
            Initializes a new instance of the ReadOnlyCollectionAdapter class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.ReadOnlyCollectionAdapter`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the ReadOnlyCollectionAdapter class.
            </summary>
            <param name="collection">The items used to initialize the collection.</param>
        </member>
        <member name="M:Sitecore.Commerce.ReadOnlyCollectionAdapter`1.op_Implicit(Sitecore.Commerce.ReadOnlyCollectionAdapter{`0})~System.Collections.ObjectModel.ReadOnlyCollection{`0}">
            <summary>
            Converts a ReadOnlyCollectionAdapter into a ReadOnlyCollection.
            </summary>
            <param name="collection">The collection to convert.</param>
            <returns>A ReadOnlyCollection.</returns>
        </member>
        <member name="M:Sitecore.Commerce.ReadOnlyCollectionAdapter`1.ToReadOnlyCollection">
            <summary>
            Converts this object into a ReadOnlyCollection.
            </summary>
            <returns>The ReadOnlyCollection.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountByLocationCondition`1">
            <summary>
            Defines the condition to compare the stock count of a product with a predefined value.
            The condition follows the following format:
            “where the stock count of current product [Compares to] [ProductStockCount] in the location [Location]”
            I this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1">
            <summary>
            Defines the base class for all condition classes that operate on stock status.
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1._inventoryServiceProvider">
            <summary>
            The inventory service provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1._commerceContext">
            <summary>
            The commerce context.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>Result of condition execution.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when unknown operator was specified.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.GetProductId">
            <summary>
            Gets the product id.
            </summary>
            <returns>The product id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.GetStockInformation(System.String,System.String)">
            <summary>
            Gets the stock information.
            </summary>
            <param name="location">The location.</param>
            <param name="productId">The product id.</param>
            <returns>The stock information.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.StockCount">
            <summary>
            Gets or sets the product stock count.
            </summary>
            <value>The product stock count.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.InventoryServiceProvider">
            <summary>
            Gets or sets the inventory service provider.
            </summary>
            <value>The inventory service provider.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.StockCountConditionBase`1.CommerceContext">
            <summary>
            Gets or sets the commerce context.
            </summary>
            <value>The commerce context.</value>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountByLocationCondition`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountByLocationCondition`1.GetProductId">
            <summary>
            Gets the product id.
            </summary>
            <returns>The product id.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountByLocationCondition`1.ShopLocation">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The shop location.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountCondition`1">
            <summary>
            Defines the condition to compare the stock count of a product with a predefined value.
            The condition follows the following format:
            “where the stock count of current product [Compares to] [ProductStockCount]”
            I this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountCondition`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockCountCondition`1.GetProductId">
            <summary>
            Gets the product id.
            </summary>
            <returns>The product id.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Search.ProductItemCrawler">
            <summary>
            Inclusing products, ignoring global excluded settings
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ProductItemCrawler.GetIncludeTemplates">
            <summary>
            Retrieves a list of global and custom include templates
            </summary>
            <returns>A list of global and custom include templates</returns>
        </member>
        <member name="M:Sitecore.Commerce.Search.ProductItemCrawler.GetCustomIncludeTemplates(System.String)">
            <summary>
            Retrieves a list of templates ids
            </summary>
            <param name="configPath">the config path</param>
            <returns>List of templates ids</returns>
        </member>
        <member name="M:Sitecore.Commerce.Search.ProductItemCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.SitecoreIndexableItem,System.Boolean)">
            <summary>
            Determines whether [is excluded from index] [the specified indexable].
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="checkLocation">if set to <c>true</c> [check location].</param>
            <returns><c>true</c> if the specified item is exluded from index; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddPartiesRequest">
            <summary>
            Defines the AddPartiesRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CartRequestWithCart">
            <summary>
            Base class used by all Cart requests that require a cart to be passed down.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CartRequest">
            <summary>
            The cart request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.ServiceProviderRequest">
            <summary>
            Base class of all requests.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.ServiceProviderRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.ServiceProviderRequest"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.ServiceProviderRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.ServiceProviderRequest"/> class.
            </summary>
            <param name="selectedUICulture">The selected UI culture.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderRequest.Properties">
            <summary>
            Gets or sets the dictionary used to hold all of the simple properties
            (i.e. strings, int, etc…) associated with the commerce entity.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderRequest.SelectedUICulture">
            <summary>
            Gets or sets the selected UI culture.
            </summary>
            <value>
            The selected UI culture.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderRequest.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
            <value>
            The request context.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.CartRequest"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartRequestWithCart.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.CartRequestWithCart"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CartRequestWithCart.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.AddPartiesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.AddPartiesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.AddPartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddPartiesResult">
            <summary>
            Defines the AddPartiesResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CartResult">
            <summary>
            The cart result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.ServiceProviderResult">
            <summary>
            Represents the result of the service provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.ServiceProviderResult.systemMessages">
            <summary>
            The external system messages.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderResult.Properties">
            <summary>
            Gets or sets the dictionary used to hold all of the simple properties
            (i.e. strings, int, etc…) associated with the commerce entity.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderResult.SystemMessages">
            <summary>
            Gets the external system messages.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderResult.Success">
            <summary>
            Gets or sets a value indicating whether pipeline <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/> succeeded.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CartResult.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.AddPartiesResult.Parties">
            <summary>
            Gets or sets the parties that were added.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest">
            <summary>
            Defines the AddPaymentInfoRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Carts.PaymentInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="payments">The payments.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest.Payments">
            <summary>
            Gets or sets the payments.
            </summary>
            <value>
            The payments.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddPaymentInfoResult">
            <summary>
            Defines the AddPaymentInfoResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.AddPaymentInfoResult.Payments">
            <summary>
            Gets or sets the payments that were added.
            </summary>
            <value>
            The payments that were added.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddShippingInfoRequest">
            <summary>
            Defines the AddShippingInfoRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.AddShippingInfoRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Carts.ShippingInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.AddShippingInfoRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="shippingInfo">The shipping info.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.AddShippingInfoRequest.ShippingInfo">
            <summary>
            Gets or sets the shippings.
            </summary>
            <value>
            The shippings.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddShippingInfoResult">
            <summary>
            Defines the AddShippingInfoResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.AddShippingInfoResult.ShippingInfo">
            <summary>
            Gets or sets the shipping info
            </summary>
            <value>
            The shipping info
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemovePartiesRequest">
            <summary>
            Defines the RemovePartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.RemovePartiesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.RemovePartiesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.RemovePartiesRequest.Parties">
            <summary>
            Gets or sets the parties to be removed.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemovePartiesResult">
            <summary>
            Defines the RemovePartiesResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.RemovePartiesResult.Parties">
            <summary>
            Gets or sets the parties that were removed.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemovePaymentInfoRequest">
            <summary>
            Defines the RemovePaymentInfoRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.RemovePaymentInfoRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Carts.PaymentInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.RemovePaymentInfoRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="payments">The payments to be removed.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.RemovePaymentInfoRequest.Payments">
            <summary>
            Gets or sets the payments.
            </summary>
            <value>
            The payments.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemovePaymentInfoResult">
            <summary>
            Defines the RemovePaymentInfoResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.RemovePaymentInfoResult.Payments">
            <summary>
            Gets or sets the payments that were removed.
            </summary>
            <value>
            The removed payments.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemoveShippingInfoRequest">
            <summary>
            Defines the RemoveShippingInfoRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.RemoveShippingInfoRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Carts.ShippingInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.RemoveShippingInfoRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="shippingInfo">The shippings.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.RemoveShippingInfoRequest.ShippingInfo">
            <summary>
            Gets or sets the shipping info.
            </summary>
            <value>
            The shipping info.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemoveShippingInfoResult">
            <summary>
            Defines the RemoveShippingInfoResult result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.RemoveShippingInfoResult.ShippingInfo">
            <summary>
            Gets or sets the remove shipping info list.
            </summary>
            <value>
            The removed shipping info.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.UpdatePartiesRequest">
            <summary>
            Defines the UpdatePartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.UpdatePartiesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.UpdatePartiesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.UpdatePartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.UpdatePartiesResult">
            <summary>
            Defines the UpdatePartiesResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.UpdatePartiesResult.Parties">
            <summary>
            Gets or sets the parties that were updated.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.CatalogRequest">
            <summary>
            Defines the CatalogRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.CatalogResult">
            <summary>
            Defines the base CatalogResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.CatalogServiceProvider">
            <summary>
            Defines the CatalogServiceProvider class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.ServiceProvider">
            <summary>
            Defines the base class for service providers. The class instantiates service pipeline arguments,
            runs service pipeline and returns result.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.ServiceProvider.pipelineService">
            <summary>
            The pipeline service
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.ServiceProvider.RunPipeline``2(System.String,``0)">
            <summary>
            Runs the pipeline.
            </summary>
            <typeparam name="TRequest">The type of the request.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipelineName">Name of the pipeline.</param>
            <param name="request">The request.</param>
            <returns>The result.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProvider.PipelineService">
            <summary>
            Gets or sets the pipeline service.
            </summary>
            <value>
            The pipeline service.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.CatalogServiceProvider.ProductSorting(Sitecore.Commerce.Services.Catalog.ProductSortingRequest)">
            <summary>
            Generates the Product Sorting page event
            </summary>
            <param name="request">The request.</param>
            <returns>The result of the service call.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.CatalogServiceProvider.FacetApplied(Sitecore.Commerce.Services.Catalog.FacetAppliedRequest)">
            <summary>
            Generates the Facet Applied page event.
            </summary>
            <param name="request">The request.</param>
            <returns>The result of the service call.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.CatalogServiceProvider.VisitedCategoryPage(Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest)">
            <summary>
            Registers an event specifying that the category page has been visited.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.CatalogServiceProvider.VisitedProductDetailsPage(Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest)">
            <summary>
            Registers an event specifying that the product details page has been visited.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.CatalogServiceProvider.SearchInitiated(Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest)">
            <summary>
            Registers the Searches the initiated page event.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.FacetAppliedRequest">
            <summary>
            Defines the FacetAppliedRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.FacetAppliedRequest.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Catalog.FacetAppliedRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="facet">The facet.</param>
            <param name="isApplied">if set to <c>true</c> [is applied].</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.FacetAppliedRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.FacetAppliedRequest.Facet">
            <summary>
            Gets or sets the facet.
            </summary>
            <value>
            The facet.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.FacetAppliedRequest.IsApplied">
            <summary>
            Gets or sets a value indicating whether this facet is applied.
            </summary>
            <value>
            <c>true</c> if this facet is applied; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.Generics.GenericCatalogServiceProviderExtensions">
            <summary>
            Defines the GenericCatalogServiceProviderExtensions class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.Generics.GenericCatalogServiceProviderExtensions.ProductSorting``2(Sitecore.Commerce.Services.Catalog.CatalogServiceProvider,``0)">
            <summary>
            Generates the Product Sorting page event
            </summary>
            <typeparam name="TCatalogRequest">The type of the catalog request.</typeparam>
            <typeparam name="TCatalogResult">The type of the catalog result.</typeparam>
            <param name="catalogProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>The result of the service call.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.Generics.GenericCatalogServiceProviderExtensions.FacetApplied``2(Sitecore.Commerce.Services.Catalog.CatalogServiceProvider,``0)">
            <summary>
            Generates the Facet Applied page event.
            </summary>
            <typeparam name="TCatalogRequest">The type of the catalog request.</typeparam>
            <typeparam name="TCatalogResult">The type of the catalog result.</typeparam>
            <param name="catalogProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>The result of the service call.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.Generics.GenericCatalogServiceProviderExtensions.VisitedCategoryPage``2(Sitecore.Commerce.Services.Catalog.CatalogServiceProvider,``0)">
            <summary>
            Registers an event specifying that the category page has been visited.
            </summary>
            <typeparam name="TCatalogRequest">The type of the catalog request.</typeparam>
            <typeparam name="TCatalogResult">The type of the catalog result.</typeparam>
            <param name="catalogProvider">The catalog provider.</param>
            <param name="request">The request.</param>
            <returns>The result of the service call.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.Generics.GenericCatalogServiceProviderExtensions.VisitedProductDetailsPage``2(Sitecore.Commerce.Services.Catalog.CatalogServiceProvider,``0)">
            <summary>
            Registers an event specifying that the product details page has been visited.
            </summary>
            <typeparam name="TCatalogRequest">The type of the catalog request.</typeparam>
            <typeparam name="TCatalogResult">The type of the catalog result.</typeparam>
            <param name="catalogProvider">The catalog provider.</param>
            <param name="request">The request.</param>
            <returns>The result of the service call.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.Generics.GenericCatalogServiceProviderExtensions.SearchInitiated``2(Sitecore.Commerce.Services.Catalog.CatalogServiceProvider,``0)">
            <summary>
            Registers the Searches the initiated page event.
            </summary>
            <typeparam name="TCatalogRequest">The type of the catalog request.</typeparam>
            <typeparam name="TCatalogResult">The type of the catalog result.</typeparam>
            <param name="catalogProvider">The catalog provider.</param>
            <param name="request">The request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.ProductSortingRequest">
            <summary>
            Defines the ProductSortingRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.ProductSortingRequest.#ctor(System.String,System.String,Sitecore.Commerce.Entities.Catalog.SortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Catalog.ProductSortingRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="sortKey">The sort key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.ProductSortingRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.ProductSortingRequest.SortKey">
            <summary>
            Gets or sets the sort key.
            </summary>
            <value>
            The sort key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.ProductSortingRequest.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest">
            <summary>
            Defines the SearchInitiatedRequest class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="searchTerm">The search term.</param>
            <param name="numberOfHits">The number of hits.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest.SearchTerm">
            <summary>
            Gets or sets the search term.
            </summary>
            <value>
            The search term.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.SearchInitiatedRequest.NumberOfHits">
            <summary>
            Gets or sets the number of hits.
            </summary>
            <value>
            The number of hits.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest">
            <summary>
            Defines the VisitedCategoryPageRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest"/> class
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="categoryName">The category name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest.CategoryId">
            <summary>
            Gets or sets the category identifier.
            </summary>
            <value>
            The category identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedCategoryPageRequest.CategoryName">
            <summary>
            Gets or sets the category name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest">
            <summary>
            Defines the VisitedProductDetailsPageRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest"/> class
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="productId">The product ID.</param>
            <param name="productName">Name of the product.</param>
            <param name="parentCategoryId">The parent category identifier.</param>
            <param name="parentCategoryName">Name of the parent category.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.ProductId">
            <summary>
            Gets or sets the product ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.ProductName">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>
            The name of the product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.ParentCategoryId">
            <summary>
            Gets or sets the parent category identifier.
            </summary>
            <value>
            The parent category identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.ParentCategoryName">
            <summary>
            Gets or sets the parent category name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Catalog.VisitedProductDetailsPageRequest.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddCustomerPartiesRequest">
            <summary>
            Defines the AddCustomerPartiesRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerRequestWithCustomer">
            <summary>
            The base reuqets of all Customer requests that require a Customer model to be passed in.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerRequest">
            <summary>
            Class used as the base of all customer requests.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CustomerRequestWithCustomer.commerceCustomer">
            <summary>
            The commerce user.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerRequestWithCustomer.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.CustomerRequestWithCustomer"/> class.
            </summary>
            <param name="commerceCustomer">The commerce customer.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerRequestWithCustomer.CommerceCustomer">
            <summary>
            Gets or sets the commerce user.
            </summary>
            <value>
            The commerce user.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.AddCustomerPartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.AddCustomerPartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddCustomerPartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.RemoveCustomersRequest">
            <summary>
            Defines the RemoveCustomersRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UserRequestWithUser">
            <summary>
            Defines the base class for all of the one-user-related requests to the customer service provider.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UserRequest">
            <summary>
            Class used as the base of all user requests.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.UserRequestWithUser.commerceUser">
            <summary>
            The commerce user.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.UserRequestWithUser.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.UserRequestWithUser"/> class.
            </summary>
            <param name="commerceUser">
            The commerce user
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserRequestWithUser.CommerceUser">
            <summary>
            Gets the commerce user.
            </summary>
            <value>
            The commerce user
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.RemoveCustomersRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveCustomersRequest"/> class.
            </summary>
            <param name="commerceUser">The user.</param>
            <param name="customerIds">The customer ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.RemoveCustomersRequest.CustomerIds">
            <summary>
            Gets or sets the customer ids.
            </summary>
            <value>
            The customer ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddCustomersRequest">
            <summary>
            Defines the AddUsersRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.AddCustomersRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.AddCustomersRequest"/> class.
            </summary>
            <param name="commerceUser">The user.</param>
            <param name="customerIds">The customer ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddCustomersRequest.CustomerIds">
            <summary>
            Gets or sets the customer ids.
            </summary>
            <value>
            The customer ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.RemoveCustomersResult">
            <summary>
            Defines the RemoveCustomersResult result class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UserResult">
            <summary>
            Defines the base class of all user requests.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.RemoveCustomersResult.CustomerIds">
            <summary>
            Gets or sets the customer ids.
            </summary>
            <value>
            The customer ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddCustomersResult">
            <summary>
            Defines the AddCustomersResult result class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddCustomersResult.CustomerIds">
            <summary>
            Gets or sets the customer ids.
            </summary>
            <value>
            The customer ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddPartiesResult">
            <summary>
            Defines the AddPartiesResult result class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerResult">
            <summary>
            Defines the base class of all customer results.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddPartiesResult.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.RemoveUsersRequest">
            <summary>
            Defines the RemoveUsersRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.RemoveUsersRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveUsersRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="userIds">The user ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.RemoveUsersRequest.UserIds">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>
            The user ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddUsersRequest">
            <summary>
            Defines the AddUsersRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.AddUsersRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.AddUsersRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="userIds">The user ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddUsersRequest.UserIds">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>
            The user ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.RemoveUsersResult">
            <summary>
            Defines the RemoveUsersResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.RemoveUsersResult.UserIds">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>
            The user ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddUsersResult">
            <summary>
            Defines the AddUsersResult result class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddUsersResult.UserIds">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>
            The user ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult">
            <summary>
            Defines the CustomerPartiesResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria">
            <summary>
            Defines the class containing the search criteria for customers.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.externalIDs">
            <summary>
            The external Ids
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.externalUserIDs">
            <summary>
            The external customer Ids
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.ExternalIDs">
            <summary>
            Gets or sets the external Ids.
            </summary>
            <value>
            The external I ds.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.ExternalUserIDs">
            <summary>
            Gets or sets the external customer Ids.
            </summary>
            <value>
            The external customer Ids.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.IsDisabled">
            <summary>
            Gets or sets the is disabled.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerSearchCriteria.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.AddPartiesRequest">
            <summary>
            Defines the AddPartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.AddPartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.AddPartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.AddPartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetCustomerRequest">
            <summary>
              The get customer request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetCustomerRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomerRequest"/> class.
            </summary>
            <param name="externalId">The externalId for the requested customer.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetCustomerRequest.ExternalId">
            <summary>
            Gets or sets the External Id.
            </summary>
            <value>
            The external id of the customer.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetCustomerResult">
            <summary>
            The get customers result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetCustomerResult.CommerceCustomer">
            <summary>
            Gets or sets the commerce customer.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetPartiesRequest">
            <summary>
            Defines the GetPartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetPartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetPartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetPartiesResult">
            <summary>
            Defines the GetPartiesResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetPartiesResult.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetUserRequest">
            <summary>
            The get users request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetUserRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUserRequest"/> class.
            </summary>
            <param name="userName">The userName of the requested user.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetUserRequest.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetUserResult">
            <summary>
            The get user result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetUserResult.CommerceUser">
            <summary>
            Gets or sets the commerce user.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.RemoveCustomerPartiesRequest">
            <summary>
            Defines the RemoveCustomerPartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.RemoveCustomerPartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveCustomerPartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.RemoveCustomerPartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.RemovePartiesRequest">
            <summary>
            Defines the RemovePartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.RemovePartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.RemovePartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.RemovePartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdateCustomerPartiesRequest">
            <summary>
            Defines the UpdateCustomerPartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.UpdateCustomerPartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Customers.CustomerParty})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateCustomerPartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UpdateCustomerPartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdatePartiesRequest">
            <summary>
            Defines the UpdatePartiesRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.UpdatePartiesRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdatePartiesRequest"/> class.
            </summary>
            <param name="commerceCustomer">The customer.</param>
            <param name="parties">The parties.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UpdatePartiesRequest.Parties">
            <summary>
            Gets or sets the parties.
            </summary>
            <value>
            The parties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdatePasswordRequest">
            <summary>
            Updates user password request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.UpdatePasswordRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdatePasswordRequest"/> class.
            </summary>
            <param name="userName">The user name</param>
            <param name="oldPassword">The user old password</param>
            <param name="newPassword">The user new password</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UpdatePasswordRequest.UserName">
            <summary>
            Gets or sets the user name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UpdatePasswordRequest.OldPassword">
            <summary>
            Gets or sets the user old password
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UpdatePasswordRequest.NewPassword">
            <summary>
            Gets or sets the user new password
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdatePasswordResult">
            <summary>
            Updates user password result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UserSearchCriteria">
            <summary>
            Defines the class containing the search criteria for users.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.UserSearchCriteria.externalIDs">
            <summary>
            The external Ids
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.UserSearchCriteria.externalCustomerIDs">
            <summary>
            The external customer Ids
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserSearchCriteria.ExternalIDs">
            <summary>
            Gets or sets the external Ids.
            </summary>
            <value>
            The external I ds.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserSearchCriteria.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserSearchCriteria.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserSearchCriteria.ExternalCustomerIDs">
            <summary>
            Gets or sets the external customer Ids.
            </summary>
            <value>
            The external customer Ids.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserSearchCriteria.IsDisabled">
            <summary>
            Gets or sets a value indicating whether this instance is disabled.
            </summary>
            <value>
            <c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserSearchCriteria.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.EntityFactory">
            <summary>
            Defines the entity factory that uses Sitecore mechanisms of dependency injection
            to instantiate objects according to their definitions in the configuration file.
            The dependency injection is handled by the <see cref="T:Sitecore.Configuration.Factory"/> class.
            Commerce entities are configured in the "//sitecore/commerce.Entities" node.
            This class inherits from the IEntityFactory interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.IEntityFactory">
            <summary>
            Defines the interface that you can use to instantiate an object with a specific name.
            This name should be an identifier and not the name of the class name.
            The default implementation of this interface is the <see cref="T:Sitecore.Commerce.Entities.EntityFactory"/> class.
            The <see cref="T:Sitecore.Commerce.Entities.EntityFactory"/> class uses Sitecore mechanism of embedded dependency injection.
            to instantiate objects according to their definitions in the  <see cref="T:Sitecore.Configuration.Factory"/> configuration file.
            In the  <see cref="T:Sitecore.Configuration.Factory"/> file, Commerce entities are configured in the //sitecore/commerce.Entities node.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.IEntityFactory.Create(System.String)">
            <summary>
            Creates the entity with a specific name.
            </summary>
            <param name="entityName">Name of the entity</param>
            <returns>The entity</returns>
        </member>
        <member name="F:Sitecore.Commerce.Entities.EntityFactory.CommerceEntities">
            <summary>
            The entities node name of Commerce.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EntityFactory.Create(System.String)">
            <summary>
            Creates the entity based on the name that acts as their identifier.
            This method uses the facilities of the Sitecore embedded
            dependency injection mechanisms to instantiate objects
            according to their definitions in the configuration file.
            The dependency injection is handled by the <see cref="T:Sitecore.Configuration.Factory"/> class.
            Commerce entities are configured in the "//sitecore/commerce.Entities" node.
            </summary>
            <param name="entityName">The name of the entity</param>
            <returns>The entity</returns>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.CartAdjustment">
            <summary>
            Describes a charge or a discount on a <see cref="T:Sitecore.Commerce.Entities.Carts.Cart"/>, <see cref="T:Sitecore.Commerce.Entities.Carts.CartLine"/> or a product on a cart line.
            Some examples are:
            <list type="bullet">
             <item>
              <description>
            Coupon codes that are manually triggered on the cart or the cart line.
             </description>
             </item>
             <item>
             <description>
            Shipping surcharges that are automatically triggered on the cart or cart Line.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartAdjustment.Amount">
            <summary>
            Gets or sets the amount of the adjustment.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartAdjustment.Description">
            <summary>
            Gets or sets the description of the adjustment.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartAdjustment.IsCharge">
            <summary>
            Gets or sets a value indicating whether the adjustment is a charge.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartAdjustment.LineNumber">
            <summary>
            Gets or sets the line number.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartAdjustment.Percentage">
            <summary>
            Gets or sets the percentage of the adjustment.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.CartLine">
            <summary>
            Represents a line in the cart. Each line represents a product and the quantity of the product that a visitor has added to the cart.
            The CartLine class also represents the position of the line relative to other lines in the cart, which controls the order in which the lines appear when they are displayed.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Carts.CartLine.adjustments">
            <summary>
            Represents a collection of adjustments that contains charges and discounts that are applied to the cart line.
            </summary>
            <example>
            <list type="bullet">
            <item>
            <description>
            Coupon codes that are manually triggered
            </description>
            </item>
            <item>
            <description>
            Shipping charges that are automatically triggered
            </description>
            </item>
            </list>
            </example>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Carts.CartLine.subLines">
            <summary>
            Represents the sublines on a cart line.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Carts.CartLine.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.Adjustments">
            <summary>
            Gets or sets the collection of adjustments that contains charges and discounts that are applied to the cart line. 
            The actual content of the adjustments are provided by the external commerce system.
            </summary>
            <example>
            <list type="bullet">
            <item>
            <description>
            Coupon codes that are manually triggered
            </description>
            </item>
            <item>
            <description>
            Shipping charges that are automatically triggered
            </description>
            </item>
            </list>
            </example>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.SubLines">
            <summary>
            Gets or sets the cart line sublines.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.Total">
            <summary>
            Gets or sets the total of the cart line. It represents the total price of the product.
            If no break-pricing or other price adjustments are applied, this value is the same as the total price of the product (or subitem) multiplied by the quantity including the adjustments.
            It is reserved for the pricing service layer and you should not change its value when you add, remove, or update the cart lines.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.Product">
            <summary>
            Gets or sets the object that represents the actual product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.ExternalCartLineId">
            <summary>
            Gets or sets the external cart line ID. It is a unique identifier for the cart line in the commerce system. 
            It is empty when you add cart lines and can be set by the external commerce system.
            You can use it to remove or update cart lines.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.LineNumber">
            <summary>
            Gets or sets the cart line ID. It is a unique identifier that represents the position of the cart line in the cart. 
            It is empty when you add the cart line and is set by the external commerce system.
            You can use it to remove or update cart lines.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartLine.Quantity">
            <summary>
            Gets or sets the quantity of a product in the cart line.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.CartOption">
            <summary>
            Represents a configurable or variable value that is specific to a product in the cart.
            An example of an option is an engraving on a personalized product. When the engraving service is added to the cart,
            the text to be engraved is also required. The <see cref="T:Sitecore.Commerce.Entities.Carts.CartOption"/> represents this.
            If an option has an additional charge, the option is represented as a separate total on a new cart line.
            The option is only used to describe variables or settings on a specific product, not adjustments or pricing changes.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartOption.Description">
            <summary>
            Gets or sets the description. The description property is optional and explains the option, for example, "engraving" and "names on t-shirts."
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartOption.OptionId">
            <summary>
            Gets or sets the internal ID of the option. The ID is typically provided by Sitecore when the user adds an option to the cart line.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartOption.Value">
            <summary>
            Gets or sets the the actual custom value.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Carts.CartProduct">
            <summary>
            Represents a product on a cart line, or, in some cases, a subitem of a cart product such as insurance.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Carts.CartProduct.adjustments">
            <summary>
            The adjustments.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Carts.CartProduct.options">
            <summary>
            The sublines.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Carts.CartProduct.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.Adjustments">
            <summary>
            Gets or sets a group of adjustments that describes the charges or the discounts that are applied to a product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.LineNumber">
            <summary>
            Gets or sets the number of the cart line that also represents the position of the product in the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.Options">
            <summary>
            Gets or sets the product options that are specified by the visitor.
            </summary>
            <example>
            engraving = "Adam"
            </example>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.ProductId">
            <summary>
            Gets or sets a unique identifier for the product in the external commerce system.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.Price">
            <summary>
            Gets or sets the product price. You can assign a value to the Price property when you add or update cart lines in the cart. When the GetCartTotal pipeline is called, the Pricing service layer sets the product property.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.SitecoreProductItemId">
            <summary>
            Gets or sets the Sitecore product item ID. You can use the SitecoreProductItemId property to reference a product item in Sitecore directly.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.StockStatus">
            <summary>
            Gets or sets the product stock status. You can assign a value to the stock status property when you add or update cart lines in the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.InStockDate">
            <summary>
            Gets or sets the product in-stock date. You can assign a value to the stock status property when you add or update cart lines in the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.ShippingDate">
            <summary>
            Gets or sets the product shipping date. You can assign a value to the stock status property when you add or update cart lines in the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Carts.CartProduct.ProductName">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>
            The name of the product.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.EntityFactoryExtensions">
            <summary>
            The extensions for the the <see cref="T:Sitecore.Commerce.Entities.EntityFactory"/> which is
            the default implementation of the <see cref="T:Sitecore.Commerce.Entities.IEntityFactory"/> interface.
            The entity factory uses Sitecore mechanisms of dependency injection
            to instantiate objects according to their definitions in the configuration file.
            The dependency injection is handled by the <see cref="T:Sitecore.Configuration.Factory"/> class.
            Commerce entities are configured in the "//sitecore/commerce.Entities" node.
            You can uses these extensions to strongly specify the type of the instantiated entity to prevent subsequent type casting.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.EntityFactoryExtensions.Create``1(Sitecore.Commerce.Entities.IEntityFactory,System.String)">
            <summary>
            Creates the entity based on the name which acts as their identifier.
            Performs the additional type casting before returning value. 
            </summary>
            <typeparam name="T">The return type</typeparam>
            <param name="entityFactory">The entity factory</param>
            <param name="entityName">The name of the entity</param>
            <returns>The entity</returns>
        </member>
        <member name="T:Sitecore.Commerce.Data.Converters.EntityJsonConverter`1">
            <summary>
            Provides the type definition that is passed to the Newtonsoft JSON Converter.
            The JSON coverter can then deserialize the JSON string into an instance of the correct type.
            The main goal is to serve the instantiation of the Commerce business entities that are registered in commerce.Entities configuration section.
            </summary>
            <typeparam name="T">The object type</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Data.Converters.EntityJsonConverter`1.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Data.Converters.EntityJsonConverter`1.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Data.Converters.EntityJsonConverter`1"/> class.
            </summary>
            <param name="entityFactory">The entity factory</param>
        </member>
        <member name="M:Sitecore.Commerce.Data.Converters.EntityJsonConverter`1.Create(System.Type)">
            <summary>
            Creates an instance of the entity using the <see cref="T:Sitecore.Commerce.Entities.EntityFactory"/> class and the name of the <see cref="T:System.Type"/> type.
            This method allows the Newtonsoft JSON Converter to instantiate the Commerce business entities that are registered in commerce.Entities configuration section.
            </summary>
            <param name="objectType">The object type</param>
            <returns>The <see cref="T:System.Type"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.IndexStockInformation">
            <summary>
            IndexStockInformation represents indexing information for the inventory information about a product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.IndexStockInformation.Product">
            <summary>
            Gets or sets the product
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.IndexStockInformation.InStockLocations">
            <summary>
            Gets or sets the locations where the product is in-stock.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.IndexStockInformation.OutOfStockLocations">
            <summary>
            Gets or sets the locations where the product is out-of-stock.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.IndexStockInformation.OrderableLocations">
            <summary>
            Gets or sets the locations where the product can be ordered from.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.IndexStockInformation.PreOrderable">
            <summary>
            Gets or sets a value indicating whether the product can be pre-ordered.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.OrderableInformation">
            <summary>
            Represents when a product is available for purchase.  The orderable information provides an
            estimate as to when a product will become available in case a product is out-of-stock or pre-orderable.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.OrderableInformation.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.Product">
            <summary>
            Gets or sets the product information in the commerce system.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.Status">
            <summary>
            Gets or sets the stock status.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.InStockDate">
            <summary>
            Gets or sets an ETA date for when the product is back in stock.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.ShippingDate">
            <summary>
            Gets or sets an ETA date for when the product is shippable.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.CartQuantityLimit">
            <summary>
            Gets or sets a limit to the quantity of the product that the visitor can add to his or her cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.OrderableStartDate">
            <summary>
            Gets or sets a date and time for which the first orders can be placed for the product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.OrderableEndDate">
            <summary>
            Gets or sets a date and time for which the last orders can be placed for the product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.OrderableInformation.RemainingQuantity">
            <summary>
            Gets or sets the quantity of the product that is currently available.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel">
            <summary>
            StockDetailsLevel represents the level of detail being requested when retrieving stock information.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.StatusFlag">
            <summary>
            Bit flag representing status details.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.AvailibilityFlag">
            <summary>
            Bit flag representing availability details.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.CountFlag">
            <summary>
            Bit flag representing stock count details.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel"/> class.
            </summary>
            <param name="value">the value</param>
            <param name="name">the name</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.op_Implicit(Sitecore.Commerce.Entities.Inventory.StockDetailsLevel)~System.Int32">
            <summary>
            Implicitly converts a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel"/> to an integer.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.Inventory.StockDetailsLevel">
            <summary>
            Implicitly convverts an integer to a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.op_Equality(Sitecore.Commerce.Entities.Inventory.StockDetailsLevel,Sitecore.Commerce.Entities.Inventory.StockDetailsLevel)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.op_Inequality(Sitecore.Commerce.Entities.Inventory.StockDetailsLevel,Sitecore.Commerce.Entities.Inventory.StockDetailsLevel)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.Status">
            <summary>
            Gets the stock level detail that Indicates that the minimum information is to be returned (only stock status).
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.StatusAndAvailability">
            <summary>
            Gets the stock level detail that Indicates that the status and availability date information is to be returned.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.Count">
            <summary>
            Gets the stock level detail that Indicates that the status, availability date, and stock count information is to be returned.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockDetailsLevel.All">
            <summary>
            Gets the stock level detail that Indicates that all stock information is to be returned.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockInformation">
            <summary>
            Represents the availability of a product.  The inventory status is used to determine if and when
            a product is available for purchase, and how manu units of the product are currently on-hand.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockInformation.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformation.Product">
            <summary>
            Gets or sets the product information in the commerce system.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformation.Status">
            <summary>
            Gets or sets the stock status.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformation.Count">
            <summary>
            Gets or sets the quantity of the product available.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformation.AvailabilityDate">
            <summary>
            Gets or sets the date on which the product will become available, in case the product is out-of-stock or pre-orderable.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockInformation.Location">
            <summary>
            Gets or sets the stock location.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Inventory.StockStatus">
            <summary>
            Represents the current stock status of a product;
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> class.
            </summary>
            <param name="value">The value of the stock status.</param>
            <param name="name">The name of the stock status.</param>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.op_Implicit(Sitecore.Commerce.Entities.Inventory.StockStatus)~System.Int32">
            <summary>
            Implicitly converts a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> to an integer.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.op_Implicit(System.Int32)~Sitecore.Commerce.Entities.Inventory.StockStatus">
            <summary>
            Implicitly convverts an integer to a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.op_Equality(Sitecore.Commerce.Entities.Inventory.StockStatus,Sitecore.Commerce.Entities.Inventory.StockStatus)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.op_Inequality(Sitecore.Commerce.Entities.Inventory.StockStatus,Sitecore.Commerce.Entities.Inventory.StockStatus)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="first">The first parameter.</param>
            <param name="second">The second parameter.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Inventory.StockStatus.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockStatus.InStock">
            <summary>
            Gets the stock statis that Indicates that the requested product is in stock.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockStatus.OutOfStock">
            <summary>
            Gets the stock statis that Indicates that the requested product is out of stock.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockStatus.PreOrderable">
            <summary>
            Gets the stock statis that Indicates that the requested product is not in stock yet, but is pre-orderable.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Inventory.StockStatus.BackOrderable">
            <summary>
            Gets the stock statis that Indicates that the requested product is out of stock, but is back-orderable.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Division">
            <summary>
            Represents the product division and its data. The Division class implements the ProductEntity class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.ProductEntity">
            <summary>
            Defines the ProductEntity type. The ProductEntity class implements the Entity class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductEntity.SitecoreItemId">
            <summary>
            Gets or sets the ID of Sitecore item.
            </summary>
            <value>The ID of Sitecore item.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductEntity.Created">
            <summary>
            Gets or sets the time stamp that indicates the creation date and time of the product entity.
            You can use it to synchronize the product's data between Sitecore and the external commerce system.
            </summary>
            <value>The creation date and time of the product </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductEntity.Updated">
            <summary>
            Gets or sets the time stamp that indicates the update date and time of the product entity.
            You can use it to synchronize the product's data between Sitecore and the external commerce system.
            </summary>
            <value>The update date and time of the product </value>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Division.subDivisions">
            <summary>
            The subdivisions in a product division.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Division.Name">
            <summary>
            Gets or sets the division name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Division.Description">
            <summary>
            Gets or sets the division description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Division.SubDivisions">
            <summary>
            Gets or sets a group of subdivisions in a division.
            </summary>
            <value>The subdivisions in a division.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Manufacturer">
            <summary>
            Represents the manufacturer of the product and its data. The Manufacturer class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Manufacturer.productTypes">
            <summary>
            The product types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.Manufacturer.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Manufacturer.Name">
            <summary>
            Gets or sets the name of the manufacturer.
            </summary>
            <value>The name of the manufacturer.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Manufacturer.Description">
            <summary>
            Gets or sets the description of the manufacturer.
            </summary>
            <value>The description of the manufacturer.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Manufacturer.WebSiteUrl">
            <summary>
            Gets or sets the URL of the manufacturer's website.
            </summary>
            <value>The URL of the manufacturer's website.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Manufacturer.ProductTypes">
            <summary>
            Gets or sets the product types that the manufacturer produces.
            </summary>
            <value>The product types.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Product">
            <summary>
            Represents the product and its data. The Product class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.classificationGroups">
            <summary>
            Represents the classification groups for a product.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.manufacturers">
            <summary>
            The manufacturers.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.productTypes">
            <summary>
            The product types.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.productSpecifications">
            <summary>
            The product specifications.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.resources">
            <summary>
            The resources.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.divisions">
            <summary>
            The divisions.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.relationTypes">
            <summary>
            The relation types.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.Product.identification">
            <summary>
            The identification dictionary.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.Product.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.Name">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>The name of the product</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.ShortDescription">
            <summary>
            Gets or sets a short description of the product.
            </summary>
            <value>A short description of the product</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.FullDescription">
            <summary>
            Gets or sets a full description of the product.
            </summary>
            <value>A full description of the product</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.ProductTypes">
            <summary>
            Gets or sets the type of the product.
            </summary>
            <value>The type of the product</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.Manufacturers">
            <summary>
            Gets or sets the name of the product's manufacturer.
            </summary>
            <value>The name of the product's manufacturer</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.ClassificationGroups">
            <summary>
            Gets or sets the classification groups for a product.
            </summary>
            <value>The classification groups for a product</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.ProductSpecifications">
            <summary>
            Gets or sets the product specifications.
            </summary>
            <value>
            The product specifications.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.VariantSpecifications">
            <summary>
            Gets or sets the variant specifications.
            </summary>
            <value>The variant specifications.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.Resources">
            <summary>
            Gets or sets the resources.
            </summary>
            <value>The resources.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.Divisions">
            <summary>
            Gets or sets the divisions.
            </summary>
            <value>The divisions.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.RelationTypes">
            <summary>
            Gets or sets the relation types.
            </summary>
            <value>The relation types.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Product.Identification">
            <summary>
            Gets or sets the identification dictionary.
            </summary>
            <value>The identification dictionary.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Classification">
            <summary>
            Represents the classification of the product and its data. The ProductClassification class implements the ProductEntity class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.Classification.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Classification.ExternalParentId">
            <summary>
            Gets or sets the ID of the parent classification in the external commerce system.
            </summary>
            <value>The ID of the parent classification in th external commerce system</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Classification.Name">
            <summary>
            Gets or sets the name of the product classification.
            </summary>
            <value>The name of the product classification</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Classification.Description">
            <summary>
            Gets or sets the description of the product classification.
            </summary>
            <value>The description of the product classification</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Classification.Specifications">
            <summary>
            Gets or sets the specifications of the product classification.
            </summary>
            <value>The specifications of the product classification</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.ClassificationGroup">
            <summary>
            Represents the group of classifications in a product. The ProductClassificationGroup class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.ClassificationGroup.classifications">
            <summary>
            The group of product classifications.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ClassificationGroup.Name">
            <summary>
            Gets or sets the name of the group of product classifications.
            </summary>
            <value>The name of the group of product classifications.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ClassificationGroup.Description">
            <summary>
            Gets or sets the description of a classifications group.
            </summary>
            <value>The description of a classifications group</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ClassificationGroup.Classifications">
            <summary>
            Gets or sets the group of classifications for a product.
            </summary>
            <value>The group of classifications for a product</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Relation">
            <summary>
            Represents the product relation and its data. The ProductRelation class implements the ProductEntity class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.Relation.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Relation.Product">
            <summary>
            Gets or sets the ID of the product.
            </summary>
            <value>The product ID</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Relation.ReferredProduct">
            <summary>
            Gets or sets the ID of the referred product.
            </summary>
            <value>The ID of the referred product</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.RelationType">
            <summary>
            Represents the type of the product relation and the associated data. The ProductRelationType class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.RelationType.relations">
            <summary>
            The relations of a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.RelationType.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.RelationType.Name">
            <summary>
            Gets or sets the name of the product relation.
            </summary>
            <value>The name of the product relation</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.RelationType.Relations">
            <summary>
            Gets or sets the relations.
            </summary>
            <value>The relations.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.ProductResource">
            <summary>
            Represents the product resource and its associated data. The ProductResource class implements the ProductEntity class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductResource.Type">
            <summary>
            Gets or sets the type of the product resource.
            </summary>
            <value>
            The type of the product resource.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductResource.Uri">
            <summary>
            Gets or sets the resource URI.
            </summary>
            <value>
            The resource URI.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductResource.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductResource.MediaItemId">
            <summary>
            Gets or sets the media item identifier.
            </summary>
            <value>
            The media item identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.GlobalSpecification">
            <summary>
            Represents the product specifications and the associated data. The GlobalSpecification class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.GlobalSpecification.options">
            <summary>
            The specifications.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.GlobalSpecification.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.GlobalSpecification.Options">
            <summary>
            Gets or sets the specifications.
            </summary>
            <value>The specifications.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.GlobalSpecificationOption">
            <summary>
            Represents the product specification option. The GlobalSpecificationOption class implements the ProductEntity class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.GlobalSpecificationOption.ExternalSpecificationId">
            <summary>
            Gets or sets the external ID. The external ID is a unique identifier of the global specification option in the external commerce system. 
            The external ID is not assigned any value before the global specification option has been created in the external commerce system. 
            </summary>
            <value>The ID of the global specification option in the external commerce system.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.GlobalSpecificationOption.Name">
            <summary>
            Gets or sets the option name of the global specification.
            </summary>
            <value>
            The option name of the global specification.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Specification">
            <summary>
            Represents the product specifications and its associated data. The ProductSpecification class implements the ProductEntity class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Specification.Group">
            <summary>
            Gets or sets the group that the product specification belongs to.
            </summary>
            <value>The product specification group.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Specification.Key">
            <summary>
            Gets or sets the key that defines the value of the specification.
            </summary>
            <value>The specification key.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Specification.Value">
            <summary>
            Gets or sets the value of the specification.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.GlobalSpecifications">
            <summary>
            Represents the product specification collection and its data. The GlobalSpecifications class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.GlobalSpecifications.specifications">
            <summary>
            The specifications.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.GlobalSpecifications.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.GlobalSpecifications.Specifications">
            <summary>
            Gets or sets the specifications.
            </summary>
            <value>The specifications.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.ProductType">
            <summary>
            Represents the product type and its data. The ProductType class implements the ProductEntity class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.ProductType.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductType.ProductTypeId">
            <summary>
            Gets or sets the ID of the product type. 
            </summary>
            <value>The ID of the product type</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductType.ParentProductTypeId">
            <summary>
            Gets or sets the ID of the parent product type.
            </summary>
            <value>
            The parent product type ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductType.Description">
            <summary>
            Gets or sets the description of the product type.    
            </summary>
            <value>The product type description.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductType.Specifications">
            <summary>
            Gets or sets the specifications of the product type.
            </summary>
            <value>The product type specifications.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductType.DefaultValues">
            <summary>
            Gets or sets the default values of the specifications of the product type.
            </summary>
            <value>The default product type specification values</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.ProductVariantSpecifications">
            <summary>
            Represents the product variant specifications and the associated data. The ProductVariantSpecifications class implements the ProductEntity class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.ProductVariantSpecifications.specifications">
            <summary>
            The specifications.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.ProductVariantSpecifications.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductVariantSpecifications.Specifications">
            <summary>
            Gets or sets the specifications of the product variant.
            </summary>
            <value>The product variant specifications.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.Resource">
            <summary>
            Represents the product resource. The Resource class implements the ProductEntity class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Resource.Name">
            <summary>
            Gets or sets the name of the resource.
            </summary>
            <value>
            The Resource name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Resource.MimeType">
            <summary>
            Gets or sets the MIME type of the resource.
            </summary>
            <value>
            The MIME type of the resource. 
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Resource.BinaryData">
            <summary>
            Gets or sets the binary data.
            </summary>
            <value>
            The binary data.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.Resource.ResourceType">
            <summary>
            Gets or sets the type of the resource.
            </summary>
            <value>
            The type of the resource.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Products.ProductSpecifications">
            <summary>
            The specifications.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Products.ProductSpecifications.specifications">
            <summary>
            The specifications.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Products.ProductSpecifications.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductSpecifications.Specifications">
            <summary>
            Gets or sets the specifications.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Products.ProductSpecifications.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Install.Localization.JobManagerWrapper">
            <summary>
            Defines the wrapper class of the <see cref="T:Sitecore.Jobs.JobManager"/> class.
            The JobManagerWrapper class uses only one ImportLanguage job. It is used 
            in the package installation post-steps to import localization keys from the XML files to CMS.
            It is used for unit-testing because the JobManager class contains static methods.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.JobManagerWrapper.Start(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Starts the specified database name.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="filePath">The file path</param>
            <param name="languages">The languages</param>
            <returns>The job</returns>
        </member>
        <member name="T:Sitecore.Commerce.Install.Localization.LanguageManagerWrapper">
            <summary>
            Defines the wrapper of the language manager.
            You can use this class to:
            <list type="bullet">
            <item>
            <description>
            Wrap Sitecore's language manager that is defined by the <see cref="T:Sitecore.Data.Managers.LanguageManager"/> class.
            </description>
            </item>
            <item>
            <description>
            Retrieve a list of the languages in the specified database.
            </description>
            </item>
            <item>
            <description>
            Perform the unit-testing because the LanguageManager class contains static methods.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LanguageManagerWrapper.database">
            <summary>
            Database instance.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.LanguageManagerWrapper.#ctor(Sitecore.Data.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Install.Localization.LanguageManagerWrapper"/> class.
            </summary>
            <param name="database">The database</param>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.LanguageManagerWrapper.GetLanguages">
            <summary>
            Gets a list of the languages.
            </summary>
            <returns>
            The languages
            </returns>
        </member>
        <member name="P:Sitecore.Commerce.Install.Localization.LanguageManagerWrapper.Languages">
            <summary>
            Gets or sets the list of the languages in the specified database.
            It is used for unit-testing because the default LanguageManager contains static methods.
            </summary>
            <value>
            The languages.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Install.Localization.LocalizationInstaller">
            <summary>
            Defines the class that you can use to import the localization keys from the XML files that are in the installation packages. 
            This class starts a Sitecore job for every language.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LocalizationInstaller.languageManagerWrapper">
            <summary>
            LanguageManagerWrapper instance.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LocalizationInstaller.jobManagerWrapper">
            <summary>
            Job manager wrapper instance.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.LocalizationInstaller.#ctor(Sitecore.Commerce.Install.Localization.LanguageManagerWrapper,Sitecore.Commerce.Install.Localization.JobManagerWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Install.Localization.LocalizationInstaller"/> class.
            </summary>
            <param name="languageManagerWrapper">The wrapper of the language manager </param>
            <param name="jobManagerWrapper">The wrapper of the job manager</param>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.LocalizationInstaller.Install(System.String,System.String)">
            <summary>
            Imports the localization keys from the XML files to the specified database.
            This method starts a Sitecore job for each language.
            </summary>
            <param name="databaseName">The name of the database that you import the language to</param>
            <param name="filePath">The path to the file that contains the localization keys</param>
        </member>
        <member name="T:Sitecore.Commerce.Install.Localization.LocalizationPostStep">
            <summary>
            Defines the localization process that is run after the package installation. 
            This process imports localization keys from XML-files, that are in the package, to the Core and Master databases.
            The following is an example for the format of the list files:
            "folder" - "temp", "files" - "Core\da-DK.xml;Core\de-DE.xml;Core\ja-JP.xml"
            In this example:
            <list type="bullet">
            <item>
            <description>
            "folder" and "temp" are meta data files.  
            </description>
            </item>
            <item>
            <description>
            The XML files that are called da-DK, de-DE, and ja-JP are taken from the ~/temp/Core folder.
            </description>
            </item>
            <item>
            <description>
            The localization keys are imported from these XML files.
            </description>
            </item> 
            </list>
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LocalizationPostStep.CoreDatabaseName">
            <summary>
            Core database name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LocalizationPostStep.databaseNames">
            <summary>
            Database names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LocalizationPostStep.localizationInstaller">
            <summary>
            Localization installer instance.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.Localization.LocalizationPostStep.siteRoot">
            <summary>
            Site root.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.LocalizationPostStep.Run(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs the post step process.
            </summary>
            <param name="output">The output</param>
            <param name="metaData">The meta data</param>
        </member>
        <member name="M:Sitecore.Commerce.Install.Localization.LocalizationPostStep.GetFilesPathes(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the paths to the files.
            </summary>
            <param name="metaData">The meta data</param>
            <returns>The paths to the files</returns>
        </member>
        <member name="P:Sitecore.Commerce.Install.Localization.LocalizationPostStep.Installer">
            <summary>
            Gets or sets the localization installer.
            </summary>
            <value>The installer</value>
        </member>
        <member name="P:Sitecore.Commerce.Install.Localization.LocalizationPostStep.SiteRoot">
            <summary>
            Gets or sets the site root.
            </summary>
            <value>
            The site root.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Multishop.EaPlanProvider">
            <summary>
            Is usedto determine the engagement plan by the shop name.
            This class implements the IEaPlanProvider interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Multishop.IEaPlanProvider">
            <summary>
            Defines the interface which allows its consumers to determine engagement plan by corresponding shop name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IEaPlanProvider.GetEaPlanId(System.String)">
            <summary>
            Gets the corresponding engagement plan and initial state IDs by shop name.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <returns>ID of engagement plan and initial state respectively for the specified shop name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IEaPlanProvider.GetEaPlanId(System.String,System.String,System.String)">
            <summary>
            Gets the corresponding engagement plan and initial state IDs by shop name and engagement plan name.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="engagementPlanName">Name of the plan.</param>
            <param name="stateName">Name of the plan's initial state.</param>
            <returns>ID of engagement plan and initial state respectively for the specified shop name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.IEaPlanProvider.GetShopNameFromEaPlanName(System.String)">
            <summary>
            Gets the name of the shop corresponding to engagement plan with the given name.
            </summary>
            <param name="engagementName">Name of the engagement plan.</param>
            <returns>Name of the shop corresponding to engagement plan with the given name.</returns>
        </member>
        <member name="F:Sitecore.Commerce.Multishop.EaPlanProvider.EngagementPlanNamingPattern">
            <summary>
            The engagement plan naming pattern.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Multishop.EaPlanProvider.DefaultInitialStateName">
            <summary>
            The default initial state name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Multishop.EaPlanProvider.EngagementPlanNamePropertyName">
            <summary>
            The engagement plan name property name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Multishop.EaPlanProvider.InitialStateNamePropertyName">
            <summary>
            The initial state name property name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.EaPlanProvider.GetEaPlanId(System.String)">
            <summary>
            Gets the corresponding engagement plan ID by shop name.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <returns>ID of engagement plan for the specified shop name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.EaPlanProvider.GetEaPlanId(System.String,System.String,System.String)">
            <summary>
            Gets the corresponding engagement plan and initial state IDs by shop name.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="engagementPlanName">Name of the plan.</param>
            <param name="stateName">Name of the plan's initial state.</param>
            <returns>ID of engagement plan and initial state respectively for the specified shop name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Multishop.EaPlanProvider.GetShopNameFromEaPlanName(System.String)">
            <summary>
            Gets the name of the shop name from the engagement plan.
            </summary>
            <param name="engagementName">Name of the engagement plan.</param>
            <returns>the shop name</returns>
        </member>
        <member name="T:Sitecore.Commerce.Multishop.CommerceContextBase">
            <summary>
            Defines the class which allows to determine commerce context.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Multishop.CommerceContextBase.ProductId">
            <summary>
            Gets the product id of the selected product.
            </summary>
            <value>The product id of the selected product.</value>
        </member>
        <member name="P:Sitecore.Commerce.Multishop.CommerceContextBase.InventoryLocation">
            <summary>
            Gets the current inventory location.
            </summary>
            <value>The current inventory location.</value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.AddCartLines.AddLinesToCart">
            <summary>
            Defines that processor that adds cart lines to a cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.AddCartLines.AddLinesToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the AddLinesToCart processor.
            The implementation of the Process method is generic, but you can use another implementation for the external commerce system.
            </summary>
            <param name="args">args: <see cref="T:Sitecore.Commerce.Services.Carts.AddCartLinesRequest"/>
            The AddcartLinesRequest request in args contains the cart to be updated and the lines to be added to the cart. 
            The response contains the updated cart object after the pipeline is called.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked">
            <summary>
            Defines the processor that checks whether the cart is locked. If the cart is locked, the CheckIfLocked stops the pipeline. 
            This processor returns an SystemMessages object to indicate the locked status.
            This processor is generic and all the pipelines that modify the cart content must use it.
            This processor is used by the following pipelines:
            <list type="bullet">
            <item>
            <description>
            AddCartLines
            </description>
            </item>
            <item>
            <description>
            RemoveCartLines
            </description>
            </item>
            <item>
            <description>
            UpdateCartLines
            </description>
            </item>
            <item>
            <description>
            DeleteCart
            </description>
            </item>
            <item>
            <description>
            UpdateCart
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.CheckIfLocked.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the CheckIfLocked processor.
            </summary>
            <param name="args">args: <see cref="T:Sitecore.Commerce.Services.Carts.LockCartRequest"/></param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart">
            <summary>
            Defines the processor that executes the SaveCart pipeline. 
            The RunSaveCart processor is called when changes are made to the cart.
            This processor is used by the following pipelines:
            <list type="bullet">
            <item>
            <description>
            CreateCart
            </description>
            </item>
            <item>
            <description>
            ResumeCart
            </description>
            </item>
            <item>
            <description>
            AddCartLines
            </description>
            </item>
            <item>
            <description>
            UpdateCart
            </description>
            </item>
            <item>
            <description>
            LockCart
            </description>
            </item>
            <item>
            <description>
            UnlockCart
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.RunPipelineProcessor`1">
            <summary>
            The Run Pipeline processor base class.
            </summary>
            <typeparam name="TArgs">The type of the args.</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.RunPipelineProcessor`1.pipelineService">
            <summary>
            The pipeline service.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.RunPipelineProcessor`1.RunPipeline(System.String,Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.RunPipelineProcessor`1.RunPipeline(System.String,Sitecore.Commerce.Pipelines.ServicePipelineArgs,Sitecore.Commerce.Services.ServiceProviderRequest)">
            <summary>
            Runs the pipeline.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
            <param name="args">The arguments.</param>
            <param name="previousRequest">The previous request.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.RunPipelineProcessor`1.PipelineService">
            <summary>
            Gets or sets the pipeline service.
            </summary>
            <value>
            The pipeline service.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.RunSaveCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSaveCart processor.
            </summary>
            <param name="args">The args: <see cref="T:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest"/> </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.Common.SaveCartToEaState">
            <summary>
            Defines the processor that saves the cart data in the repository of the Automation states.
            You can use this processor as follows:
            <list type="bullet">
            <item>
            <description>
            If the external commerce system does not persist carts or if the handling of the carts is entirely executed in Sitecore, you can use this processor separately in the SaveCart pipeline.
            </description>
            </item>
            <item>
            <description>
            If Sitecore recognizes the visitor, the visitor can load and resume using the cart that is stored in the repository of the Automation states.
            </description>
            </item>
            <item>
            <description>
            If the external commerce system does not support all the information specified in the cart's domain model. 
            The main data is written to the external commerce system and this processor writes the remaining data to the repository.
            </description>
            </item>
            </list>
            This processor is used by the SaveCart pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.Common.SaveCartToEaState.GuidFormat">
            <summary>
            The GUID format.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.Common.SaveCartToEaState.repository">
            <summary>
            Allows the Create, Read, Update, and Delete operations to be performed on the shopping carts that are stored in the Engagement Automation states.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.SaveCartToEaState.#ctor(Sitecore.Commerce.Data.Carts.ICartRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.Common.SaveCartToEaState"/> class.
            </summary>
            <param name="repository">
            The repository that stores and places carts in an Engagement Automation state.
            The repository name is specified in the Sitecore.Commerce.config file.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.Common.SaveCartToEaState.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveCartToEaSate processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart">
            <summary>
            Defines the processor that merges the Anonymous cart to the user cart.  Once the merge is complete, the Anonymous cart is deleted.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart.#ctor(Sitecore.Commerce.Services.Carts.CartServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart"/> class.
            </summary>
            <param name="cartServiceProvider">The cart service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the buisiness logic to merge the 2 carts.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart.GetIncrementedString(System.String)">
            <summary>
            Gets incremented string.
            </summary>
            <param name="value">The value.</param>
            <returns>The incremented string.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart.AddToProvidedCartWithoutSaving(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.CartLine)">
            <summary>
            The add to provided cart.
            </summary>
            <param name="cart">The cart.</param>
            <param name="cartLine">The cart line.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Carts.MergeCart.MergeCart.CartServiceProvider">
            <summary>
            Gets or sets the cart service provider.
            </summary>
            <value>
            The cart service provider.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateCart.AddVisitorToEaPlan">
            <summary>
            Defines the processor that enrolls visitors in the Engagement Automation (EA) plan.
            This processor adds the current visitor to an EA plan, for example, the Abandoned Cart EA plan.
            The current implementation supports multiple shops. You can use an IEaPlanProvider object to retrieve the plan and state IDs.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.CreateCart.AddVisitorToEaPlan.eaPlanProvider">
            <summary>
            The Engagement Automation Plan provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateCart.AddVisitorToEaPlan.#ctor(Sitecore.Commerce.Multishop.IEaPlanProvider)">
            <summary>
            Initializes a new instance of the AddVisitorToEaPlan class.
            </summary>
            <param name="eaPlanProvider">The Engagement Automation Plan provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateCart.AddVisitorToEaPlan.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the AddVisitorToPlan processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateCart.CreateCart">
            <summary>
            Defines the processor that creates a cart, initializes the values in it using the arguments, and returns it.
            If a cart with the same values already exists, the processor overwrites it.
            The default CreateCart processor is generic for creating a cart using the domain model and not the the external commerce system. 
            In some integration scenarios, you must use the the external commerce system to create the cart. 
            In this case, you can extend the CreateCart processor base class or replace it with another class.
            In other integration scenarios, the external commerce system does not create carts but rather manipulates cart lines or just saves carts. 
            The implementation of the cart creation depends on the external commerce system that Sitecore is being integrated with.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.CreateCart.CreateCart.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateCart.CreateCart.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.CreateCart.CreateCart"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateCart.CreateCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the CreateCart processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.FindCartInEaState">
            <summary>
            Searches for a visitor cart in its current Engagement Automation (EA) state with the following input parameters:
            <list type="bullet">
            <item>
            <description>
            UserID
            </description>
            </item>
            <item>
            <description>
            CustomerID
            </description>
            </item>
            <item>
            <description>
            CartName
            </description>
            </item>
            <item>
            <description>
            ShopName
            </description>
            </item>
            </list>
            If a matching cart is found, the custom pipeline argument args.Request.Properties[“CartID”] is assigned to the the ID of the matching cart. 
            In the  CreateOrResumeCart pipeline, the RunLoadCart processor uses the cart ID stored in the custom data.
            You can use the FindCartInEaState processor to search and retrieve the ID of an existing cart before executing the RunLoadCart processor.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.FindCartInEaState.repository">
            <summary>
            Allows Create, Read, Update, and Delete operations to be performed on the shopping carts that are stored in the Engagement Automation states.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.FindCartInEaState.#ctor(Sitecore.Commerce.Data.Carts.ICartRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.FindCartInEaState"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.FindCartInEaState.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the FindCartInEaState processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunLoadCart">
            <summary>
            Defines the processor that executes the <see cref="N:Sitecore.Commerce.Pipelines.Carts.LoadCart"/> pipeline.
            The cart ID is stored in custom data by the FindCartInEaState processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunLoadCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunLoadCart processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunCreateCart">
            <summary>
            Defines the processor that executes the <see cref="N:Sitecore.Commerce.Pipelines.Carts.CreateCart"/> pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunCreateCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunCreateCart processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunResumeCart">
            <summary>
            Defines the processor that executes the <see cref="N:Sitecore.Commerce.Pipelines.Carts.ResumeCart"/> pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.CreateOrResumeCart.RunResumeCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunResumeCart processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.DeleteCart.DeleteCartFromEaState">
            <summary>
            Defines the processor that locates and deletes a cart from the repository of the Engagement Automation states.
            This processor is used by the DeleteCart pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.DeleteCart.DeleteCartFromEaState.repository">
            <summary>
            Allows Create, Read, Update, and Delete operations to be performed on the shopping carts that are stored in the Engagement Automation states.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.DeleteCart.DeleteCartFromEaState.#ctor(Sitecore.Commerce.Data.Carts.ICartRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.DeleteCart.DeleteCartFromEaState"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.DeleteCart.DeleteCartFromEaState.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DeleteCartFromEAState processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.GetCarts.BuildQuery">
            <summary>
            Defines the processor that executes the first phase of the GetCarts pipeline.
            This processor creates the query that the ExecuteQuery processor uses to load carts.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.GetCarts.BuildQuery.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the BuildQuery processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.GetCarts.ExecuteQuery">
            <summary>
            Defines the processor that executes the second phase of the GetCarts pipeline.
            This processor runs the query that the BuildQuery processor has created.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.GetCarts.ExecuteQuery.repository">
            <summary>
            Allows Create, Read, Update, and Delete operations to be performed on the shopping carts that are stored in the Engagement Automation states.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.GetCarts.ExecuteQuery.#ctor(Sitecore.Commerce.Data.Carts.ICartRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.GetCarts.ExecuteQuery"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.GetCarts.ExecuteQuery.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ExecuteQuery processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.LoadCart.LoadCartFromEaState">
            <summary>
            Defines the processor that takes the ID of the cart, takes the name of the shop, and loads the cart from the Engagement Automation (EA) state.
            Because searching for a cart by ID across all visitors is time consuming, to overcome performance issues, the default implementation works as follows: 
            <list type="number"> 
            <item>
            <description>
            Carts are loaded from the data of the current visitor's EA state and filtered by the given parameters.
            </description>
            </item>
            <item>
            <description>
            If the cart is found, the operation stops and the cart is returned.
            </description>
            </item>
            <item>
            <description>
            If the cart is not found, all the carts of all the visitors are loaded and filtered by the given parameters. 
            </description>
            </item>
            <item>
            <description>
            If the cart is found, the operation stops and the cart is returned.
            </description>
            </item>
            </list>
            You can use this processor as follows:
            <list type="bullet">
            <item>
            <description>
            If the external commerce system does not load carts or if the handling of the carts is entirely executed in Sitecore, you can use this processor separately in the LoadCart pipeline.
            </description>
            </item>
            <item>
            <description>
            If Sitecore recognizes the visitor, they can automatically load and resume the cart that is stored in the repository of the Automation states.
            </description>
            </item>
            <item>
            <description>
            If the external commerce system does not support all the information specified in the cart's domain model. 
            The main data is loaded from the external commerce system and this processor loads the remaining data from the repository.
            </description>
            </item>
            </list>
            Abandoned carts might have been purged from the external commerce system but could still be in an EA state in Sitecore. 
            In this case, you should use the LoadCartfromEaState and LoadCartfromExternalSystem processors in the pipeline, 
            so that Sitecore is acting as a backup storage for carts.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.LoadCart.LoadCartFromEaState.repository">
            <summary>
            Allows Create, Read, Update, and Delete operations to be performed on the shopping carts that are stored in the Engagement Automation states.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.LoadCart.LoadCartFromEaState.#ctor(Sitecore.Commerce.Data.Carts.ICartRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.LoadCart.LoadCartFromEaState"/> class.
            </summary>
            <param name="repository">The cart repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.LoadCart.LoadCartFromEaState.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the LoadCartFromEaState processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.LockCart.LockCart">
            <summary>
            Defines the processor that locks the cart and sets the cart.IsLocked property to true.
            This processor is used by the LockCart pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.LockCart.LockCart.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.LockCart.LockCart.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.LockCart.LockCart"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.LockCart.LockCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the LockCart process.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.RemoveCartLines.RemoveLinesFromCart">
            <summary>
            Defines the processor that removes lines from a cart.
            This processor is used by the RemoveCartLines pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.RemoveCartLines.RemoveLinesFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RemoveLinesFromCart processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.ResumeCart.ChangeCartStatus">
            <summary>
            Defines the processor that assigns the status field of the cart the CartStatus.InProcess constant. 
            The ChangeCartStatus is used by the ResumeCart pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.ChangeCartStatus.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ChangeCartStatus processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.ResumeCart.CheckCanBeResumed">
            <summary>
            Defines the processor that checks whether a cart can be resumed. 
            If the visitor is not in the abandoned cart Engagement Automation (EA) plan and not in the initial state, the pipeline stops. 
            This processor stores the values to the following parameters in the custom data: 
            <list type="bullet">
              <item>
                 <description>
                 CartSourceStateId, which is used by the MoveVisitorToInitialState processor.
                 </description>
               </item>
               <item>
                 <description>
                 CartDestinationStateId, which is used by the MoveVisitorToInitialState processor.
                 </description>
               </item>
               <item>
                 <description>
                 PreviousStateName, which is used by the TriggerCartResumedPageEvent processor.
                 </description>
              </item>
            </list>
            The CheckCanBeResumed processor is used by the ResumeCart pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.ResumeCart.CheckCanBeResumed.eaPlanProvider">
            <summary>
            The Engagement Automation (EA) plan provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.CheckCanBeResumed.#ctor(Sitecore.Commerce.Multishop.IEaPlanProvider)">
            <summary>
            Initializes a new instance of the CheckCanBeResumed class.
            </summary>
            <param name="eaPlanProvider">The Engagement Automation plan provider</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.CheckCanBeResumed.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the CheckCanBeResumed processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.ResumeCart.MoveVisitorToInitialState">
            <summary>
            Define a generic processor that moves the current visitor between two states of an EA plan.
            The MoveVisitorToInitialState processor is used by the ResumeCart pipeline to move the visitor to the initial state of the Abandoned Cart EA plan
            This processor uses the source  and destination state IDs of the cart that are stored in the custom data by the CheckCanBeResumed processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.ResumeCart.MoveVisitorToInitialState.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the MoveVisitorToInitialState processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.UnlockCart.UnlockCart">
            <summary>
            Defines the processor that unlocks the cart and sets the Cart.IsLocked property to false.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Carts.UnlockCart.UnlockCart.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UnlockCart.UnlockCart.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Carts.UnlockCart.UnlockCart"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UnlockCart.UnlockCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UnlockCart processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.UpdateCartLines.UpdateLinesOnCart">
            <summary>
            Defines the processor that updates the cart lines in a cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UpdateCartLines.UpdateLinesOnCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UpdateLinesOnCart processor.
            </summary>
            <param name="args">The arguments</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Carts.UpdateCart.UpdateCart">
            <summary>
            Defines the processor that updates the following fields in a cart:
            <list type="bullet">
            <item>
            <description>
            The customer ID
            </description>
            </item>
            <item>
            <description>
            The cart name
            </description>
            </item>
            <item>
            <description>
            The shop name
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UpdateCart.UpdateCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UpdateCart processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Carts.UpdateCart.UpdateCart.UpdateAdditionalProperties(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.CartBase)">
            <summary>
            Updates the additional properties.
            </summary>
            <param name="currentCart">The current cart.</param>
            <param name="changes">The changes.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore">
            <summary>
            Defines the processor that manages the user in Sitecore. 
            The ManageUserInSitecore processor checks whether the user does not exist and if so, stops the pipeline and processes a request to change the user account in Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ManageUserInSitecore processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore.ShouldAbortPipeline(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Based on whether a user exists or not, determines whether the pipeline must stop.
            </summary>
            <param name="user">The user.</param>
            <returns>
              <c>true</c> if the pipeline must stop.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore.SetResult(Sitecore.Commerce.Services.Customers.UserRequestWithUser,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Sets the result.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.Common.ManageUserInSitecore.ProcessSitecoreUser(Sitecore.Commerce.Entities.Customers.CommerceUser,Sitecore.Commerce.Services.Customers.UserRequestWithUser,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Processes the user account in sitecore.
            </summary>
            <param name="user">The user.</param>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.TriggerCustomerGoal">
            <summary>
            Defines the processor that triggers the event of a customer goal. This class implements the TriggerCustomerPageEvent class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.Common.TriggerUserGoal">
            <summary>
            Defines the processor that triggers the goal for user. This class implements the TriggerUserPageEvent class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInExternalSystem">
            <summary>
            Defines the processor that creates a customer in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateCustomer.CreateCustomerInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the CreateCustomerInExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInExternalSystem">
            <summary>
            Defines the processor that creates a user in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInExternalSystem.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInExternalSystem"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the CreateUserInExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore">
            <summary>
            Defines the processor that creates a user in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the CreateUserInSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore.UserExists(Sitecore.Commerce.Services.Customers.CreateUserRequest)">
            <summary>
            Users the exists.
            </summary>
            <param name="request">The request.</param>
            <returns><value>true</value> if user already exists, otherwise <value>false</value></returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.CreateUser.CreateUserInSitecore.CreateUser(Sitecore.Commerce.Services.Customers.CreateUserRequest,Sitecore.Commerce.Services.Customers.CreateUserResult)">
            <summary>
            Creates the user.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromSitecore">
            <summary>
            Defines the processor that deletes a customer the sitecore user profile.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromSitecore"/> class.
            </summary>
            <param name="customerRepository">The repository of the state customer.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DeleteCustomerFromEaState processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromExternalSystem">
            <summary>
            Defines the processor that deletes a customer from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DeleteCustomer.DeleteCustomerFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DeleteCustomerFromExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DeleteUser.DeleteUserInExternalSystem">
            <summary>
            Defines the processor that deletes a user in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DeleteUser.DeleteUserInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DeleteUserInExternalSystem processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DeleteUser.DeleteUserInSitecore">
            <summary>
            Defines the processor that deletes a user in Sitecore. This class implements the ManageUserInSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DeleteUser.DeleteUserInSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.DeleteUser.DeleteUserInSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DeleteUser.DeleteUserInSitecore.ProcessSitecoreUser(Sitecore.Commerce.Entities.Customers.CommerceUser,Sitecore.Commerce.Services.Customers.UserRequestWithUser,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Processes the user account in sitecore.
            </summary>
            <param name="user">The user.</param>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInSitecore">
            <summary>
            Defines the processor that disables a customer in the sitecore user profile.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DisableCustomerInEaState processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInExternalSystem">
            <summary>
            Defines the processor that disables a customer in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DisableCustomer.DisableCustomerInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DisableCustomerInExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DisableUser.DisableUserInExternalSystem">
            <summary>
            Defines the processor that disables a user in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DisableUser.DisableUserInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DisableUserInExternalSystem processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.DisableUser.DisableUserInSitecore">
            <summary>
             Defines the processor that disables a user in Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DisableUser.DisableUserInSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.DisableUser.DisableUserInSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.DisableUser.DisableUserInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the DisableUserInSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInSitecore">
            <summary>
            Defines the processor that enables a customer in an engagement automation state. This class implements the ManageCustomerInEaPlan class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInSitecore"/> class.
            </summary>
            <param name="customerRepository">The repository of the state customer.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the EnableCustomerInEaState processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInExternalSystem">
            <summary>
            Defines the processor that enables a customer in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.EnableCustomer.EnableCustomerInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the EnableCustomerInExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.EnableUser.EnableUserInExternalSystem">
            <summary>
            Defines the processor that enables a user in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.EnableUser.EnableUserInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the EnableUserInExternalSystem processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.EnableUser.EnableUserInSitecore">
            <summary>
            Defines the processor that enables a user in Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.EnableUser.EnableUserInSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.EnableUser.EnableUserInSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.EnableUser.EnableUserInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the EnableUserInSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetCustomers.GetCustomersFromExternalSystem">
            <summary>
            Defines the processor that gets customers from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetCustomers.GetCustomersFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetCustomersFromExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetCustomers.GetCustomersFromSitecore">
            <summary>
            Defines the processor that gets customers from Sitecore. This class implements the ManageCustomerInEaPlan class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetCustomers.GetCustomersFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.GetCustomers.GetCustomersFromSitecore"/> class. 
            </summary>
            <param name="customerRepository">
            The repository of the state customer.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetCustomers.GetCustomersFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetCustomersFromSitecore processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetUsers.GetUsersFromExternalSystem">
            <summary>
            Defines the processor that gets users from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetUsers.GetUsersFromExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetUsersFromExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.GetUsers.GetUsersFromSitecore">
            <summary>
            Defines the processor that gets users from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetUsers.GetUsersFromSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.GetUsers.GetUsersFromSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.GetUsers.GetUsersFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetUsersFromSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInSitecore">
            <summary>
            Defines the processor that updates a customer in the sitecore user profile.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInSitecore.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInSitecore"/> class.
            </summary>
            <param name="customerRepository">The customer repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UpdateCustomerInEaState processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInExternalSystem">
            <summary>
            Defines the processor that updates a customer in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateCustomer.UpdateCustomerInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UpdateCustomerInExternalSystem processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateUser.UpdateUserInExternalSystem">
            <summary>
            Defines the processor that updates a user in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateUser.UpdateUserInExternalSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the UpdateUserInExternalSystem processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Customers.UpdateUser.UpdateUserInSitecore">
            <summary>
            Defines the processor that updates a user in Sitecore. This class implements the ManageUserProfileInSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateUser.UpdateUserInSitecore.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Customers.UpdateUser.UpdateUserInSitecore"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Customers.UpdateUser.UpdateUserInSitecore.ProcessSitecoreUser(Sitecore.Commerce.Entities.Customers.CommerceUser,Sitecore.Commerce.Services.Customers.UserRequestWithUser,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Processes the user account in sitecore.
            </summary>
            <param name="user">The user.</param>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetOrderableInformation.GetBackOrderableInformation">
            <summary>
            Defines the processor that executes the GetBackOrderableInformation pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetOrderableInformation.GetBackOrderableInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetBackOrderableInformation processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetOrderableInformation.GetPreOrderableInformation">
            <summary>
            Defines the processor that executes the GetPreOrderableInformation pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetOrderableInformation.GetPreOrderableInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetPreOrderableInformation processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.GetStockInformation">
            <summary>
            Placeholder pipeline processor for the GetStockInformation pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.GetStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.StockStatusForIndexing">
            <summary>
            Placeholder pipeline processor for the StockStatusForIndexing pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.StockStatusForIndexing.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Runs the pipeline processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.GetExternalCommerceSystemProductList.GetExternalCommerceSystemProductList">
            <summary>
            Defines the processor that gets the product list from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.GetExternalCommerceSystemProductList.GetExternalCommerceSystemProductList.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetExternalCommerceSystemProductList processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.IEnumerableExtensions">
            <summary>
            The IEnumerable extensions.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.IEnumerableExtensions.ParallelForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Parallels for each loop with maximum number of threads that is specified in NumberOfThreads setting of Sitecore.Commerce.Products config file.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="body">The body.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor">
            <summary>
            The base class for all processors that resolve changes.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor.synchronizationStrategy">
            <summary>
            The synchronization strategy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor.#ctor(Sitecore.Commerce.Products.ISynchronizationStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor"/> class.
            </summary>
            <param name="synchronizationStrategy">The synchronization strategy.</param>    
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor.GetSitecoreEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in Sitecore.
            </summary>
            <param name="args">The arguments.</param>
            <returns>Sitecore entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor.GetExternalCommerceSystemEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in external commerce system.
            </summary>
            <param name="args">The arguments.</param>
            <returns>External commerce system entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.ResolveChangesProcessor.SaveEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ProductEntity})">
            <summary>
            Saves entities in pipeline arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="productEntities">The product entities.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SaveToSitecoreProcessor">
            <summary>
            Defines the parent class of the classes that defines the processors that save entities in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SaveToSitecoreProcessor.MessageTemplate">
            <summary>
            The message template.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SaveToSitecoreProcessor.statusUpdater">
            <summary>
            The status updater.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SaveToSitecoreProcessor.UpdateStatus(System.String)">
            <summary>
            Updates the status.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SaveToSitecoreProcessor.UpdateStatus(System.String,System.String)">
            <summary>
            Updates the status.
            </summary>
            <param name="message">The message.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Products.SaveToSitecoreProcessor.StatusUpdater">
            <summary>
            Gets or sets the status updater.
            </summary>
            <value>
            The status updater.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.StatusUpdater">
            <summary>
            The status updater.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.StatusUpdater.Update(System.String)">
            <summary>
            Updates the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.ReadSitecoreClassificationsSpecifications">
            <summary>
            The pipeline processor which reads classifications specifications from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.ReadSitecoreClassificationsSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.ResolveClassificationsSpecificationsChanges">
            <summary>
            The pipeline processor which resolves classifications specifications changes between Sitecore and external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.ResolveClassificationsSpecificationsChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadSitecoreClassifications">
            <summary>
            Defines the processor that reads classifications from Sitecore.
            This processor stores Sitecore classification groups in the custom data.
            In the SynchronizeClassifiactions pipeline, the ResolveClassificationsChanges processor uses Sitecore classification groups that is stored in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadSitecoreClassifications.classificationGroupRepository">
            <summary>
            The classification group repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadSitecoreClassifications.classificationRepository">
            <summary>
            The classification repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadSitecoreClassifications.#ctor(Sitecore.Commerce.Data.Products.ProductClassificationGroupRepository,Sitecore.Commerce.Data.Products.ProductClassificationRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadSitecoreClassifications"/> class.
            </summary>    
            <param name="classificationGroupRepository">The classification group repository.</param>
            <param name="classificationRepository">The classification repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadSitecoreClassifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges">
            <summary>
            Defines the processor that resolves classifications changes between Sitecore and external commerce system.
            This processor uses:
            <list type="bullet">
            <item>
            <description>
            The classification groups in Sitecore that are stored in the custom data by the ReadSitecoreClassifications processor.
            </description>
            </item>
            <item>
            <description>
            The classification groups in the external commerce system that are stored in the custom data.
            </description>
            </item>
            </list>
            The ResolveClassificationsChanges class inherits from the ResolveChangesProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.synchronizationStrategy">
            <summary>
            The synchronization strategy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.#ctor(Sitecore.Commerce.Products.ISynchronizationStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges"/> class.
            </summary>
            <param name="synchronizationStrategy">The synchronization strategy.</param>    
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.MergeClassifications(Sitecore.Commerce.Products.Direction,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.Classification},System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.Classification})">
            <summary>
            Merges the classifications.
            </summary>
            <param name="direction">The direction.</param>
            <param name="externalCommerceSystemClassifications">External commerce system classifications.</param>
            <param name="sitecoreClassifications">Sitecore classifications.</param>
            <returns>the list of merged classifications</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.GetSitecoreEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in Sitecore.
            </summary>
            <param name="args">The arguments.</param>
            <returns>Sitecore entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.GetExternalCommerceSystemEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in external commerce system.
            </summary>
            <param name="args">The arguments.</param>
            <returns>External commerce system entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ResolveClassificationsChanges.SaveEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ProductEntity})">
            <summary>
            Saves the entities to the arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="productEntities">The product entities.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveClassificationsToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveClassificationsToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadSitecoreDivisions">
            <summary>
            Defines the processor that reads divisions from Sitecore.
            This processor stores Sitecore divisions in the custom data.
            In the SynchronizeDivisions pipeline, the ResolveDivisionsChanges processor uses Sitecore divisions stored in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadSitecoreDivisions.divisionRepository">
            <summary>
            The division repository
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadSitecoreDivisions.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Division})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadSitecoreDivisions"/> class.
            </summary>    
            <param name="divisionRepository">The division repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadSitecoreDivisions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ResolveDivisionsChanges">
            <summary>
            Defines the processor that resolves divisions changes between Sitecore and external commerce system.
            This processor uses:
            <list type="bullet">
            <item>
            <description>
            Sitecore divisions that are stored in the custom data by the ReadSitecoreDivisions processor. 
            </description>
            </item>
            <item>
            <description>
            The divisions of the external commerce systems that are stored in the custom data.
            </description>
            </item>
            </list>
            This class inherits from the ResolveChangesProcessor class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ResolveDivisionsChanges.#ctor(Sitecore.Commerce.Products.ISynchronizationStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ResolveDivisionsChanges"/> class.
            </summary>
            <param name="synchronizationStrategy">The synchronization strategy.</param>    
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ResolveDivisionsChanges.GetSitecoreEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in Sitecore.
            </summary>
            <param name="args">The arguments.</param>
            <returns>Sitecore entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ResolveDivisionsChanges.GetExternalCommerceSystemEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in external commerce system.
            </summary>
            <param name="args">The arguments.</param>
            <returns>External commerce system entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ResolveDivisionsChanges.SaveEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ProductEntity})">
            <summary>
            Saves the entities to the arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="productEntities">The product entities.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.ReadSitecoreGlobalSpecifications">
            <summary>
            The pipeline processor which reads global specifications from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.ReadSitecoreGlobalSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.ResolveGlobalSpecificationsChanges">
            <summary>
            The pipeline processor which resolves global specification changes between Sitecore and external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.ResolveGlobalSpecificationsChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadSitecoreManufacturers">
            <summary>
            Defines the processor that reads manufacturers from Sitecore.
            This processor stores Sitecore manufacturers in the custom data.
            In the SynchronizeManufacturers pipeline, the ResolveManufacturersChanges processor uses Sitecore manufacturers stored in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadSitecoreManufacturers.manufacturerRepository">
            <summary>
            The manufacturer repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadSitecoreManufacturers.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Manufacturer})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadSitecoreManufacturers"/> class.
            </summary>    
            <param name="manufacturerRepository">The manufacturer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadSitecoreManufacturers.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ResolveManufacturersChanges">
            <summary>
            Defines the processor that resolves manufacturer changes between Sitecore and external commerce system.
            This processor uses:
            <list type="bullet">
            <item>
            <description>
            Sitecore manufacturers stored in the custom data by the ReadSitecoreManufacturers processor.
            </description>
            </item>
            <item>
            <description>
            The external commerce system manufacturers stored in the custom data.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ResolveManufacturersChanges.#ctor(Sitecore.Commerce.Products.ISynchronizationStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ResolveManufacturersChanges"/> class.
            </summary>
            <param name="synchronizationStrategy">The synchronization strategy.</param>    
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ResolveManufacturersChanges.GetSitecoreEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in Sitecore.
            </summary>
            <param name="args">The arguments.</param>
            <returns>Sitecore entities.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ResolveManufacturersChanges.GetExternalCommerceSystemEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in external commerce system.
            </summary>
            <param name="args">The arguments.</param>
            <returns>External commerce system entities.</returns>    
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ResolveManufacturersChanges.SaveEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ProductEntity})">
            <summary>
            Saves the entities to the arguments.
            </summary>
            <param name="args">The arguments.</param>
            <param name="productEntities">The product entities.</param>    
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadProductFromSitecore">
            <summary>
            Defines the processor that reads products from Sitecore.
            This processor stores the products in the custom data.
            In the SynchronizeProductEntity pipeline, the ResolveProductChanges processor uses the products in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadProductFromSitecore.productRepository">
            <summary>
            The repository
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadProductFromSitecore.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Product})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadProductFromSitecore"/> class. 
            </summary>
            <param name="productRepository">
            The product repository
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadProductFromSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ResolveProductChanges">
            <summary>
            Defines the processor that resolves product changes.
            This processor uses:
            <list type="bullet">
            <item>
            <description>
            Sitecore products that are stored in the custom data by the ReadProductFromSitecore processor.
            </description>
            </item>
            <item>
            <description>
            The products that are stored in the custom data by the external commerce system.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ResolveProductChanges.synchronizationStrategy">
            <summary>
            The strategy
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ResolveProductChanges.#ctor(Sitecore.Commerce.Products.ISynchronizationStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ResolveProductChanges"/> class.
            </summary>
            <param name="synchronizationStrategy">The synchronization strategy.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ResolveProductChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves the product to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.ResumeSearchIndexing">
            <summary>
            The resume search indexing.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.ResumeSearchIndexing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.ResumeSearchIndexing"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.ResumeSearchIndexing.ManageIndex(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.PauseSearchIndexing">
            <summary>
            The pause search indexing.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.PauseSearchIndexing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.PauseSearchIndexing"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.PauseSearchIndexing.ManageIndex(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.RebuildSearchIndexes">
            <summary>
            The rebuild search indexes.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.RebuildSearchIndexes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.RebuildSearchIndexes"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.RebuildSearchIndexes.ManageIndex(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductRepositoryBucket">
            <summary>
            The synchronize product repository bucket.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductRepositoryBucket.database">
            <summary>
            The database.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductRepositoryBucket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductRepositoryBucket"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductRepositoryBucket.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductRepositoryBucket.ProductRepositoryPath">
            <summary>
            Gets or sets the product repository path.
            </summary>
            <value>
            The product repository path.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.ReadSitecoreProductTypeSpecifications">
            <summary>
            The pipeline processor which reads product type specifications from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.ReadSitecoreProductTypeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.ResolveProductTypeSpecificationsChanges">
            <summary>
            The pipeline processor which resolves product type specification changes between Sitecore and external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.ResolveProductTypeSpecificationsChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductEntity">
            <summary>
            The run synchronize product item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductEntity.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeResources.SaveResourcesToSitecore">
            <summary>
            Defines the processor that saves resources in Sitecore. This class implements the SaveToSitecoreProcessor class.
            The SaveResourcesToSitecore processor uses the resources stored in the custom data by the external commerce system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeResources.SaveResourcesToSitecore.resourceRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeResources.SaveResourcesToSitecore.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Resource})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeResources.SaveResourcesToSitecore"/> class.
            </summary>
            <param name="resourceRepository">The repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeResources.SaveResourcesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveResourcesToSitecore processor.
            </summary>
            <param name="args">The arguments</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeDivisions">
            <summary>
            Defines the processor of the SynchronizeDivisions pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeDivisions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeDivisions processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeClassifications">
            <summary>
            Defines the processor that executes the SynchronizeClassifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeClassifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeClassifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeResources">
            <summary>
            Defines the processor of the SynchronizeResources pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeResources.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeResources pipeline.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeSpecifications">
            <summary>
            Defines the processor of the SynchronizeSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeTypes">
            <summary>
            Defines the processor of the SynchronizeTypes pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeTypes.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeTypes processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeManufacturers">
            <summary>
            Defines the processor of the SynchronizeManufacturers pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeArtifacts.RunSynchronizeManufacturers.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeManufacturers processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.GetSitecoreProductList.GetSitecoreProductList">
            <summary>
            Defines the processor that gets the product list from Sitecore.
            This processor stores the IDs of the products in the custom data.
            In the SynchronizeProducts pipeline, the EvaluateProductListUnionToSynchronize uses the Product IDs stored in the custom data.  
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.GetSitecoreProductList.GetSitecoreProductList.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.GetSitecoreProductList.GetSitecoreProductList.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Product})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.GetSitecoreProductList.GetSitecoreProductList"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.GetSitecoreProductList.GetSitecoreProductList.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetSitecoreProductList processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.ReadExternalCommerceSystemClassificationsSpecifications">
            <summary>
            Reads classification specifications of a product from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.ReadExternalCommerceSystemClassificationsSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemClassificationsSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToSitecore">
            <summary>
            Defines the processor that saves the classification specifications of a product in Sitecore. 
            This processor uses the product classification groups stored in the custom data.
            This class inherits from the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToSitecore.productClassificationRepository">
            <summary>
            The product classification repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductClassificationRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToSitecore"/> class.
            </summary>
            <param name="productClassificationRepository">The product classification repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassificationsSpecifications.SaveClassificationsSpecificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveClassificationsSpecificationsToSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadExternalCommerceSystemClassifications">
            <summary>
            Reads the product classifications in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.ReadExternalCommerceSystemClassifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemClassifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadExternalCommerceSystemDivisions">
            <summary>
            Reads the product divisions from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.ReadExternalCommerceSystemDivisions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemDivisions processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToSitecore">
            <summary>
            Defines the processor that saves the global specifications in Sitecore. 
            This processor uses the specifications stored in the custom data by external commerce systems.
            The SaveGlobalSpecificationsToSitecore class inherits from the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToSitecore.repository">
            <summary>
            The global specification repository
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.SpecificationRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToSitecore"/> class.
            </summary>
            <param name="repository">The global specification repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.SaveGlobalSpecificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveGlobalSpecificationsToSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadExternalCommerceSystemManufacturers">
            <summary>
            Reads the manufacturers of products in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.ReadExternalCommerceSystemManufacturers.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemManufacturers processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToSitecore">
            <summary>
            Defines the processor of the SaveAllManufacturers pipeline. This class implements the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToSitecore.manufacturerRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToSitecore.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Manufacturer})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToSitecore"/> class.
            </summary>
            <param name="manufacturerRepository">The manufacturer repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeManufacturers.SaveManufacturersToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveManufacturersToSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.ReadExternalCommerceSystemProductClassificationsSpecifications">
            <summary>
            Reads product classification specifications from the external commerce system product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.ReadExternalCommerceSystemProductClassificationsSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductClassificationsSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore">
            <summary>
            Saves product classification specifications in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.ProductClassificationsSpecificationsKey">
            <summary>
            The product classifications specifications key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.ProductClassificationGroupKey">
            <summary>
            The product classification group key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.productRepository">
            <summary>
            The product repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.idGenerator">
            <summary>
            The ID generator.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.productClassificationGroupPrefix">
            <summary>
            The product classification group prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.productClassificationPrefix">
            <summary>
            The product classification prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.productClassificationSpecificationPrefix">
            <summary>
            The product specification prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository,Sitecore.Commerce.Data.Products.IIdGenerator,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
            <param name="idGenerator">The id generator.</param>
            <param name="productClassificationGroupPrefix">The product classification group prefix.</param>
            <param name="productClassificationPrefix">The product classification prefix.</param>
            <param name="productClassificationSpecificationPrefix">The product classifications specifications prefix.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassificationsSpecifications.SaveProductClassificationsSpecificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductClassificationsSpecificationsToSitecore processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.ReadExternalCommerceSystemProductClassifications">
            <summary>
            Reads the product classifications from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.ReadExternalCommerceSystemProductClassifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductClassifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.SaveProductClassificationsToSitecore">
            <summary>
            Saves product classifications in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.SaveProductClassificationsToSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.SaveProductClassificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.SaveProductClassificationsToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductClassifications.SaveProductClassificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductClassificationsToSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.ReadExternalCommerceSystemProductDivisions">
            <summary>
            Reads product divisions from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.ReadExternalCommerceSystemProductDivisions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductDivisions processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.SaveProductDivisionsToSitecore">
            <summary>
            Defines the processor that saves product divisions in Sitecore.
            This processor uses the division IDs stored in the custom data by the external commerce system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.SaveProductDivisionsToSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.SaveProductDivisionsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.SaveProductDivisionsToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductDivisions.SaveProductDivisionsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductDivisionsToSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.ReadExternalCommerceSystemGlobalSpecifications">
            <summary>
            Reads the global specifications of the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeGlobalSpecifications.ReadExternalCommerceSystemGlobalSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemGlobalSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.ReadExternalCommerceSystemProductGlobalSpecifications">
            <summary>
            Reads product global specifications from the external commerce system product global specifications.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.ReadExternalCommerceSystemProductGlobalSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductGlobalSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore">
            <summary>
            Saves global specifications of a product in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore.ProductSpecificationsKey">
            <summary>
            The product specifications key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore.idGenerator">
            <summary>
            The id generator.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore.globalSpecificationPrefix">
            <summary>
            The global specification prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository,Sitecore.Commerce.Data.Products.IIdGenerator,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
            <param name="idGenerator">The id generator.</param>
            <param name="globalSpecificationPrefix">The global specification prefix.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductGlobalSpecifications.SaveProductGlobalSpecificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductGlobalSpecificationsToSitecore processor.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.ReadExternalCommerceSystemProductManufacturers">
            <summary>
            Reads the product manufacturers in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.ReadExternalCommerceSystemProductManufacturers.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductManufacturers processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.ReadExternalCommerceSystemProductRelations">
            <summary>
            Defines the processor that reads product relations from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.ReadExternalCommerceSystemProductRelations.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductRelations processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.ReadExternalCommerceSystemProductResources">
            <summary>
            Defines the processor that reads product resources from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.ReadExternalCommerceSystemProductResources.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductResources processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.EvaluateProductListUnionToSynchronize">
            <summary>
            Defines the processor that gets the list resulted from the union of the products in Sitecore and the external commerce system.
            This processor uses the Sitecore product IDs  and the prodcut IDs of the external commerce system stored in the custom data.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.EvaluateProductListUnionToSynchronize.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the EvaluateProductListUnionToSynchronize processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunGetExternalCommerceSystemProductList">
            <summary>
            Defines the processor that executes the GetExternalCommerceSystemProductList pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunGetExternalCommerceSystemProductList.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunGetExternalCommerceSystemProductList processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunGetSitecoreProductList">
            <summary>
            Defines the processor that executes the GetSitecoreProductList pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunGetSitecoreProductList.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunGetSitecoreProductList processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductList">
            <summary>
            Synchronizes a list of products.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductList"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductList.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SynchronizeProductList processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.Products.SynchronizeProductList.SynchronizeProductList.MoveToBucket">
            <summary>
            Gets or sets a value indicating whether [move to bucket].
            </summary>
            <value>
              <c>true</c> if [move to bucket]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.SaveProductManufacturersToSitecore">
            <summary>
            Defines the processor that saves the product manufacturers in Sitecore.
            This processor uses the manufacturers IDs that are stored in the custom data by the external commerce system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.SaveProductManufacturersToSitecore.productRepository">
            <summary>
            The repository
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.SaveProductManufacturersToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.SaveProductManufacturersToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductManufacturers.SaveProductManufacturersToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductManufacturersToSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.SaveProductRelationsToSitecore">
            <summary>
            Defines the processor that saves product relations in Sitecore.
            This processor uses the related products stored by the external commerce system in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.SaveProductRelationsToSitecore.productRepository">
            <summary>
            The repository
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.SaveProductRelationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.SaveProductRelationsToSitecore"/> class.
            </summary>
            <param name="productRepository">
            The product repository
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductRelations.SaveProductRelationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductRelationsToSitecore processor.
            </summary>
            <param name="args">
            The arguments
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.SaveProductResourcesToSitecore">
            <summary>
            Defines the processor that saves product resources in Sitecore.
            This processor uses the product repository and resources stored by the external commerce system in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.SaveProductResourcesToSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.SaveProductResourcesToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.SaveProductResourcesToSitecore"/> class.
            </summary>
            <param name="productRepository">
            The product repository.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductResources.SaveProductResourcesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductResourcesToSitecore processor.
            </summary>
            <param name="args">
            The args
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductSpecifications.RunSynchronizeProductClassificationsSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeProductClassificationsSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductSpecifications.RunSynchronizeProductClassificationsSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductClassificationsSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductSpecifications.RunSynchronizeProductGlobalSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeProductGlobalSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductSpecifications.RunSynchronizeProductGlobalSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductGlobalSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductSpecifications.RunSynchronizeProductTypeSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeProductTypeSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductSpecifications.RunSynchronizeProductTypeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductTypeSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunSynchronizeArtifacts">
            <summary>
            Defines the processor that executes the SynchronizeArtifacts pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunSynchronizeArtifacts.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeArtifacts processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunSynchronizeProductList">
            <summary>
            Defines the processor that executes the SynchronizeProductList pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProducts.RunSynchronizeProductList.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductList processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.ReadExternalCommerceSystemProductTypeSpecifications">
            <summary>
            Defines the processor that reads the specifications of a product type from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.ReadExternalCommerceSystemProductTypeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductTypeSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore">
            <summary>
            Defines the processor that saves the specifications of a product type in Sitcore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.ProductTypeSpecificationsKey">
            <summary>
            The product type specifications key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.productRepository">
            <summary>
            The product repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.idGenerator">
            <summary>
            The id generator.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.productTypePrefix">
            <summary>
            The product type prefix.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.productTypeSpecificationPrefix">
            <summary>
            The product type specification prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository,Sitecore.Commerce.Data.Products.IIdGenerator,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
            <param name="idGenerator">The id generator.</param>
            <param name="productTypePrefix">The product type prefix.</param>
            <param name="productTypeSpecificationPrefix">The product type specification prefix.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypeSpecifications.SaveProductTypeSpecificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductTypeSpecificationsToSitecore processor.
            </summary>
            <param name="args">
            The arguments.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.ReadExternalCommerceSystemProductTypes">
            <summary>
            Defines the processor that reads the product types from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.ReadExternalCommerceSystemProductTypes.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProductTypes processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.SaveProductTypesToSitecore">
            <summary>
            Defines the processor that saves product types in Sitecore.
            This processor uses the product type IDs stored in the custom data by the external commerce system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.SaveProductTypesToSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.SaveProductTypesToSitecore.#ctor(Sitecore.Commerce.Data.Products.ProductRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.SaveProductTypesToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductTypes.SaveProductTypesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductTypesToSitecore processor.
            </summary>
            <param name="args">The args</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadExternalCommerceSystemProduct">
            <summary>
            Reads a product in the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.ReadExternalCommerceSystemProduct.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemProduct processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeProductSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductClassifications">
            <summary>
            Defines the processor that executes the SynchronizeProductClassifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductClassifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductClassifications processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductDivisions">
            <summary>
            Defines the processor that executes the SynchronizeProductDivisions pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductDivisions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductDivisions processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductManufacturers">
            <summary>
            Defines the processor that executes the SynchronizeProductManufacturers pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductManufacturers.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductManufacturers processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductRelations">
            <summary>
            Defines the processor that executes the SynchronizeProductRelations pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductRelations.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductRelations processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductResources">
            <summary>
            Defines the processor that executes the SynchronizeProductResources pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductResources.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductResources processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductTypes">
            <summary>
            Defines the processor that executes the SynchronizeProductTypes pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProduct.RunSynchronizeProductTypes.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeProductTypes processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToSitecore">
            <summary>
            Saves a product in Sitecore. This class implements the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToSitecore.productRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToSitecore.entityFactory">
            <summary>
            The entity type factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToSitecore.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Product},Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToSitecore"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeProductEntity.SaveProductToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveProductToSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveAllClassifications">
            <summary>
            Defines the processor that saves all the product classifications in Sitecore. 
            The SaveAllClassifications class inherits from SaveToSitecoreProcessor class.
            The SaveAllClassifications Processor uses the classification groups stored by the external commerce system in the Custom Data dictionary. 
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveAllClassifications.productClassificationGroupRepository">
            <summary>
            The product classification group repository
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveAllClassifications.productClassificationRepository">
            <summary>
            The product classification repository
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveAllClassifications.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.ClassificationGroup},Sitecore.Commerce.Data.Products.ProductClassificationRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveAllClassifications"/> class.
            </summary>
            <param name="productClassificationGroupRepository">The product classification group repository.</param>
            <param name="productClassificationRepository">The product classification repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeClassifications.SaveAllClassifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveAllClassifications processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToSitecore">
            <summary>
            Defines the SaveDivisionsToSitecore processor.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToSitecore.divisionRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToSitecore.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.Division})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToSitecore"/> class.
            </summary>
            <param name="divisionRepository">The division repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeDivisions.SaveDivisionsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveDivisionsToSitecore processor.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeSpecifications.RunSynchronizeClassificationSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeClassificationSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeSpecifications.RunSynchronizeClassificationSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeClassificationSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeSpecifications.RunSynchronizeTypeSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeTypeSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeSpecifications.RunSynchronizeTypeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeTypeSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeSpecifications.RunSynchronizeGlobalSpecifications">
            <summary>
            Defines the processor that executes the SynchronizeGlobalSpecifications pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeSpecifications.RunSynchronizeGlobalSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeGlobalSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.ReadExternalCommerceSystemTypeDefaultValues">
            <summary>
            Defines the processor that reads the default values of a type from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.ReadExternalCommerceSystemTypeDefaultValues.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemTypeDefaultValues processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.ReadSitecoreTypeDefaultValues">
            <summary>
            The pipeline processor which reads type default values from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.ReadSitecoreTypeDefaultValues.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.ResolveTypeDefaultValuesChanges">
            <summary>
            The pipeline processor which resolves type default values changes between Sitecore and external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.ResolveTypeDefaultValuesChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToSitecore">
            <summary>
            Defines the processor that saves the default values of type in Sitecore. This class implements the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToSitecore.DefaultValuesCollectionKey">
            <summary>
            The default values collection key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToSitecore.productTypeRepository">
            <summary>
            The product type repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToSitecore.#ctor(Sitecore.Commerce.Data.Products.TypeRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToSitecore"/> class.
            </summary>
            <param name="productTypeRepository">The product type repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeDefaultValues.SaveTypeDefaultValuesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveTypeDefaultValuesToSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.ReadExternalCommerceSystemTypeSpecifications">
            <summary>
            Defines the processor that reads type specifications from the external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.ReadExternalCommerceSystemTypeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemTypeSpecifications processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.ReadSitecoreTypeSpecifications">
            <summary>
            The pipeline processor which reads type specifications from Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.ReadSitecoreTypeSpecifications.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.ResolveTypeSpecificationsChanges">
            <summary>
            The pipeline processor which resolves type specifications changes between Sitecore and external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.ResolveTypeSpecificationsChanges.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToSitecore">
            <summary>
            Defines the processor that saves type specifications in Sitecore. This class implements the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToSitecore.SpecificationCollectionKey">
            <summary>
            The specification collection key.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToSitecore.productTypeRepository">
            <summary>
            The product type repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToSitecore.#ctor(Sitecore.Commerce.Data.Products.TypeRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToSitecore"/> class.
            </summary>
            <param name="productTypeRepository">The product type repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.SaveTypeSpecificationsToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveTypeSpecificationsToSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadExternalCommerceSystemTypes">
            <summary>
            Defines the processor that reads types from the external commerce system types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadExternalCommerceSystemTypes.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the ReadExternalCommerceSystemTypes processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.RunSynchronizeTypeDefaultValues">
            <summary>
            Defines the processor that execute the SynchronizeTypeDefaultValues pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypeSpecifications.RunSynchronizeTypeDefaultValues.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the RunSynchronizeTypeDefaultValues processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadSitecoreTypes">
            <summary>
            Defines the processor which reads types from Sitecore.
            This processor stores Sitecore product types in the custom data.
            In the SynchronizeTypes pipeline, the ResolveTypesChanges processor uses Sitecore product types stored by the ReadSitecoreTypes processor in the custom data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadSitecoreTypes.typeRepository">
            <summary>
            The type repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadSitecoreTypes.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.ProductType})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadSitecoreTypes"/> class.
            </summary>    
            <param name="typeRepository">The type repository</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ReadSitecoreTypes.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ResolveTypesChanges">
            <summary>
            Defines the processor that resolves the type changes between Sitecore and the external commerce system.
            The ResolveTypesChanges class inherits from the the ResolveChangesProcessor class.
            The ResolveTypesChanges processor uses the product types stored by Sitecore and the external commerce system in the custom data.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ResolveTypesChanges.#ctor(Sitecore.Commerce.Products.ISynchronizationStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ResolveTypesChanges"/> class.
            </summary>
            <param name="synchronizationStrategy">The synchronization strategy.</param>    
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ResolveTypesChanges.GetSitecoreEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in Sitecore.
            </summary>
            <param name="args">The arguments</param>
            <returns>Sitecore entities</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ResolveTypesChanges.GetExternalCommerceSystemEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets entities stored in external commerce system.
            </summary>
            <param name="args">The arguments</param>
            <returns>External commerce system entities</returns>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.ResolveTypesChanges.SaveEntities(Sitecore.Commerce.Pipelines.ServicePipelineArgs,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Products.ProductEntity})">
            <summary>
            Saves the entities to the arguments.
            </summary>
            <param name="args">The arguments</param>
            <param name="productEntities">The product entities</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToExternalCommerceSystem">
            <summary>
            The pipeline processor which saves divisions to external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToExternalCommerceSystem.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the request.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToSitecore">
            <summary>
            Defines the processor that saves types in Sitecore. This class implements the SaveToSitecoreProcessor class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToSitecore.productTypeRepository">
            <summary>
            The repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToSitecore.#ctor(Sitecore.Commerce.Data.Products.ArtifactRepository{Sitecore.Commerce.Entities.Products.ProductType})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToSitecore"/> class.
            </summary>
            <param name="productTypeRepository">The product type repository.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.Products.SynchronizeTypes.SaveTypesToSitecore.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the SaveTypesToSitecore processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Commands.ProgressBoxWrapper">
            <summary>
            Defines the wrapper of the progress box.
            This class wraps the Execute static method of the 
            <see cref="T:Sitecore.Shell.Applications.Dialogs.ProgressBoxes.ProgressBox"/> class
            and can be unit-tested.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Commands.ProgressBoxWrapper.Execute(System.String,System.String,System.String,Sitecore.Shell.Applications.Dialogs.ProgressBoxes.ProgressBoxMethod,System.String,System.Object[])">
            <summary>
            Executes the specified job name.
            This method wraps the Execute static method of the 
            <see cref="T:Sitecore.Shell.Applications.Dialogs.ProgressBoxes.ProgressBox"/> class
            and can be unit-tested.
            </summary>
            <param name="jobName">Name of the job</param>
            <param name="title">The title</param>
            <param name="icon">The icon</param>
            <param name="method">The method</param>
            <param name="message">The message</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="T:Sitecore.Commerce.Products.DateTimeSynchronizationStrategy">
            <summary>
            The synchronization strategy based on updated date of entity in external system and content management system.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Products.ISynchronizationStrategy">
            <summary>
            The SynchronizationStrategy interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Products.ISynchronizationStrategy.Resolve(Sitecore.Commerce.Products.Direction,Sitecore.Commerce.Entities.Products.ProductEntity,Sitecore.Commerce.Entities.Products.ProductEntity)">
            <summary>
            Resolves the specified direction.
            </summary>
            <param name="direction">The direction.</param>
            <param name="externalSystemEntity">The external system entity.</param>
            <param name="sitecoreEntity">The entity from content management system.</param>
            <returns>The place, where we decide if entity is updated.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Products.DateTimeSynchronizationStrategy.Resolve(Sitecore.Commerce.Products.Direction,Sitecore.Commerce.Entities.Products.ProductEntity,Sitecore.Commerce.Entities.Products.ProductEntity)">
            <summary>
            Resolves the specified direction.
            </summary>
            <param name="direction">The direction.</param>
            <param name="externalSystemEntity">The external system entity.</param>
            <param name="sitecoreEntity">The entity from content management system.</param>
            <returns>
            The place, where we decide if entity is updated.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Products.Direction">
            <summary>
            The direction of product synchronization.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Products.Direction.Inbound">
            <summary>
            The inbound direction from External Commerce System to Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Products.Direction.Outbound">
            <summary>
            The outbound direction from Sitecore to External Commerce System.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Products.Direction.Both">
            <summary>
            The synchronization in both ways. From Sitecore to External Commerce System and vice versa.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Products.IItemClassificationService">
            <summary>
            Provides information about the type entities that an <see cref="T:Sitecore.Data.Items.Item"/> represents.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Products.IItemClassificationService.IsProduct(Sitecore.Data.Items.Item)">
            <summary>
            Determines if the provided <see cref="T:Sitecore.Data.Items.Item"/> represents a Product entity.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> to examine.</param>
            <returns>True if the item represents a Product entity, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Products.IItemClassificationService.IsProductTemplate(Sitecore.Data.ID)">
            <summary>
            Determines if the provided template ID represents a Product entity template.
            </summary>
            <param name="templateId">The template ID to examine.</param>
            <returns>True if the template ID represents a Product entity template, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Products.IItemClassificationService.GetProductId(Sitecore.Data.Items.Item)">
            <summary>
            Retrieves the ID of an item that represents a Product entity.
            </summary>
            <param name="productItem">A <see cref="T:Sitecore.Data.Items.Item"/> that represents a Product entity.</param>
            <returns>The ID of the Product.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Products.ItemClassificationService">
            <summary>
            Provides information about the type entities that an <see cref="T:Sitecore.Data.Items.Item"/> represents.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Products.ItemClassificationService.IsProduct(Sitecore.Data.Items.Item)">
            <summary>
            Determines if the provided <see cref="T:Sitecore.Data.Items.Item"/> represents a Product entity.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> to examine.</param>
            <returns>True if the item represents a Product entity, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Products.ItemClassificationService.IsProductTemplate(Sitecore.Data.ID)">
            <summary>
            Determines if the provided template ID represents a Product entity template.
            </summary>
            <param name="templateId">The template ID to examine.</param>
            <returns>True if the template ID represents a Product entity template, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Products.ItemClassificationService.GetProductId(Sitecore.Data.Items.Item)">
            <summary>
            Retrieves the ID of an item that represents a Product entity.
            </summary>
            <param name="productItem">A <see cref="T:Sitecore.Data.Items.Item"/> that represents a Product entity.</param>
            <returns>The ID of the Product.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Products.UpdateIn">
            <summary>
            Describes the system where to update the data.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Products.UpdateIn.None">
            <summary>
            Do not update data in any system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Products.UpdateIn.Sitecore">
            <summary>
            Update data in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Products.UpdateIn.ExternalCommerceSystem">
            <summary>
            Update data in the External Commerce System.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1">
            <summary>
            Defines the base class for all condition classes that operate on cart metrics.
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.cartServiceProvider">
            <summary>
            The cart service provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.contactFactory">
            <summary>
            The visitor factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>Result of condition execution.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when unknown operator was specified.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.GetCartMetrics(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.Cart})">
            <summary>
            Gets the cart metrics.
            </summary>
            <param name="carts">The carts.</param>
            <returns>Metrics of the cart that can be compared with predefined value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.GetPredefinedValue">
            <summary>
            Gets the predefined value.
            </summary>
            <returns>The predefined value to compare with.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.CartServiceProvider">
            <summary>
            Gets or sets the cart service provider.
            </summary>
            <value>The cart service provider.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.BaseCartMetricsCondition`1.ContactFactory">
            <summary>
            Gets or sets the visitor factory.
            </summary>
            <value>The visitor factory.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.CartTotalCondition`1">
            <summary>
            Defines a condition for the cart total with a predefined value: 
            The condition follows the following format:
            “where the user's cart total [compares to] [CartTotal]”
            In this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.CartTotalCondition`1.GetCartMetrics(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.Cart})">
            <summary>
            Gets the cart metrics.
            </summary>
            <param name="carts">The carts.</param>
            <returns>The cart total.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.CartTotalCondition`1.GetPredefinedValue">
            <summary>
            Gets the predefined value.
            </summary>
            <returns>The cart total to compare with</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.CartTotalCondition`1.CartTotal">
            <summary>
            Gets or sets the cart total.
            </summary>
            <value>The cart total.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1">
            <summary>
            Defines the base class for all condition classes that operate on stock status.
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1._inventoryServiceProvider">
            <summary>
            The inventory service provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1._commerceContext">
            <summary>
            The commerce context.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>Result of condition execution.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when unknown operator was specified.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.GetStockInformation(System.String,System.String)">
            <summary>
            Gets the stock information.
            </summary>
            <param name="location">The location.</param>
            <param name="productId">The product id.</param>
            <returns>The stock information.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.StockStatus">
            <summary>
            Gets or sets the product stock count.
            </summary>
            <value>The product stock count.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.InventoryServiceProvider">
            <summary>
            Gets or sets the inventory service provider.
            </summary>
            <value>The inventory service provider.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.StockStatusConditionBase`1.CommerceContext">
            <summary>
            Gets or sets the commerce context.
            </summary>
            <value>The commerce context.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountCondition`1">
            <summary>
            Defines the condition to compare the stock count of a product with a predefined value.
            The condition follows the following format:
            “where the stock count of product [ProductId] [Compares to] [ProductStockCount]”
            I this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountCondition`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountCondition`1.GetProductId">
            <summary>
            Gets the product id.
            </summary>
            <returns>The product id.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountCondition`1.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>The product id.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountByLocationCondition`1">
            <summary>
            Defines the condition to compare the stock count of a product with a predefined value.
            The condition follows the following format:
            “where the stock count of product [ProductId] [Compares to] [ProductStockCount] in the location [Location]”
            I this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountByLocationCondition`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountByLocationCondition`1.GetProductId">
            <summary>
            Gets the product id.
            </summary>
            <returns>The product id.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountByLocationCondition`1.ShopLocation">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The shop location.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.SpecificProductStockCountByLocationCondition`1.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>The product id.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockStatusByLocationCondition`1">
            <summary>
            Defines the condition to compare the stock status of a product with a predefined value.
            The condition follows the following format:
            “where current product has stock status equal to [ProductStockStatus] in the location [Location]”
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockStatusByLocationCondition`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockStatusByLocationCondition`1.ShopLocation">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The shop location.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockStatusCondition`1">
            <summary>
            Defines the condition to compare the stock status of a product with a predefined value.
            The condition follows the following format:
            “where current product has stock status equal to [ProductStockStatus]”
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.Inventory.CurrentProductStockStatusCondition`1.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>The location.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.SpecificProductQuantityCondition`1">
            <summary>
            Defines the condition to compare the quantity of a product with a predefined value.
            The condition follows the following format:
            “where the quantity of product [ProductId] in user's cart [Compares to] [ProductQuantity]”
            I this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.SpecificProductQuantityCondition`1.GetCartMetrics(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.Cart})">
            <summary>
            Gets the cart metrics.
            </summary>
            <param name="carts">The carts.</param>
            <returns>The metric of the cart.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.SpecificProductQuantityCondition`1.GetPredefinedValue">
            <summary>
            Gets the predefined value.
            </summary>
            <returns>The value to compare with.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.SpecificProductQuantityCondition`1.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>The product id.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.SpecificProductQuantityCondition`1.ProductQuantity">
            <summary>
            Gets or sets the product quantity.
            </summary>
            <value>The product quantity.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.TotalProductQuantityCondition`1">
            <summary>
            Defines the condition that determines the total quantity of products that the cart of the current visitor contains.
            This condition follows the following format:
            “Where the quantity of all products in the user's cart [compares to] [TotalProductQuantity]”
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.TotalProductQuantityCondition`1.GetCartMetrics(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.Cart})">
            <summary>
            Gets the cart metrics.
            </summary>
            <param name="carts">The carts.</param>
            <returns>Total number of products in cart.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.TotalProductQuantityCondition`1.GetPredefinedValue">
            <summary>
            Gets the predefined value.
            </summary>
            <returns>Number of products to compare with.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.TotalProductQuantityCondition`1.TotalProductQuantity">
            <summary>
            Gets or sets the number of order lines to compare actual count with.
            </summary>
            <value>The number of order lines.</value>
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.AddToContent">
            <summary>
            Adds information to the _content field in the index
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.BaseComputedField">
            <summary>
            Base class for all computef fields
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseComputedField.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Initial method called in by sitecore to launch a compute value call
            </summary>
            <param name="indexable">The item to index</param>
            <returns>The computed fields</returns>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseComputedField.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Abstract method used to kick off a computation of an indexable to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseComputedField.IdsToNameList(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Converts a string of ids to a list of dispaly names for those ids
            </summary>
            <param name="item">the indexable item</param>
            <param name="fieldName">the fieldName on the item to convert</param>
            <returns>the list</returns>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseComputedField.FieldName">
            <summary>
            Gets or sets the field name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseComputedField.ReturnType">
            <summary>
            Gets or sets the return type
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.AddToContent.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField">
            <summary>
            Base computed field class for inventory information.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.pipelineService">
            <summary>
            The pipeline service.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.itemClassificationService">
            <summary>
            The item classification service.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.RunPipeline(Sitecore.Data.Items.Item)">
            <summary>
            Executes the commerce.inventory.stockStatusForIndexing pipeline to retrieve inventory indexing information for the provided item.
            </summary>
            <param name="item">The item whose indexing information should be retrieved.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingResult"/> returned by the commerce.inventory.stockStatusForIndexing pipeline.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.IsRequestForItem(Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest,Sitecore.Data.Items.Item)">
            <summary>
            Checks if a <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> will retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="request">The service request.</param>
            <param name="item">The item being indexed.</param>
            <returns>True if the <paramref name="request"/> will retrieve information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.BuildServicePipelineArgs(Sitecore.Data.Items.Item)">
            <summary>
            Builds a service request to retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> being indexed.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> that will retrieve indexing information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ShouldProcessItem(Sitecore.Data.Items.Item)">
            <summary>
            Checks if a computed field value should be generated for an item.
            </summary>
            <param name="item">The item to examine.</param>
            <returns>True if a computed field value should be generated for the item, otherwise false.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.PipelineService">
            <summary>
            Gets or sets the pipeline service.
            </summary>
            <value>
            The pipeline service.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ItemClassificationService">
            <summary>
            Gets the item classification service.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ThreadLocalCacheEntry">
            <summary>
            Helper class that stores the last request and result executed by the current thread.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ThreadLocalCacheEntry.IsExpired(System.TimeSpan)">
            <summary>
            Checks if this cache entry has expired due to timeout period.
            </summary>
            <param name="timeout">The cache timeout period.</param>
            <returns>True if this cache entry has expired due to timeout period, otherwise false.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ThreadLocalCacheEntry.Request">
            <summary>
            Gets the service request.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ThreadLocalCacheEntry.Result">
            <summary>
            Gets the service result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Search.ComputedFields.BaseInventoryComputedField.ThreadLocalCacheEntry.CreatedOnUtc">
            <summary>
            Gets the time the cache entry was created in UTC.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.CategoryName">
            <summary>
            Category Name computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.CategoryName.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.InStockLocations">
            <summary>
            InStockLocations computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.InStockLocations.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.ManufacturerName">
            <summary>
            Manufacturer Name computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.ManufacturerName.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.OrderableLocations">
            <summary>
            OrderableLocations computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.OrderableLocations.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.OutOfStockLocations">
            <summary>
            OutOfStockLocations computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.OutOfStockLocations.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.PreOrderable">
            <summary>
            PreOrderable computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.PreOrderable.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Search.ComputedFields.ProductTypeName">
            <summary>
            Type Name computed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Search.ComputedFields.ProductTypeName.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value of an indexable item to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.AddCartLinesRequest">
            <summary>
            Contains the cart to be updated, along with what lines should be added to the cart. 
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CartLinesRequest">
            <summary>
            The cart lines request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartLinesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.CartLinesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="lines">The cart lines.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CartLinesRequest.Lines">
            <summary>
            Gets or sets the cart lines.
            </summary>
            <value>The cart lines.</value>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.AddCartLinesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.AddCartLinesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="lines">The cart lines.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.DeleteCartRequest">
            <summary>
            Contains the cart to be deleted.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.DeleteCartRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.DeleteCartRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.MergeCartRequest">
            <summary>
            MergeCartRequest class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.MergeCartRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.MergeCartRequest"/> class.
            </summary>
            <param name="fromCart">The cart that will be merged.</param>
            <param name="toCart">The cart we are merging into.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.MergeCartRequest.FromCart">
            <summary>
            Gets or sets the 'from' cart.
            </summary>
            <value>
            The anonymous cart.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.MergeCartRequest.ToCart">
            <summary>
            Gets or sets the user cart.
            </summary>
            <value>
            The user cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.RemoveCartLinesRequest">
            <summary>
            Contains the cart to be updated along with the cart lines to be removed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.RemoveCartLinesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.RemoveCartLinesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="lines">The cart lines.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.SaveCartRequest">
            <summary>
            The save cart request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.SaveCartRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.SaveCartRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.UnlockCartRequest">
            <summary>
            Contains the cart to be unlocked.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.UnlockCartRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.UnlockCartRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest">
            <summary>
            Contains the cart along with the cart lines to be updated.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="lines">The cart lines.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CreateCustomerRequest">
            <summary>
              The create customer request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CreateCustomerRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.CreateCustomerRequest"/> class.
            </summary>
            <param name="commerceCustomer">The commerce customer.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CreateCustomerResult">
            <summary>
            The create customer result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerResultWithCart">
            <summary>
            The customer result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CustomerResultWithCart.CommerceCustomer">
            <summary>
            Gets or sets the commerce customer.
            </summary>
            <value>
            The commerce customer.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CreateUserRequest">
            <summary>
            The create user request.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CreateUserRequest.userName">
            <summary>
            The user name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CreateUserRequest.password">
            <summary>
            The password.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CreateUserRequest.email">
            <summary>
            The email.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.CreateUserRequest.shopName">
            <summary>
            The shop name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CreateUserRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.CreateUserRequest"/> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="email">The email.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CreateUserRequest.UserName">
            <summary>
            Gets the user name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CreateUserRequest.Password">
            <summary>
            Gets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CreateUserRequest.Email">
            <summary>
            Gets the email.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.CreateUserRequest.ShopName">
            <summary>
            Gets the shop name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CreateUserResult">
            <summary>
            The create user result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UserResultWithUser">
            <summary>
            The user result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.UserResultWithUser.CommerceUser">
            <summary>
            Gets or sets the commerce user.
            </summary>
            <value>The commerce user.</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.CustomerServiceProvider">
            <summary>
            Defines the provider that is used to perform any operation on the stored users or customers. 
            It runs the corresponding pipelines that delegate the tasks to the processors.
            This class inherits from the <see cref="T:Sitecore.Commerce.Services.ServiceProvider"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.CreateUser(Sitecore.Commerce.Services.Customers.CreateUserRequest)">
            <summary>
            Synchronizes the product.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CreateUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.UpdateUser(Sitecore.Commerce.Services.Customers.UpdateUserRequest)">
            <summary>
            Updates the user.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.UpdateUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.DeleteUser(Sitecore.Commerce.Services.Customers.DeleteUserRequest)">
            <summary>
            Deletes the user.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DeleteUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.DisableUser(Sitecore.Commerce.Services.Customers.DisableUserRequest)">
            <summary>
            Disables the user.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DisableUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.EnableUser(Sitecore.Commerce.Services.Customers.EnableUserRequest)">
            <summary>
            Enables the user.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.EnableUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.GetUser(Sitecore.Commerce.Services.Customers.GetUserRequest)">
            <summary>
            Gets the user.
            </summary>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.GetUsers(Sitecore.Commerce.Services.Customers.GetUsersRequest)">
            <summary>
            Gets the users.
            </summary>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetUsersResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.CreateCustomer(Sitecore.Commerce.Services.Customers.CreateCustomerRequest)">
            <summary>
            Creates the customer.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CreateCustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.UpdateCustomer(Sitecore.Commerce.Services.Customers.UpdateCustomerRequest)">
            <summary>
            Updates the customer.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.UpdateCustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.DisableCustomer(Sitecore.Commerce.Services.Customers.DisableCustomerRequest)">
            <summary>
            Disables the customer.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DisableCustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.EnableCustomer(Sitecore.Commerce.Services.Customers.EnableCustomerRequest)">
            <summary>
            Enables the customer.
            </summary>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.EnableCustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.DeleteCustomer(Sitecore.Commerce.Services.Customers.DeleteCustomerRequest)">
            <summary>
            The delete customer.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DeleteCustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.GetCustomer(Sitecore.Commerce.Services.Customers.GetCustomerRequest)">
            <summary>
            The get customer.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.GetCustomers(Sitecore.Commerce.Services.Customers.GetCustomersRequest)">
            <summary>
            The get customers.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomersResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.AddCustomers(Sitecore.Commerce.Services.Customers.AddCustomersRequest)">
            <summary>
            The Add customers.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.AddCustomersResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.AddUsers(Sitecore.Commerce.Services.Customers.AddUsersRequest)">
            <summary>
            The Add users.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.AddUsersResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.RemoveCustomers(Sitecore.Commerce.Services.Customers.RemoveCustomersRequest)">
            <summary>
            The remove customers.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.RemoveCustomersResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.RemoveUsers(Sitecore.Commerce.Services.Customers.RemoveUsersRequest)">
            <summary>
            The remove users.
            </summary>
            <param name="request">
            The request.
            </param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.RemoveUsersResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.AddCustomerParties(Sitecore.Commerce.Services.Customers.AddCustomerPartiesRequest)">
            <summary>
            Adds the customer parties.
            </summary>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.RemoveCustomerParties(Sitecore.Commerce.Services.Customers.RemoveCustomerPartiesRequest)">
            <summary>
            Removes the customer parties.
            </summary>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.UpdateCustomerParties(Sitecore.Commerce.Services.Customers.UpdateCustomerPartiesRequest)">
            <summary>
            Updates the customer parties.
            </summary>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.AddParties(Sitecore.Commerce.Services.Customers.AddPartiesRequest)">
            <summary>
            Adds the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.AddPartiesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.GetParties(Sitecore.Commerce.Services.Customers.GetPartiesRequest)">
            <summary>
            Gets the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetPartiesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.RemoveParties(Sitecore.Commerce.Services.Customers.RemovePartiesRequest)">
            <summary>
            Removes the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.UpdateParties(Sitecore.Commerce.Services.Customers.UpdatePartiesRequest)">
            <summary>
            Updates the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.CustomerServiceProvider.UpdatePassword(Sitecore.Commerce.Services.Customers.UpdatePasswordRequest)">
            <summary>
            Updates user password.
            </summary>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.UpdatePasswordResult"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DeleteCustomerRequest">
            <summary>
            The delete customer request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.DeleteCustomerRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.DeleteCustomerRequest"/> class.
            </summary>
            <param name="commerceCustomer">The commerce customer.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DeleteCustomerResult">
            <summary>
            The delete customer result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DeleteUserRequest">
            <summary>
            The delete user request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.DeleteUserRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.DeleteUserRequest"/> class.
            </summary>
            <param name="commerceUser">
            The commerce user.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DeleteUserResult">
            <summary>
            The delete user result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DisableCustomerRequest">
            <summary>
            The disable customer request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.DisableCustomerRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.DisableCustomerRequest"/> class.
            </summary>
            <param name="commerceCustomer">
            The commerce customer.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.DisableCustomerRequest.Comment">
            <summary>
              Gets or sets the comment.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DisableCustomerResult">
            <summary>
            The disable customer result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DisableUserRequest">
            <summary>
            The disable user request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.DisableUserRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.DisableUserRequest"/> class.
            </summary>
            <param name="commerceUser">The commerce user.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.DisableUserRequest.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.DisableUserResult">
            <summary>
            The disable user result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.EnableCustomerRequest">
            <summary>
            The enable customer request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.EnableCustomerRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.EnableCustomerRequest"/> class.
            </summary>
            <param name="commerceCustomer">
            The commerce customer.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.EnableCustomerRequest.Comment">
            <summary>
              Gets or sets the comment.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.EnableCustomerResult">
            <summary>
            The enable customer result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.EnableUserRequest">
            <summary>
            The enable user request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.EnableUserRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.EnableUserRequest"/> class.
            </summary>
            <param name="commerceUser">The commerce user.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.EnableUserRequest.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.EnableUserResult">
            <summary>
            The enable user result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions">
            <summary>
            Defines a set of extensions for the <see cref="T:Sitecore.Commerce.Services.Customers.CustomerServiceProvider"/> class.
            The GenericCustomerServiceProviderExtensionsclass contains the same methods as in the <see cref="T:Sitecore.Commerce.Services.Customers.CustomerServiceProvider"/> class.<br/><br/>
            The methods of this class are:
            <list type="bullet">
            <item>
            <description>
            Generic
            </description>
            </item>
            <item>
            <description>
            Accept a custom request that is inherited from the default request
            </description>
            </item>
            <item>
            <description>
            Return a custom result that is inherited from the default result
            </description>
            </item>
            <item>
            <description>
            Implement the default constructor
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.CreateUser``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Creates the user.
            </summary>
            <typeparam name="TCreateUserRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.CreateUserRequest"/></typeparam>
            <typeparam name="TCreateUserResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.CreateUserResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CreateUserResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.UpdateUser``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the user.
            </summary>
            <typeparam name="TUpdateUserRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateUserRequest"/></typeparam>
            <typeparam name="TUpdateUserResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateUserResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.UpdateUserResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.DeleteUser``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the user.
            </summary>
            <typeparam name="TDeleteUserRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DeleteUserRequest"/></typeparam>
            <typeparam name="TDeleteUserResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DeleteUserResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns> 
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DeleteUserResult"/> 
            result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.DisableUser``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the user.
            </summary>
            <typeparam name="TDisableUserRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DisableUserRequest"/></typeparam>
            <typeparam name="TDisableUserResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DisableUserResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DisableUserResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.EnableUser``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the user.
            </summary>
            <typeparam name="TEnableUserRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.EnableUserRequest"/></typeparam>
            <typeparam name="TEnableUserResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.EnableUserResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.EnableUserResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.GetUser``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Gets the user.
            </summary>
            <typeparam name="TGetUserRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUserRequest"/></typeparam>
            <typeparam name="TGetUserResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUserResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetUserResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.GetUsers``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Gets the users.
            </summary>
            <typeparam name="TGetUsersRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUsersRequest"/></typeparam>
            <typeparam name="TGetUsersResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUsersResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetUsersResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.CreateCustomer``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Creates a customer.
            </summary>
            <typeparam name="TCreateCustomerRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.CreateCustomerRequest"/></typeparam>
            <typeparam name="TCreateCustomerResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.CreateCustomerResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CreateCustomerResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.UpdateCustomer``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the customer.
            </summary>
            <typeparam name="TUpdateCustomerRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateCustomerRequest"/></typeparam>
            <typeparam name="TUpdateCustomerResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateCustomerResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.UpdateCustomerResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.DisableCustomer``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Disables the customer.
            </summary>
            <typeparam name="TDisableCustomerRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DisableCustomerRequest"/></typeparam>
            <typeparam name="TDisableCustomerResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DisableCustomerResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DisableCustomerResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.EnableCustomer``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Enables the customer.
            </summary>
            <typeparam name="TEnableCustomerRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.EnableCustomerRequest"/></typeparam>
            <typeparam name="TEnableCustomerResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.EnableCustomerResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.EnableCustomerResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.DeleteCustomer``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Deletes the customer.
            </summary>
            <typeparam name="TDeleteCustomerRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DeleteCustomerRequest"/></typeparam>
            <typeparam name="TDeleteCustomerResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.DeleteCustomerResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.DeleteCustomerResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.GetCustomer``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Gets the customer.
            </summary>
            <typeparam name="TGetCustomerRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomerRequest"/></typeparam>
            <typeparam name="TGetCustomerResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomerResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomerResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.GetCustomers``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Gets the customers.
            </summary>
            <typeparam name="TGetCustomersRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomersRequest"/></typeparam>
            <typeparam name="TGetCustomersResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomersResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomersResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.AddCustomers``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Adds customers to an existing user.
            </summary>
            <typeparam name="TAddCustomersRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.AddCustomersRequest"/></typeparam>
            <typeparam name="TAddCustomersResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.AddCustomersResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.AddCustomersResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.RemoveCustomers``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Removes customers from an existing user.
            </summary>
            <typeparam name="TRemoveCustomersRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveCustomersRequest"/></typeparam>
            <typeparam name="TRemoveCustomersResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveCustomersResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.RemoveCustomersResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.AddUsers``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Adds users to an existing customer.
            </summary>
            <typeparam name="TAddUsersRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.AddUsersRequest"/></typeparam>
            <typeparam name="TAddUsersResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.AddUsersResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.AddUsersResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.RemoveUsers``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Removes users from an existing customer.
            </summary>
            <typeparam name="TRemoveUsersRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveUsersRequest"/></typeparam>
            <typeparam name="TRemoveUsersResult">The type of the <see cref="T:Sitecore.Commerce.Services.Customers.RemoveUsersResult"/></typeparam>
            <param name="customerServiceProvider">The customer service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.RemoveUsersResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.AddCustomerParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Adds the customer parties.
            </summary>
            <typeparam name="TAddCustomerPartiesRequest">The type of the add customer Parties request.</typeparam>
            <typeparam name="TCustomerPartiesResult">The type of the customer parties result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.RemoveCustomerParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Removes the customer parties.
            </summary>
            <typeparam name="TRemoveCustomerPartiesRequest">The type of the remove customer Parties request.</typeparam>
            <typeparam name="TCustomerPartiesResult">The type of the customer parties result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.UpdateCustomerParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the customer parties.
            </summary>
            <typeparam name="TUpdateCustomerPartiesRequest">The type of the update customer Parties request.</typeparam>
            <typeparam name="TCustomerPartiesResult">The type of the customer parties result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerPartiesResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.AddParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Adds the parties.
            </summary>
            <typeparam name="TAddPartiesRequest">The type of the add Parties request.</typeparam>
            <typeparam name="TAddPartiesResult">The type of the add parties result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.AddPartiesResult"/> </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.GetParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Gets the parties.
            </summary>
            <typeparam name="TGetPartiesRequest">The type of the get Parties request.</typeparam>
            <typeparam name="TGetPartiesResult">The type of the get parties result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.GetPartiesResult"/> </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.RemoveParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Removes the parties associated with the given customer.
            </summary>
            <typeparam name="TRemovePartiesRequest">The type of the remove customer Parties request.</typeparam>
            <typeparam name="TCustomerResult">The type of the customer result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerResult"/> </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.UpdateParties``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the parties information associated with the given customer.
            </summary>
            <typeparam name="TUpdatePartiesRequest">The type of the update customer Parties request.</typeparam>
            <typeparam name="TCustomerResult">The type of the customer result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.CustomerResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.Generics.GenericCustomerServiceProviderExtensions.UpdatePassword``2(Sitecore.Commerce.Services.Customers.CustomerServiceProvider,``0)">
            <summary>
            Updates the parties information associated with the given customer.
            </summary>
            <typeparam name="TUpdatePasswordRequest">The type of the update password request.</typeparam>
            <typeparam name="TUpdatePasswordResult">The type of the update password result.</typeparam>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.Customers.UpdatePasswordResult"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetCustomersRequest">
            <summary>
              The get customers request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetCustomersRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomersRequest"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetCustomersRequest.#ctor(Sitecore.Commerce.Services.Customers.CustomerSearchCriteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetCustomersRequest"/> class.
            </summary>
            <param name="customerSearchCriteria">The search criteria for users.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetCustomersRequest.CustomerSearchCriteria">
            <summary>
            Gets or sets the search users.
            </summary>
            <value>
            The search users.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetCustomersResult">
            <summary>
            The get customers result.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.GetCustomersResult.commerceCustomers">
            <summary>
            The commerce customers.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetCustomersResult.CommerceCustomers">
            <summary>
            Gets the commerce users.
            </summary>
            <value>
            The commerce users.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetUsersRequest">
            <summary>
            The get users request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetUsersRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUsersRequest"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.GetUsersRequest.#ctor(Sitecore.Commerce.Services.Customers.UserSearchCriteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.GetUsersRequest"/> class.
            </summary>
            <param name="userSearchCriteria">The search criteria for users.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetUsersRequest.UserSearchCriteria">
            <summary>
            Gets or sets the search users.
            </summary>
            <value>
            The search users.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.GetUsersResult">
            <summary>
            The get users result.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Customers.GetUsersResult.commerceUsers">
            <summary>
            The commerce users.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Customers.GetUsersResult.CommerceUsers">
            <summary>
            Gets the commerce users.
            </summary>
            <value>
            The commerce users.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdateCustomerRequest">
            <summary>
            The update customer request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.UpdateCustomerRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateCustomerRequest"/> class.
            </summary>
            <param name="commerceCustomer">The commerce customer.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdateCustomerResult">
            <summary>
            The update customer result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdateUserRequest">
            <summary>
            The update user request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Customers.UpdateUserRequest.#ctor(Sitecore.Commerce.Entities.Customers.CommerceUser)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Customers.UpdateUserRequest"/> class.
            </summary>
            <param name="commerceUser">The commerce user.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Customers.UpdateUserResult">
            <summary>
            The update user result.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.GiftCards.Generics.GenericGiftCardServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Services.GiftCards.GiftCardServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.GiftCards.Generics.GenericGiftCardServiceProviderExtensions.GetGiftCard``2(Sitecore.Commerce.Services.GiftCards.GiftCardServiceProvider,``0)">
            <summary>
            Gets a gift card. It calls the GetGiftCard pipeline.
            </summary>
            <typeparam name="TGetGiftCardRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest"/>class.</typeparam>
            <typeparam name="TGetGiftCardResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardResult"/>class.</typeparam>
            <param name="serviceProvider">The service provider.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest"/> Contains the search criteria.</param>
            <returns>
            The extended <see cref="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardResult"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest">
            <summary>
            The request of the "commerce.giftCards.getGiftCard" pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.GiftCards.GiftCardRequest">
            <summary>
            Defines the GiftCardRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest"/> class.
            </summary>
            <param name="giftCardId">The gift card identifier.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest.GiftCardId">
            <summary>
            Gets or sets the gift card identifier.
            </summary>
            <value>
            The gift card identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.GiftCards.GetGiftCardResult">
            <summary>
            The result of the "commerce.giftCards.getGiftCard" pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.GiftCards.GiftCardResult">
            <summary>
            Defines the GiftCardResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.GiftCards.GetGiftCardResult.GiftCard">
            <summary>
            Gets or sets the gift card.
            </summary>
            <value>
            The gift card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.GiftCards.GiftCardServiceProvider">
            <summary>
            Represents the interaction with the gift card service.
            Service providers are wrapper objects that ease the interaction with the implementation pipelines. The providers only implement the calling pipelines.
            All the business logic is implemented in the pipeline processors.
            The GiftCardServiceProvider class implements the ServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.GiftCards.GiftCardServiceProvider.GetGiftCard(Sitecore.Commerce.Services.GiftCards.GetGiftCardRequest)">
            <summary>
            Gets a gift card.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Globalization.CultureChosenRequest">
            <summary>
            Defines the CultureChosenRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Globalization.GlobalizationRequest">
            <summary>
            Defines the GlobalizationRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Globalization.CultureChosenRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Globalization.CultureChosenRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="culture">The culture.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Globalization.CultureChosenRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Globalization.CultureChosenRequest.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Globalization.Generics.GenericGlobalizationServiceProviderExtensions">
            <summary>
            Defines the GenericGlobalizationServiceProviderExtensions class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Globalization.Generics.GenericGlobalizationServiceProviderExtensions.CultureChosen``2(Sitecore.Commerce.Services.Globalization.GlobalizationServiceProvider,``0)">
            <summary>
            Generates the Culture Chosen page event.
            </summary>
            <typeparam name="TCultureChosenRequest">The type of the culture chosen request.</typeparam>
            <typeparam name="TGlobalizationResult">The type of the globalization result.</typeparam>
            <param name="provider">The provider.</param>
            <param name="request">The request.</param>
            <returns>The result of tgheservice call.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Globalization.GlobalizationResult">
            <summary>
            Defines the GlobalizationResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Globalization.GlobalizationServiceProvider">
            <summary>
            Defines the GlobalizationServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Globalization.GlobalizationServiceProvider.CultureChosen(Sitecore.Commerce.Services.Globalization.CultureChosenRequest)">
            <summary>
            Generates the Culture Chosen page event.
            </summary>
            <param name="request">The request.</param>
            <returns>The result of tgheservice call.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.GetStockInformation``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Retrieves stock information for products. It calls the GetStockInformation pipeline.
            </summary>
            <typeparam name="TGetStockInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest"/>class.</typeparam>
            <typeparam name="TGetStockInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.GetStockLocations``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Retrieves stock locations for products. It calls the GetStockLocations pipeline.
            </summary>
            <typeparam name="TGetStockLocationsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest"/>class.</typeparam>
            <typeparam name="TGetStockLocationsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.GetProductStockLocations``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Retrieves stock locations for products. It calls the GetProductStockLocations pipeline.
            </summary>
            <typeparam name="TGetProductStockLocationsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest"/>class.</typeparam>
            <typeparam name="TGetProductStockLocationsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.GetPreOrderableInformation``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Retrieves preorderable information for products. It calls the GetPreOrderableInformation pipeline.
            </summary>
            <typeparam name="TGetPreOrderableInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationRequest"/>class.</typeparam>
            <typeparam name="TGetPreOrderableInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.GetBackOrderableInformation``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Retrieves backorderable information for products. It calls the GetBackOrderableInformation pipeline.
            </summary>
            <typeparam name="TGetBackOrderableInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationRequest"/>class.</typeparam>
            <typeparam name="TGetBackOrderableInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.VisitedProductStockStatus``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Track product stock status for customers visiting product details pages
            </summary>
            <typeparam name="TVisitedProductStockStatusRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest"/>class.</typeparam>
            <typeparam name="TVisitedProductStockStatusResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.ProductsAreBackInStock``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Updates a product stock count
            </summary>
            <typeparam name="TProductsAreBackInStockRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest"/>class.</typeparam>
            <typeparam name="TProductsAreBackInStockResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.VisitorSignUpForStockNotification``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Adds a visitor to EA plan so they can be notified when the product gets back in stock
            </summary>
            <typeparam name="TVisitorSignUpForStockNotificationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest"/>class.</typeparam>
            <typeparam name="TVisitorSignUpForStockNotificationResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.RemoveVisitorFromStockNotification``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Removes a visitor from EA plan so they will no longer be notified when a product gets back in stock
            </summary>
            <typeparam name="TRemoveVisitorFromStockNotificationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest"/>class.</typeparam>
            <typeparam name="TRemoveVisitorFromStockNotificationResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.Generics.GenericInventoryServiceProviderExtensions.GetBackInStockInformation``2(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,``0)">
            <summary>
            Retrieves updated stock information for products from an external commerce system.
            </summary>
            <typeparam name="TGetBackInStockInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest"/>class.</typeparam>
            <typeparam name="TGetBackInStockInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult"/>class.</typeparam>
            <param name="inventoryProvider">A <see cref="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest">
            <summary>
            The request parameters required for to retrieve stock locations for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for stock locations.</param>
            <param name="productId">The product whose stock location is requested.</param>
            <param name="customerId">The optional customer ID.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest.CustomerId">
            <summary>
            Gets or sets the customer ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest.ProductId">
            <summary>
            Gets or sets the product ID.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsResult">
            <summary>
            The response returned by a request to retrieve stock locations for a product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetProductStockLocationsResult.StockInformation">
            <summary>
            Gets or sets the stock information for the requested product.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest">
            <summary>
            The request parameters required for to retrieve stock locations for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for stock locations.</param>
            <param name="customerId">The optional customer ID.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest.CustomerId">
            <summary>
            Gets or sets the customer ID.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetStockLocationsResult">
            <summary>
            The response returned by a request to retrieve stock locations for a product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockLocationsResult.StockLocations">
            <summary>
            Gets or sets the stock locations for the requested product.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest">
            <summary>
            The request parameters required to remove a visitor from EA plan so they will no longer be notified when a product gets back in stock
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest.#ctor(System.String,System.String,Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop</param>
            <param name="visitorId">The visitor id.</param>
            <param name="product">The product.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest.ShopName">
            <summary>
            Gets or sets the name of the shop that will be examined for stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest.VisitorId">
            <summary>
            Gets or sets the ID of the customer signing up for back in stock notifications.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest.Product">
            <summary>
            Gets or sets the product whose the visitor is requesting back in stock notification.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationResult">
            <summary>
            The result returned by a request to RemoveVisitorFromStockNotification service method.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest">
            <summary>
            Defines the GetLoyaltyProgramRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramRequest">
            <summary>
            Defines the LoyaltyProgramRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="programId">The program identifier.</param>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest.ProgramId">
            <summary>
            Gets or sets the program identifier.
            </summary>
            <value>
            The program identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramResult">
            <summary>
            Defines the GetLoyaltyProgramResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramResult">
            <summary>
            Defines the LoyaltyProgramResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramResult.LoyaltyProgram">
            <summary>
            Gets or sets the loyalty program.
            </summary>
            <value>
            The loyalty program.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsRequest">
            <summary>
            Defines the GetLoyaltyProgramsRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsResult">
            <summary>
            Defines the GetLoyaltyProgramsResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsResult.LoyaltyProgramSummary">
            <summary>
            Gets or sets the loyalty programs.
            </summary>
            <value>
            The loyalty programs.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusRequest">
            <summary>
            Defines the GetLoyaltyProgramStatusRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusRequest.#ctor(Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusRequest"/> class.
            </summary>
            <param name="loyaltyCard">The loyalty card.</param>
            <param name="programIds">The (optional) program ids.  When this parameter is ommited, the loyalty card defined program identifiers are used.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusRequest.LoyaltyCard">
            <summary>
            Gets or sets the loyalty card.
            </summary>
            <value>
            The loyalty card.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusRequest.ProgramIds">
            <summary>
            Gets or sets the program ids.
            </summary>
            <value>
            The program ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusResult">
            <summary>
            Defines gthe GetLoyaltyProgramStatusResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusResult.LoyaltyProgramStatuses">
            <summary>
            Gets or sets the loyalty program.
            </summary>
            <value>
            The loyalty program.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest">
            <summary>
            The request of the "commerce.loyaltyPrograms.joinLoyaltyProgram" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="programId">The program identifier.  No program id is nececessary if the implemntation has a single program.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest.ProgramId">
            <summary>
            Gets or sets the program identifier.
            </summary>
            <value>
            The program identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramResult">
            <summary>
            The result of the "commerce.loyaltyPrograms.joinLoyaltyProgram" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramResult.LoyaltyCard">
            <summary>
            Gets or sets the loyalty card.
            </summary>
            <value>
            The loyalty card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions.GetLoyaltyPrograms``2(Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider,``0)">
            <summary>
            Gets the loyalty programs.
            </summary>
            <typeparam name="TGetLoyaltyProgramsRequest">The type of the get loyalty programs request.</typeparam>
            <typeparam name="TGetLoyaltyProgramsResult">The type of the get loyalty programs result.</typeparam>
            <param name="serviceProvider">The service provider.</param>
            <param name="request">The request.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions.GetLoyaltyProgram``2(Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider,``0)">
            <summary>
            Gets a specific loyalty program (detail view).
            </summary>
            <typeparam name="TGetLoyaltyProgramRequest">The type of the get loyalty program request.</typeparam>
            <typeparam name="TGetLoyaltyProgramResult">The type of the get loyalty program result.</typeparam>
            <param name="serviceProvider">The service provider.</param>
            <param name="request">The request.</param>
            <returns>
            The extended <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions.GetLoyaltyProgramStatus``2(Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider,``0)">
            <summary>
            Gets the loyalty program status.
            </summary>
            <typeparam name="TGetLoyaltyProgramStatusRequest">The type of the get loyalty program status request.</typeparam>
            <typeparam name="TGetLoyaltyProgramStatusResult">The type of the get loyalty program status result.</typeparam>
            <param name="serviceProvider">The service provider.</param>
            <param name="request">The request.</param>
            <returns>
            The extended <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusResult"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions.JoinLoyaltyProgram``2(Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider,``0)">
            <summary>
            Joins the loyalty card program.
            </summary>
            <typeparam name="TJoinLoyaltyProgramRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest"/>class.</typeparam>
            <typeparam name="TJoinLoyaltyProgramResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramResult"/>class.</typeparam>
            <param name="serviceProvider">A <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest"/> Contains the search criteria.</param>
            <returns>
            The extended <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramResult"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions.GetLoyaltyCards``2(Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider,``0)">
            <summary>
            Gets a loyalty cards. It calls the GetLoyaltyCards pipeline.
            </summary>
            <typeparam name="TGetLoyaltyCardsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest"/>class.</typeparam>
            <typeparam name="TGetLoyaltyCardsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsResult"/>class.</typeparam>
            <param name="serviceProvider">A <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.Generics.GenericLoyaltyProgramServiceProviderExtensions.GetLoyaltyCardTransactions``2(Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider,``0)">
            <summary>
            Gets a loyalty card transactions. It calls the GetLoyaltyCardTransactions pipeline.
            </summary>
            <typeparam name="TGetLoyaltyCardTransactionsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest"/>class.</typeparam>
            <typeparam name="TGetLoyaltyCardTransactionsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsResult"/>class.</typeparam>
            <param name="serviceProvider">A <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsResult"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest">
            <summary>
            The request of the "commerce.loyaltyPrograms.getLoyaltyCards" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="cardId">The (optional) card identifier.  Used as a filter to return a specific loyalty card.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest.CardId">
            <summary>
            Gets or sets the card identifier.
            </summary>
            <value>
            The card number.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsResult">
            <summary>
            The result of the "commerce.loyaltyPrograms.getLoyaltyCards" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsResult.LoyaltyCards">
            <summary>
            Gets or sets the loyalty cards.
            </summary>
            <value>
            The loyalty cards.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest">
            <summary>
            The request of the "commerce.loyaltyPrograms.getLoyaltyCardTransactions" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest.#ctor(Sitecore.Commerce.Entities.LoyaltyPrograms.LoyaltyCard)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest"/> class.
            </summary>
            <param name="loyaltyCard">The loyalty card.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest.LoyaltyCard">
            <summary>
            Gets or sets the loyalty card.
            </summary>
            <value>
            The loyalty card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsResult">
            <summary>
            The result of the "commerce.loyaltyPrograms.getLoyaltyCardTransactions" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsResult.LoyaltyCardTransactions">
            <summary>
            Gets or sets the loyalty card transactions.
            </summary>
            <value>
            The loyalty card transactions.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider">
            <summary>
            Represents the interaction with the wish list service.
            Service providers are wrapper objects that ease the interaction with the implementation pipelines. The providers only implement the calling pipelines.
            All the business logic is implemented in the pipeline processors.
            The LoyaltyCardServiceProvider class implements the ServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider.GetLoyaltyPrograms(Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramsRequest)">
            <summary>
            Gets the loyalty programs (header view).
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider.GetLoyaltyProgram(Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramRequest)">
            <summary>
            Gets a specific loyalty program (detail view).
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider.GetLoyaltyProgramStatus(Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyProgramStatusRequest)">
            <summary>
            Gets the loyalty program status.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider.JoinLoyaltyProgram(Sitecore.Commerce.Services.LoyaltyPrograms.JoinLoyaltyProgramRequest)">
            <summary>
            Joins the loyalty card program.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider.GetLoyaltyCards(Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardsRequest)">
            <summary>
            Gets loyalty cards.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.LoyaltyPrograms.LoyaltyProgramServiceProvider.GetLoyaltyCardTransactions(Sitecore.Commerce.Services.LoyaltyPrograms.GetLoyaltyCardTransactionsRequest)">
            <summary>
            Gets the loyalty card transactions.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetAvailableCountriesRequest">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetAvailableCountriesRequest"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.OrdersRequest">
            <summary>
            Defines the OrdersRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetAvailableCountriesResult">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetAvailableCountriesResult"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.OrdersResult">
            <summary>
            Defines the OrdersResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetAvailableCountriesResult.AvailableCountries">
            <summary>
            Gets or sets a Dictionary containing country abbreviations mapped to country names.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetAvailableRegionsRequest">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetAvailableRegionsRequest"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.GetAvailableRegionsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetAvailableRegionsRequest"/> class.
            </summary>
            <param name="countryCode">The country code.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetAvailableRegionsRequest.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetAvailableRegionsResult">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetAvailableRegionsResult"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetAvailableRegionsResult.AvailableRegions">
            <summary>
            Gets or sets a Dictionary containing region abbreviations mapped to country names.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest">
            <summary>
            Defines the OrderStatusChangedRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest"/> class.
            </summary>
            <param name="orderId">The order id.</param>
            <param name="customerId">The customer id.</param>
            <param name="orderStatus">The new <see cref="P:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest.OrderStatus"/>.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest.OrderId">
            <summary>
            Gets or sets the order id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest.CustomerId">
            <summary>
            Gets or sets the customer id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.OrderStatusChangedResult">
            <summary>
            Defines the OrderStatusChangedResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest">
            <summary>
            Defines the GetPaymentMethodsRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.PaymentRequest">
            <summary>
            Defines the PaymentRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest.#ctor(Sitecore.Commerce.Entities.Payments.PaymentOption,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest"/> class.
            </summary>
            <param name="paymentOption">The payment option.</param>
            <param name="shopName">The name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest.PaymentOption">
            <summary>
            Gets or sets the payment option.
            </summary>
            <value>
            The payment option.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
            <value>
            The shop name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.GetPaymentMethodsResult">
            <summary>
            Defines the GetPaymentMethodsResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.PaymentResult">
            <summary>
            Defines the PaymentResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPaymentMethodsResult.PaymentMethods">
            <summary>
            Gets or sets the payment methods.
            </summary>
            <value>
            The payment methods.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest">
            <summary>
            The request of the "commerce.payments.getPaymentOptions" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest.#ctor(System.String,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest.Cart">
            <summary>
            Gets or sets the Cart.
            </summary>
            <value>
            The Cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsResult">
            <summary>
            The result of the "commerce.payments.getPaymentOptions" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPaymentOptionsResult.PaymentOptions">
            <summary>
            Gets or sets the payment options.
            </summary>
            <value>
            The payment options.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest">
            <summary>
            Defines the GetPricesForPaymentsRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Payments.PaymentLookup},Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest"/> class.
            </summary>
            <param name="shopName">The shop name.</param>
            <param name="paymentLookup">The payment lookup IEnumerable.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
            <value>
            The shop name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest.PaymentLookup">
            <summary>
            Gets or sets the PaymentLookup collection.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest.Cart">
            <summary>
            Gets or sets the Cart.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsResult">
            <summary>
            Defines the GetPricesForPaymentsResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Payments.GetPricesForPaymentsResult.PaymentPrices">
            <summary>
            Gets or sets the PaymentPrices.
            </summary>
            <value>
            A list of type PaymentPrice that represents the prices for a list of payment options.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.CurrencyChosenRequest">
            <summary>
            Defines the CurrencyChosenRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.PriceRequest">
            <summary>
            Defines the base class of all Price requests.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.CurrencyChosenRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Prices.CurrencyChosenRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="chosenCurrency">The chosen currency.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.CurrencyChosenRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.CurrencyChosenRequest.ChosenCurrency">
            <summary>
            Gets or sets the chosen currency.
            </summary>
            <value>
            The chosen currency.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesRequest">
            <summary>
            The get supported currencies request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesRequest"/> class.
            </summary>
            <param name="shopName">The shop name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesResult">
            <summary>
            The get supported currencies result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesResult.Currencies">
            <summary>
            Gets or sets the supported currencies.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.Generics.GenericShippingServiceProviderExtensions">
            <summary>
            Defines the GenericShippingServiceProviderExtensions class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.Generics.GenericShippingServiceProviderExtensions.GetShippingOptions``2(Sitecore.Commerce.Services.Shipping.ShippingServiceProvider,``0)">
            <summary>
            Gets the shipping options.
            </summary>
            <typeparam name="TGetShippingOptionsRequest">The type of the get shipping options request.</typeparam>
            <typeparam name="TGetShippingOptionsResult">The type of the get shipping options result.</typeparam>
            <param name="shippingProvider">The shipping provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetShippingOptionsResult instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.Generics.GenericShippingServiceProviderExtensions.GetShippingMethods``2(Sitecore.Commerce.Services.Shipping.ShippingServiceProvider,``0)">
            <summary>
            Gets the shipping methods.
            </summary>
            <typeparam name="TGetShippingMethodsRequest">The type of the get shipping methods request.</typeparam>
            <typeparam name="TGetShippingMethodsResult">The type of the get shipping methods result.</typeparam>
            <param name="shippingProvider">The shipping provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetShippingMethodsResult instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.Generics.GenericShippingServiceProviderExtensions.GetShippingMethod``2(Sitecore.Commerce.Services.Shipping.ShippingServiceProvider,``0)">
            <summary>
            Gets the shipping method.
            </summary>
            <typeparam name="TGetShippingMethodRequest">The type of the get shipping method request.</typeparam>
            <typeparam name="TGetShippingMethodResult">The type of the get shipping method result.</typeparam>
            <param name="shippingProvider">The shipping provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetShippingMethodResult instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.Generics.GenericShippingServiceProviderExtensions.GetPricesForShipments``2(Sitecore.Commerce.Services.Shipping.ShippingServiceProvider,``0)">
            <summary>
            Gets the shipment option prices.
            </summary>
            <typeparam name="TGetPricesForShipmentsRequest">The type of the get prices for shipments method request.</typeparam>
            <typeparam name="TGetPricesForShipmentsResult">The type of the get prices for shipments result.</typeparam>
            <param name="shippingProvider">The shipping provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetPricesForShipmentsResult instance.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest">
            <summary>
            Defines the GetPricesForShipmentsRequest class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.ShippingRequest">
            <summary>
            Defines the ShippingRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Shipping.ShippingLookup},Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest"/> class.
            </summary>
            <param name="shopName">The shop name.</param>
            <param name="shippingLookup">The shipping lookup IEnumerable.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
            <value>
            The shop name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest.ShippingLookup">
            <summary>
            Gets or sets the ShippingLookup collection.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest.Cart">
            <summary>
            Gets or sets the Cart.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsResult">
            <summary>
            Defines the GetPricesForShipmentsResult class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.ShippingResult">
            <summary>
            Defines the ShippingResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsResult.ShippingPrices">
            <summary>
            Gets or sets the ShippingPrices.
            </summary>
            <value>
            A list of type ShippingPrice that represents the prices for a list of shipping options.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetShippingMethodRequest">
            <summary>
            Defines the GetShippingMethodRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.GetShippingMethodRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Shipping.GetShippingMethodRequest"/> class.
            </summary>
            <param name="externalId">The external id of the shipping method.</param>
            <param name="shopName">The optional shop name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
            <value>
            The shop name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodRequest.ExternalId">
            <summary>
            Gets or sets the External Id.
            </summary>
            <value>
            The external id of the customer.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetShippingMethodResult">
            <summary>
            Defines the GetShippingMethodResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodResult.ShippingMethod">
            <summary>
            Gets or sets the shipping method.
            </summary>
            <value>
            The shipping method.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodResult.ShippingMethodPerItem">
            <summary>
            Gets or sets the shipping method per item.
            </summary>
            <value>
            The shipping method per item.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest">
            <summary>
            Defines the GetShippingMethodsRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest.#ctor(Sitecore.Commerce.Entities.Shipping.ShippingOption,Sitecore.Commerce.Entities.Party,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest"/> class.
            </summary>
            <param name="shippingOption">The shipping option.</param>
            <param name="party">The party.</param>
            <param name="shopName">The shop name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest.ShippingOption">
            <summary>
            Gets or sets the shipping option.
            </summary>
            <value>
            The shipping option.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest.Party">
            <summary>
            Gets or sets the party.
            </summary>
            <value>
            The party.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
            <value>
            The shop name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetShippingMethodsResult">
            <summary>
            Defines the GetShippingMethodsResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodsResult.ShippingMethods">
            <summary>
            Gets or sets the shipping methods.
            </summary>
            <value>
            The shipping methods.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingMethodsResult.ShippingMethodsPerItem">
            <summary>
            Gets or sets the shipping methods per item.
            </summary>
            <value>
            The shipping methods per items.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetShippingOptionsRequest">
            <summary>
            The request of the "commerce.shipping.getShippingOptions" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.GetShippingOptionsRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Shipping.GetShippingOptionsRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="shopName">The shop name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingOptionsRequest.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingOptionsRequest.ShopName">
            <summary>
            Gets or sets the shop name.
            </summary>
            <value>
            The shop name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.GetShippingOptionsResult">
            <summary>
            The result of the "commerce.orders.getShippingOptions" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingOptionsResult.ShippingOptions">
            <summary>
            Gets or sets the shipping options.
            </summary>
            <value>
            The shipping options.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Shipping.GetShippingOptionsResult.LineShippingPreferences">
            <summary>
            Gets or sets the line shipping options when a cart is passed into the request.
            </summary>
            <value>
            The line shipping options.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest">
            <summary>
            Defines the GetVisitorOrderRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest"/> class.
            </summary>
            <param name="orderID">The order identifier.</param>
            <param name="customerID">The customer identifier.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest.OrderID">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest.CustomerID">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetVisitorOrderResult">
            <summary>
            Defines the GetVisitorOrderResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrderResult.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest">
            <summary>
            Defines the GetVisitorOrdersRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest"/> class.
            </summary>
            <param name="customerID">The customer identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="stateFilter">The state filter.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest.CustomerID">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest.StateFilter">
            <summary>
            Gets or sets the state filter.
            </summary>
            <value>
            The state filter.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.GetVisitorOrdersResult">
            <summary>
            Defines the GetVisitorOrdersResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.GetVisitorOrdersResult.OrderHeaders">
            <summary>
            Gets or sets the order headers.
            </summary>
            <value>
            The order headers.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest">
            <summary>
            Defines the VisitorCancelOrderRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest"/> class.
            </summary>
            <param name="orderID">The order identifier.</param>
            <param name="customerID">The customer identifier.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest.OrderID">
            <summary>
            Gets or sets the order identifier.
            </summary>
            <value>
            The order identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest.CustomerID">
            <summary>
            Gets or sets the customer identifier.
            </summary>
            <value>
            The customer identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.VisitorCancelOrderResult">
            <summary>
            Defines the VisitorCancelOrderResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.VisitorCancelOrderResult.CancelledOrder">
            <summary>
            Gets or sets the cancelled order.
            </summary>
            <value>
            The cancelled order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.Generics.GenericPaymentServiceProviderExtensions">
            <summary>
            Defines the GenericPaymentServiceProviderExtensions class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.Generics.GenericPaymentServiceProviderExtensions.GetPaymentOptions``2(Sitecore.Commerce.Services.Payments.PaymentServiceProvider,``0)">
            <summary>
            Gets available payment options.
            </summary>
            <typeparam name="TGetPaymentOptionsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest"/>class.</typeparam>
            <typeparam name="TGetPaymentOptionsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsResult"/>class.</typeparam>
            <param name="paymentProvider">A <see cref="T:Sitecore.Commerce.Services.Payments.PaymentServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentOptionsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.Generics.GenericPaymentServiceProviderExtensions.GetPaymentMethods``2(Sitecore.Commerce.Services.Payments.PaymentServiceProvider,``0)">
            <summary>
            Gets the payment options.
            </summary>
            <typeparam name="TGetPaymentMethodsRequest">The type of the get payment methods request.</typeparam>
            <typeparam name="TGetPaymentMethodsResult">The type of the get payment methods result.</typeparam>
            <param name="paymentProvider">The payment provider.</param>
            <param name="request">The request.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Payments.GetPaymentMethodsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.Generics.GenericPaymentServiceProviderExtensions.GetPricesForPayments``2(Sitecore.Commerce.Services.Payments.PaymentServiceProvider,``0)">
            <summary>
            Gets the payment option prices.
            </summary>
            <typeparam name="TGetPricesForPaymentsRequest">The type of the get prices for payments method request.</typeparam>
            <typeparam name="TGetPricesForPaymentsResult">The type of the get prices for payments result.</typeparam>
            <param name="paymentProvider">The payment provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetPricesForPaymentsResult instance.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Payments.PaymentServiceProvider">
            <summary>
            Defines the PaymentServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.PaymentServiceProvider.GetPaymentOptions(Sitecore.Commerce.Services.Payments.GetPaymentOptionsRequest)">
            <summary>
            Gets the payment options.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.PaymentServiceProvider.GetPaymentMethods(Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Payments.PaymentServiceProvider.GetPricesForPayments(Sitecore.Commerce.Services.Payments.GetPricesForPaymentsRequest)">
            <summary>
            Gets the prices for payment options and methods.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Shipping.ShippingServiceProvider">
            <summary>
            Defines the ShippingServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.ShippingServiceProvider.GetShippingOptions(Sitecore.Commerce.Services.Shipping.GetShippingOptionsRequest)">
            <summary>
            Gets the shipping options.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.ShippingServiceProvider.GetShippingMethods(Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest)">
            <summary>
            Gets the shipping methods.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.ShippingServiceProvider.GetShippingMethod(Sitecore.Commerce.Services.Shipping.GetShippingMethodRequest)">
            <summary>
            Gets the shipping method.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Shipping.ShippingServiceProvider.GetPricesForShipments(Sitecore.Commerce.Services.Shipping.GetPricesForShipmentsRequest)">
            <summary>
            Gets the price for shipping option.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.SystemMessage">
            <summary>
            Represents messages from the external system. This is how error conditions can be reported.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.SystemMessage.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Prices.PriceCondition">
            <summary>
            Represents a condition that must be met in order for a price to be applied. For every external commerce system, you must extend the PriceCondition class
            to support the actual ConditionTypes, operators and possible return values.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.PriceCondition.ConditionType">
            <summary>
            Gets or sets the type of the condition.
            <example>quantity, date and total</example>
            </summary>
            <value>The type of the condition.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.PriceCondition.Description">
            <summary>
            Gets or sets the text that describes the condition.
            </summary>
            <value>The text that describes the condition.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.PriceCondition.Operator">
            <summary>
            Gets or sets the operator that you can use to compare values in the condition.
            <example>greater than, equal to, and between</example>
            </summary>
            <value>The operator that you can use to compare values in the condition.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.PriceCondition.Sequence">
            <summary>
            Gets or sets the number that represents the sequential order of the condition.
            </summary>
            <value>
            The sequential order of the condition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.PriceCondition.Value">
            <summary>
            Gets or sets the value. 
            If the ConditionType is equals to Quantity, the value is typically:
            <list type="bullet">
            <item>
            <description>
            A single integer with a logical operator like "greater than ‘<![CDATA[>]]>’", "less than ‘<![CDATA[<]]>’", "greater than or equal to ‘<![CDATA[>=]]>’" or "less than or equal to ‘<![CDATA[<=]]>’"
            </description>
            </item>
            or
            <item>
            <description>
            A range like 5-10 with the operator "between"
            </description>
            </item>
            If the ConditionType is equal to Date, the value is typically:
            <item>
            <description>
            A single date with an operator like "greater than ‘<![CDATA[>]]>’", "less than ‘<![CDATA[<]]>’", "greater than or equal to ‘<![CDATA[>=]]>’" or "greater than or equal to ‘<![CDATA[<=]]>’"
            </description>
            </item>
            or
            <item>
            <description>
            A date range like A - B with the operator "between"
            </description>
            </item>
            </list>
            </summary>
            <value>
            The value that you use to compare the condition type with.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Prices.TaxSubtotal">
            <summary>
            Represents a specific tax that is applied to an object, and the amount of the tax.
            This level of granularity is required in some countries.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxSubtotal.BaseUnitMeasure">
            <summary>
            Gets or sets the number of items in a unit for which the fixed value (PerUnitAmount) applies to. The BaseUnitMeasure is not used if the Percent method is used.
            </summary>
            <value>The base unit measure.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxSubtotal.Description">
            <summary>
            Gets or sets the text that describes the tax subtotal.
            </summary>
            <value>The text that describes the tax subtotal.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxSubtotal.Percent">
            <summary>
            Gets or sets the tax percentage. It is equal to zero if a fixed value is used.
            </summary>
            <value>The percentage that indicates the tax subtotal.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxSubtotal.PerUnitAmount">
            <summary>
            Gets or sets the fixed value of the tax. It is equal to zero if a percentage is used.
            </summary>
            <value>The fixed tax value of the tax subtotal.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxSubtotal.TaxSubtotalType">
            <summary>
            Gets or sets the type of the tax subtotal. 
            <example>"CA state tax", "NYC city tax", and "special levy 003a"</example>
            </summary>
            <value>The type of the tax subtotal.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Prices.TaxTotal">
            <summary>
            Represents the tax that applies to the total.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Entities.Prices.TaxTotal.taxSubtotals">
            <summary>
            The tax subtotals.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Prices.TaxTotal.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxTotal.Amount">
            <summary>
            Gets or sets the value of the total tax.
            </summary>
            <remarks>
            The currency of the total tax is the same as that of the total price.
            </remarks>
            <value>The value of the tax total.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxTotal.Description">
            <summary>
            Gets or sets the text that describes the tax total.
            </summary>
            <value>The description of the tax total.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxTotal.Id">
            <summary>
            Gets or sets the ID of the tax total. You can only use this value in an external commerce system. For example, you can use it in auditing applications.
            </summary>
            <value>The ID of the tax total.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.TaxTotal.TaxSubtotals">
            <summary>
            Gets or sets the list of subtotal taxes that affect the total tax.
            </summary>
            <value>The tax subtotals.</value>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Prices.Total">
            <summary>
            Represents the total price that a customer pays for a product,
            cart line, or entire cart including charges, discounts, coupon codes, taxes, and shipping expenses.
            You can use the <see cref="T:Sitecore.Commerce.Services.Prices.PricingServiceProvider"/> layer to get the total price of the group of items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Entities.Prices.Total.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Total.Amount">
            <summary>
            Gets or sets the value that represents the total amount.
            </summary>
            <value>The value of the total.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Total.CurrencyCode">
            <summary>
            Gets or sets the code that represents the currency.
            </summary>
            <value>The currency of the total.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Total.Description">
            <summary>
            Gets or sets the text that describes the total.
            </summary>
            <value>Text that describes the total.</value>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Prices.Total.TaxTotal">
            <summary>
            Gets or sets the tax total that describes the tax. It is calculated from the tax subtotals.
            </summary>
            <value>An object that represents the taxes total.</value>
        </member>
        <member name="T:Sitecore.Commerce.Install.PostSteps">
            <summary>
            Defines the post steps performed after package installation.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.PostSteps.PageEventsRootId">
            <summary>
            The page events root unique identifier.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.PostSteps.GoalsRootId">
            <summary>
            The goals root unique identifier.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.PostSteps.DraftStateId">
            <summary>
            The draft state unique identifier.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.PostSteps.DeployCommandId">
            <summary>
            The deploy command unique identifier.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Install.PostSteps.commerceAnalyticsItemInfos">
            <summary>
            The analytics item info.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Install.PostSteps.Run(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs the specified output.
            </summary>
            <param name="output">The output.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:Sitecore.Commerce.Install.PostSteps.DeployPageEvents">
            <summary>
            Deploys the page events.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Install.PostSteps.DeployPageEvent(Sitecore.Data.Items.Item)">
            <summary>
            Deploys the page event.
            </summary>
            <param name="pageEventItem">The page event item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Install.PostSteps.UpdateDomainsConfig">
            <summary>
            Updates the domain config file.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs">
            <summary>
            The service pipeline args.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.ServicePipelineArgs._request">
            <summary>
            The request.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.ServicePipelineArgs._result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.ServicePipelineArgs.#ctor(Sitecore.Commerce.Services.ServiceProviderRequest,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.ServicePipelineArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.ServicePipelineArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a 
            <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.ServicePipelineArgs.Request">
            <summary>
            Gets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Sitecore.Commerce.Pipelines.ServicePipelineArgs.Result">
            <summary>
            Gets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmailCondition`1">
            <summary>
            Represents the Has Email condition.
            This class is used to check whether an e-mail is available for the user being tested with the rule.
            </summary>
            <typeparam name="T">
            The workflow rule context.
            </typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmailCondition`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>True if user has email. Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1">
            <summary>
            Represents the Has Empty Cart condition.
            This class is used to check whether the cart, for the user being tested with the rule, is empty.
            </summary>
            <typeparam name="T">
            The rule context.
            </typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1._eaPlanProvider">
            <summary>
            The ea plan provider.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1._contactFactory">
            <summary>
            The contact factory.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1._cartServiceProvider">
            <summary>
            The cart service provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.Execute(`0)">
            <summary>The execute.</summary>
            <param name="ruleContext">The rule context.</param>
            <returns>
            The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.RunLegacyCondition(`0,System.String,System.String,System.String)">
            <summary>
            Runs the legacy condition.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <param name="userId">The user identifier.</param>
            <param name="eaPlanName">Name of the ea plan.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>True if the cart is empty; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.RunCondition(`0,System.String,System.String,System.String,System.String)">
            <summary>
            Runs the condition.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <param name="userId">The user identifier.</param>
            <param name="eaPlanName">Name of the ea plan.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="cartExternalId">The cart external identifier.</param>
            <returns>True if the cart is empty or missing; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.GetCart(System.String,System.String,System.String)">
            <summary>
            Gets the cart.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="userId">The user identifier.</param>
            <param name="externalId">The external identifier.</param>
            <returns>The cart if it was found; otherwise null.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.ContactFactory">
            <summary>
            Gets or sets the visitor factory.
            </summary>
            <value>The visitor factory.</value>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.EaPlanProvider">
            <summary>
            Gets or sets the ea plan provider.
            </summary>
            <value>
            The ea plan provider.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Automation.MarketingAutomation.AutomationConditions.HasEmptyCartCondition`1.CartServiceProvider">
            <summary>
            Gets or sets the cart service provider.
            </summary>
            <value>
            The cart service provider.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.GetCarts``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Gets the carts that match the specified criteria. It calls the GetCarts pipeline.
            </summary>
            <typeparam name="TGetCartsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.GetCartsRequest"/>class.</typeparam>
            <typeparam name="TGetCartsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.GetCartsResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Carts.GetCartsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Carts.GetCartsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.CreateOrResumeCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Initiate the creation of a shopping cart and in the process: 
            <list type="bullet">
            <item>
              <description>
              Tries to load persisted, potentially abandoned cart, if present
              </description>
            </item>
            <item>
              <description>
              Triggers an event in DMS 
              </description>
            </item>
            <item>
              <description>
              Enters the a user in the Engagement Automation (EA) plan with the ID of the shopping cart.
              </description>
            </item>  
            </list>
            </summary>
            <typeparam name="TCreateOrResumeCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest"/>class.</typeparam>
            <typeparam name="TCreateCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest"/>object.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.LoadCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Gets the cart with given Cart ID. Calls the LoadCart pipeline.
            This method returns the full cart object with all cart lines associated.
            </summary>
            <typeparam name="TLoadCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.LoadCartRequest"/>class.</typeparam>
            <typeparam name="TLoadCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.LoadCartRequest"/>object.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.SaveCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Saves the specified cart in the external system if supported and in EA state.
            Calls the pipeline "saveCart". Called from other service layer methods, but not called explicitly.
            </summary>
            <typeparam name="TSaveCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.SaveCartRequest"/>class.</typeparam>
            <typeparam name="TSaveCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/>object.</typeparam>
            <param name="cartProvider">The <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.Carts.SaveCartRequest"/>object.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.AddCartLines``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Adds the cart lines.
            </summary>
            <typeparam name="TAddCartLinesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.AddCartLinesRequest"/>class.</typeparam>
            <typeparam name="TAddCartLinesResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.AddCartLinesRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.RemoveCartLines``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Removes the cart lines.
            </summary>
            <typeparam name="TRemoveCartLinesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.RemoveCartLinesRequest"/>class.</typeparam>
            <typeparam name="TRemoveCartLinesResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/> class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.RemoveCartLinesRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.UpdateCartLines``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Updates the cart lines.
            </summary>
            <typeparam name="TUpdateCartLinesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest"/>class.</typeparam>
            <typeparam name="TUpdateCartLinesResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.DeleteCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Deletes a cart.
            </summary>
            <typeparam name="TDeleteCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.DeleteCartRequest"/>class.</typeparam>
            <typeparam name="TDeleteCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.DeleteCartRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.UpdateCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Updates a cart.
            </summary>
            <typeparam name="TUpdateCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.UpdateCartRequest"/>class.</typeparam>
            <typeparam name="TUpdateCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.DeleteCartRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.LockCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            The lock cart.
            </summary>
            <typeparam name="TLockCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.LockCartRequest"/>class.</typeparam>
            <typeparam name="TLockCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.LockCartRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.UnlockCart``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Unlocks the cart.
            </summary>
            <typeparam name="TUnlockCartRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.UnlockCartRequest"/>class.</typeparam>
            <typeparam name="TUnlockCartResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>class.</typeparam>
            <param name="cartProvider">A <see cref="T:Sitecore.Commerce.Services.Carts.CartServiceProvider"/>object.</param>
            <param name="request">A <see cref="T:Sitecore.Commerce.Services.Carts.UnlockCartRequest"/>object.</param>
            <returns>An extended version of the <see cref="T:Sitecore.Commerce.Services.Carts.CartResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.AddParties``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Adds the parties.
            </summary>
            <typeparam name="TAddPartiesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.AddPartiesRequest"/>class.</typeparam>
            <typeparam name="TAddPartiesResult">The type of the add parties result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>An instance of the <see cref="T:Sitecore.Commerce.Services.Carts.AddPartiesResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.RemoveParties``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Removes the parties.
            </summary>
            <typeparam name="TRemovePartiesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.RemovePartiesRequest"/>class.</typeparam>
            <typeparam name="TRemovePartiesResult">The type of the remove parties result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>
            An instance of the <see cref="T:Sitecore.Commerce.Services.Carts.RemovePartiesResult"/>object.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.UpdateParties``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Updates the parties.
            </summary>
            <typeparam name="TUpdatePartiesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.Carts.UpdatePartiesRequest"/>class.</typeparam>
            <typeparam name="TUpdatePartiesResult">The type of the update parties result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>An instance of the <see cref="T:Sitecore.Commerce.Services.Carts.UpdatePartiesResult"/>object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.AddPaymentInfo``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Adds the payment information.
            </summary>
            <typeparam name="TAddPaymentInfoRequest">The type of the add payment information request.</typeparam>
            <typeparam name="TAddPaymentInfoResult">The type of the add payment information result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>the add payment info result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.RemovePaymentInfo``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Removes the payment information.
            </summary>
            <typeparam name="TRemovePaymentInfoRequest">The type of the remove payment information request.</typeparam>
            <typeparam name="TRemovePaymentInfoResult">The type of the remove payment information result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>the remove payment info result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.AddShippingInfo``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Adds the shipping information.
            </summary>
            <typeparam name="TAddShippingInfoRequest">The type of the add shipping information request.</typeparam>
            <typeparam name="TAddShippingInfoResult">The type of the add shipping information result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>the add shipping info result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.Generics.GenericCartServiceProviderExtensions.RemoveShippingInfo``2(Sitecore.Commerce.Services.Carts.CartServiceProvider,``0)">
            <summary>
            Removes the shipping information.
            </summary>
            <typeparam name="TRemoveShippingInfoRequest">The type of the remove shipping information request.</typeparam>
            <typeparam name="TRemoveShippingInfoResult">The type of the remove shipping information result.</typeparam>
            <param name="cartProvider">The cart provider.</param>
            <param name="request">The request.</param>
            <returns>the remove shipping info result</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.LockCartRequest">
            <summary>
            Contains the cart to be locked.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.LockCartRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.LockCartRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CartStatus">
            <summary>
            Defines CartStatus class with fundamental cart statuses.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Carts.CartStatus.Abandoned">
            <summary>
            The "Abandoned" cart status.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Carts.CartStatus.InProcess">
            <summary>
            The "InProcess" cart status.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CartServiceProvider">
            <summary>
            Represents the interaction with the carts. Service providers are wrapper objects that ease the interaction with CommerceConnect pipelines.  
            Service providers only implement the logic that calls pipelines. All the business logic is implemented in the pipeline's processors. 
            Every method receives a request object and returns a result object, for example, GetCarts receives GetCartsRequest and returns GetCartsResult.  
            To follow the best practice and ease the API optimization as implemented in the domain model, every class must be defined as an abstract class rather than an interface. 
            The CartServiceProvider class implements the ServiceProvider class.
            </summary>
            <remarks>
            The Cart Provider methods call the cart pipelines to interact with the carts.
            </remarks>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.GetCarts(Sitecore.Commerce.Services.Carts.GetCartsRequest)">
            <summary>
            Gets the carts that match the specified criteria. The GetCards method calls the GetCart pipeline
            It queries the cart data in the external commerce system and gets a collection of CartBase objects that contains the summary of the main cart data. 
            For example, you can use the GetCarts method to: 
            <list type="bullet">
            <item>
              <description>
             Get the carts for a specific visitor. 
              </description>
            </item>
            <item>
             <description>
             Get one of the carts for the current visitor in a multi-cart solution. 
             </description>
            </item>
            <item>
              <description>
             Get the carts that have not been used within a particular period, such as abandoned carts. 
              </description>
            </item>
            </list>
            For more information, see the CartBase class. 
            </summary>
            <param name="request">A GetCartsRequest object that contains the search criteria.</param>
            <returns>A group of objects that represent the queried carts.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.CreateOrResumeCart(Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest)">
             <summary>
             Initiates the creation of a shopping cart and in the process, it : 
             <list type="bullet">
             <item>
               <description>
              Loads any persisted or abandoned cart. 
             </description>
             </item>
             <item>
             <description>
              Triggers events in DMS. 
             </description>
             </item>
             <item>
             <description>
              Enrolls the visitor in the Engagement Automation (EA) plan and stores the cart data in the AutomationStates object. 
             </description>
             </item>
             </list>
             </summary>
             <param name="request">A CreateOrResumeCartRequest object that contains the cart ID and the shop name.</param>
             <returns>A CartResult object that contains the created or resumed cart.</returns>
             <example>
             The following snippet is an example of using the CreateOrResumeCart method:
             <code lang="C#">
             public void CreateAndDeleteCart()
             {
             // Create prefix service provider.
             var cartServiceProvider = new CartServiceProvider();
            
             // Create sample prefix.
             var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "Bred");
             var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
             var id = cart.ExternalCartId;
            
             // Create request to remove prefix this prefix.
             var deleteCartRequest = new DeleteCartRequest(cart);
            
             // Call service provider and receive the result.
             cartServiceProvider.DeleteCart(deleteCartRequest);
             }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.LoadCart(Sitecore.Commerce.Services.Carts.LoadCartRequest)">
            <summary>
            Gets the details of a cart that is assigned to a Cart ID on a webshop. The LoadCart method calls the LoadCart pipeline and returns the full cart object with all associated cart lines. 
            </summary>
            <param name="request">A LoadCartRequest object that contains the cart ID and the shop name.</param>
            <returns>A CartResult object that contains the loaded cart.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.SaveCart(Sitecore.Commerce.Services.Carts.SaveCartRequest)">
            <summary>
            Saves a cart in the external commerce system if supported and sets it to the Sitecore Engagement Automation (EA) state. It calls the SaveCart pipeline. 
            You cannot call the SaveCart method directly. Other methods in the service layer call it when a specific cart needs to be saved. It is executed when you modify the cart, such as
            updating, adding, deleting cart lines and when you lock and unlock a cart. 
            </summary>
            <param name="request">A SaveCartRequest object contains the cart ID and the shop name.</param>
            <returns>A ServiceProviderResult object that contains a group of messages that are received from the external commerce system.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.AddCartLines(Sitecore.Commerce.Services.Carts.AddCartLinesRequest)">
             <summary>
             Adds the cart lines. 
             It is called when you add a list of cart lines. On the user interface, it is called when the visitor clicks the <b>Add to Cart</b> button. 
             The AddLinesToCart pipeline:
             <list type="bullet">
             <item>
             <description>
             Adds lines on a cart, even if the lines that already exist on the cart contain the same products of the new lines. 
             </description>
             </item>
             <item>
             <description>
             Records the corresponding page event in the Digital Marketing System (DMS).
             </description>
             </item>
             </list>
             The AddLinestoCart pipeline executes the following processors:
             <list type="bullet">
             <item>
             <description>
             CheckIfLocked
             </description>
             </item>
             <item>
             <description>
             AddLinesToCart
             </description>
             </item>
             <item>
             <description>
             RunSaveCart
             </description>
             </item>
             <item>
             <description>
             TriggerPageEventsForCartLines
             </description>
             </item>
             </list>
             </summary>
             <param name="request">An AddCartLinesRequest object that contains the cart ID, the shop name and a collection of cart lines that you want to add.</param>
             <returns>A CartResult object that contains a collection of messages that are received from the external commerce system.</returns>
             <example>
             The following snippet is an example of using the AddCartLines method:
             <code lang="C#">
              public void CreateCartAndAddOneCartLineWithSublines()
              {
              // Create instance of CartServiceProvider
              var cartServiceProvider = new CartServiceProvider();
            
              // Create prefix instance      
              var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "Ivan");
              var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
            
              // Create prefix line with subline
              var cartLines = new ReadOnlyCollection&lt;CartLine&gt;(new Collection&lt;CartLine&gt; { new CartLine { Product = new CartProduct { ProductId = "Audi", Price = new Price(10000, "USD") }, Quantity = 1, SubLines = new Collection&lt;CartLine&gt; { new CartLine { Product = new CartProduct { ProductId = "Winter Tyres", Price = new Price(100, "USD") }, Quantity = 4 }, new CartLine { Product = new CartProduct { ProductId = "Summer Tyres", Price = new Price(80, "USD") }, Quantity = 4 } } } });
               
              // Create request with prefix and prefix lines
              var request = new AddCartLinesRequest(cart, cartLines);
            
              // Add prefix lines into prefix
              var result = cartServiceProvider.AddCartLines(request);
              var resultCart = result.Cart;
            
              Tracker.Submit();
              }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.RemoveCartLines(Sitecore.Commerce.Services.Carts.RemoveCartLinesRequest)">
             <summary>
             Removes cart lines from a cart. 
             It is called when you remove one or more cart lines from the shopping cart. On the user interface, it is called when the user updates the cart to remove one or more lines. 
             </summary>
             <param name="request">A RemoveCartLinesRequest that contains the cart ID, the shop name and a collection of cart lines to be removed.</param>
             <returns>A CartResult object that contains the updated cart in the external commerce system.</returns>
             <example>
             <code lang="C#">
             public void RemoveCartLinesTest()
             {
                // Create prefix service provider.
                var cartServiceProvider = new CartServiceProvider();
            
                // Create prefix with "Audi Q10", "BMW X7" and "Citroen C3"
                var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "John");
                var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
                var cartLine1 = new CartLine { Quantity = 1, Product = new CartProduct { ProductId = "Audi Q10", Price = new Price(55, "USD") } };
                var cartLine2 = new CartLine { Quantity = 2, Product = new CartProduct { ProductId = "BMW X7", Price = new Price(10, "USD") } };
                var cartLine3 = new CartLine { Quantity = 1, Product = new CartProduct { ProductId = "Citroen C3", Price = new Price(25, "USD") } };
                var cartLines = new Collection&lt;CartLine&gt; { cartLine1, cartLine2, cartLine3 };
                var addCartLinesRequest = new AddCartLinesRequest(cart, cartLines);
                cart = cartServiceProvider.AddCartLines(addCartLinesRequest).Cart;
            
                // Create request to remove prefix line "BMW X7".      
                var request = new RemoveCartLinesRequest(cart, cart.CartLines.Where(l => l.Product.ProductId == "BMW X7").ToArray());
            
                // Call service provider and receive the result.
                var result = cartServiceProvider.RemoveCartLines(request);
             }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.UpdateCartLines(Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest)">
            <summary>
            Updates the cart lines. 
            It is called when you update the lines in a shopping cart. On the user interface, it is called when the user updates the cart of a specific product.  
            This typically happens when a user:  
            <list type="bullet">
             <item>
              <description>
              Changes the quantity.  
              </description>
             </item>
             <item>
              <description>
              Adds a service, such as, insurance or shipping. 
              </description>
             </item>
             <item>
              <description>
              Enters a promotion code for a given product. 
              </description>
             </item>
             <item>
              <description>
              Replaces the product with another variant. 
              </description>
             </item>
            </list>
            </summary>
            <param name="request">An UpdateCartLinesRequest object that contains the cart ID, the shop name and a group of cart lines that you want to update on the cart.</param>
            <returns>A group of objects that represent the updated cart lines.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.DeleteCart(Sitecore.Commerce.Services.Carts.DeleteCartRequest)">
             <summary>
             Deletes a cart permanently and triggers an event in DMS to inform that the cart is deleted. 
             On the user interface, it is called: 
             <list type="bullet">
             <item>
               <description>
               When the user has gone through the scenario of paying, an order has been created and registered. 
               </description>
             </item>
             <item>
               <description>
               After a cart has been in the abandoned state for a particular period. 
               </description>
             </item>  
             </list>
             </summary>
             <param name="request">A DeleteCartRequest object that contains the cart ID and the shop name.</param>
             <returns>A group of objects that represent the messages that are received from the external commerce system.</returns>
             <example>
             The following snippet is an example of using the DeleteCart method:
             <code lang="C#">
             public void CreateAndDeleteCart()
             {
             // Create prefix service provider.
             var cartServiceProvider = new CartServiceProvider();
            
             // Create sample prefix.
             var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "Bred");
             var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
             var id = cart.ExternalCartId;
            
             // Create request to remove prefix this prefix.
             var deleteCartRequest = new DeleteCartRequest(cart);
            
             // Call service provider and receive the result.
             cartServiceProvider.DeleteCart(deleteCartRequest);
             }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.UpdateCart(Sitecore.Commerce.Services.Carts.UpdateCartRequest)">
             <summary>
             Passes an updated cart to the external commerce system.  
             It triggers an event in DMS to inform that the cart is being updated. 
             The method is executed after any operation that modifies the cart, typically when an adjustment is made to a cart.
             </summary>
             <param name="request">An UpdateCartRequest object that contains the cart ID and the shop name.</param>
             <returns>A CartResult object that represents updated cart.</returns>
             <example>
             The following snippet is an example of using the UpdateCart method:
             <code lang="C#">
             public void UpdateCartBody()
             {
              // Create prefix service provider.
              var cartServiceProvider = new CartServiceProvider();
            
              // Create prefix.
              var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "Peter");
              var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
            
              // Create the instance of the CartBase with properties that should be changed in existing prefix. 
              var changes = new CartBase { CustomerId = "Customer Peter", CartName = "Peter's Cart", ShopName = "Autohaus" };
            
              // Create request to update the prefix.
              var updateCartRequest = new UpdateCartRequest(cart, changes);
            
              // Call service provider with prepared request and receive the result.
              var result = cartServiceProvider.UpdateCart(updateCartRequest);  
             }
             </code>
             </example> 
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.LockCart(Sitecore.Commerce.Services.Carts.LockCartRequest)">
             <summary>
             Sets the cart to the locked state where it is ready to be committed to an order. Before any optional payment transaction is performed, this method:  
             <list type="bullet">
               <item>
                 <description>
             	Sets the cart to locked and save it. 
                 </description>
               </item>
               <item>
                 <description>
             	Triggers an event in DMS to inform that the cart is in the locked state. 
                 </description>  
             </item>
             </list>
             When a cart is in the locked state, it indicates that you cannot use other service layer methods to modify the shopping cart content. 
             you can lock the cart to prevent further changes in the cart before submitting the order.
             For example, the LockCart method is called during the checkout process, just before any payment transaction is executed and before turning the cart into an order.
             On the user interface, it is triggered when a user in the checkout flow has confirmed the cart's content. 
             There is a corresponding UnlockCart method. 
             </summary>
             <param name="request">A LockCartRequest object that contains the cart ID and the shop name.</param>
             <returns>A CartResult object that represents the locked cart.</returns>
             <example>
             The following snippet is an example of using the LockCart method:
             <code lang="C#">
             public void LockCartTest()
             {
               // Create prefix service provider.
               var cartServiceProvider = new CartServiceProvider();
             
               // Create a sample prefix.
               var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "Jho");
               var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
            
               // Create request to lock this prefix.
               var lockCartRequest = new LockCartRequest(cart);
            
               // Call service provider and receive the result.
               var result = cartServiceProvider.LockCart(lockCartRequest);
             }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.UnlockCart(Sitecore.Commerce.Services.Carts.UnlockCartRequest)">
             <summary>
             Sets the cart in the unlocked state, saves it, and triggers an event in DMS to inform that the cart is in the unlocked state. 
             If a cart is in the unlocked state, it is editable. 
             It is typically called if user returns to the cart and decides to modify the content after starting the checkout process and payment transaction.
             There is a corresponding LockCart method.
             </summary>
             <param name="request">A UnlockCartRequest object that contains the cart ID and the shop name.</param>
             <returns>A CartResult object that represents the unlocked cart.</returns>
             <example>
             The following snippet is an example of using the UnlockCart method: 
             <code lang="C#">
             public void UnlockCartTest()
             {
             // Create prefix service provider.
             var cartServiceProvider = new CartServiceProvider();
             // Create prefix and lock it.
             var createCartRequest = new CreateOrResumeCartRequest("Autohaus", "Mark");
             var cart = cartServiceProvider.CreateOrResumeCart(createCartRequest).Cart;
             var lockCartRequest = new LockCartRequest(cart);
             cart = cartServiceProvider.LockCart(lockCartRequest).Cart;
            
             // Create request to unlock this prefix.
             var unlockCartRequest = new UnlockCartRequest(cart);
            
             // Call service provider and receive the result.
             var result = cartServiceProvider.UnlockCart(unlockCartRequest);
             }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.MergeCart(Sitecore.Commerce.Services.Carts.MergeCartRequest)">
            <summary>
            Merges the carts.
            Called to merge an anonymous cart to a user cart.
            </summary>
            <param name="request">The request.</param>
            <returns>the merge cart result</returns>
            <example>
            <code lang="C#">
            public void MergeCartTest()
            {
                var cartServiceProvider = new CartServiceProvider();
                var toCart = this.GetCart(this.UserId);
                var fromCart = this.GetCart(this.VisitorId);
                var mergeCartRequest = new MergeCartRequest(fromCart, toCart);
                return cartServiceProvider.MergeCart(mergeCartsRequest);
            }
            </code>
            </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.AddParties(Sitecore.Commerce.Services.Carts.AddPartiesRequest)">
            <summary>
            Adds the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>the add parties result</returns>
            <example>
            <code lang="C#">
            public void AddPartiesTest()
            {
                var service = new CartServiceProvider();
                var cart = service.LoadCart(new LoadCartRequest(shopName, cartId)).Cart;
                
                Party party = new Party() { ExternalId = externalId, FirstName = firstName, LastName = lastName, Address1 = address1, City = city, State = state, Country = country };
                
                var request = new AddPartiesRequest(cart, new List&lt;Party&gt; { party });
                service.AddParties(request);
            }
            </code>
            </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.RemoveParties(Sitecore.Commerce.Services.Carts.RemovePartiesRequest)">
            <summary>
            Removes the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>the remove parties result</returns>
            <example>
            <code lang="C#">
            public void RemovePartiesTest()
            {
                var service = new CartServiceProvider();
                var cart = service.LoadCart(new LoadCartRequest(shopName, cartId)).Cart;
                
                Party party = new Party() { ExternalId = externalId };
                
                var request = new RemovePartiesRequest(cart, new List&lt;Party&gt; { party });
                service.RemoveParties(request);
            }
            </code>
            </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.UpdateParties(Sitecore.Commerce.Services.Carts.UpdatePartiesRequest)">
            <summary>
            Updates the parties.
            </summary>
            <param name="request">The request.</param>
            <returns>the update parties result</returns>
            <example>
            <code lang="C#">
            public void UpdatePartiesTest()
            {
                var service = new CartServiceProvider();
                var cart = service.LoadCart(new LoadCartRequest(shopName, cartId)).Cart;
                
                Party party = new Party() { ExternalId = externalId, FirstName = "changed firstname", LastName = lastName, Address1 = address1, City = city, State = state, Country = country };
                
                var request = new UpdatePartiesRequest(cart, new List&lt;Party&gt; { party });
                service.UpdateParties(request);
            }
            </code>
            </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.AddPaymentInfo(Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest)">
            <summary>
            Adds the payment information.
            </summary>
            <param name="request">The request.</param>
            <returns>A AddPaymentInfoResult object instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.RemovePaymentInfo(Sitecore.Commerce.Services.Carts.RemovePaymentInfoRequest)">
            <summary>
            Removes the payment information.
            </summary>
            <param name="request">The request.</param>
            <returns>A RemovePaymentInfoResult object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.AddShippingInfo(Sitecore.Commerce.Services.Carts.AddShippingInfoRequest)">
            <summary>
            Adds the shipping information.
            </summary>
            <param name="request">The request.</param>
            <returns>A AddShippingInfoResult object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CartServiceProvider.RemoveShippingInfo(Sitecore.Commerce.Services.Carts.RemoveShippingInfoRequest)">
            <summary>
            Removes the shipping information.
            </summary>
            <param name="request">The request.</param>
            <returns>A RemoveShippingInfoResult object.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.GetCartsRequest">
            <summary>
            Defines the request to the Product Synchronization Provider that can contain some search parameters.
            In this request, the shop name is required. The lists of user IDs, customer identifiers, cart names and cart statuses are optional.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.GetCartsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.GetCartsRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.ShopName">
            <summary>
            Gets or sets the name of the shop to get carts from.
            </summary>
            <value>
            The name of the shop
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.UserIds">
            <summary>
            Gets or sets the user IDs.
            </summary>
            <value>The user IDs</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.CustomerIds">
            <summary>
            Gets or sets the customer IDs.
            </summary>
            <value>The customer IDs</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.Names">
            <summary>
            Gets or sets the cart names.
            </summary>
            <value>The cart names</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.Statuses">
            <summary>
            Gets or sets the cart statuses.
            </summary>
            <value>The cart statuses</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.IsLocked">
            <summary>
            Gets or sets a value indicating whether this instance is locked.
            </summary>
            <value>
            <c>true</c> if this instance is locked
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsRequest.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.GetCartsResult">
            <summary>
            The get carts result.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.GetCartsResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.GetCartsResult"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.GetCartsResult.Carts">
            <summary>
            Gets or sets the carts.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest">
            <summary>
            Contains the criteria that determine which cart should be created.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="userId">The user id.</param>
            <param name="cartName">Name of the cart.</param>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>The name of the shop.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest.Name">
            <summary>
            Gets or sets the cart name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.CreateOrResumeCartRequest.CustomerId">
            <summary>
            Gets or sets the customer id.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.LoadCartRequest">
            <summary>
            Contains the criteria that determine which cart should be retrieved.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.LoadCartRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.LoadCartRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="cartId">The cart id.</param>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.LoadCartRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>The name of the shop.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.LoadCartRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.LoadCartRequest.CartId">
            <summary>
            Gets or sets the cart id.
            </summary>
            <value>The cart id.</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Carts.UpdateCartRequest">
            <summary>
            Contains the cart and the data to be updated in <see cref="T:Sitecore.Commerce.Entities.Carts.CartBase"/>.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Carts.UpdateCartRequest.changes">
            <summary>
            The changes.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Carts.UpdateCartRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.CartBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Carts.UpdateCartRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="changes">The changes.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Carts.UpdateCartRequest.Changes">
            <summary>
            Gets or sets the changes.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest">
            <summary>
            The request parameters required to retrieve updated stock information for products from an external commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for stock information.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest.ShopName">
            <summary>
            Gets or sets the name of the shop that will be examined for stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest.Products">
            <summary>
            Gets or sets the products whose stock information is requested.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult">
            <summary>
            The result returned by a request to retrieve back-in-stock information for a product.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult.StockInformationUpdates">
            <summary>
            Gets or sets the IDs of the products whose stock information is Resulted.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationRequest">
            <summary>
            The request parameters required to retrieve back-orderable information for a product.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase">
            <summary>
            Base request parameters required to retrieve orderable information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for orderable information.</param>
            <param name="products">The products whose orderable information is requested.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase.ShopName">
            <summary>
            Gets or sets the name of the shop that will be examined for orderable information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase.Products">
            <summary>
            Gets or sets the products whose orderable information is requested.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase.VisitorId">
            <summary>
            Gets or sets the ID of the visitor or customer requesting orderable information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.OrderableInformationRequestBase.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for back-orderable information.</param>
            <param name="products">The products whose back-orderable information is requested.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationResult">
            <summary>
            The result returned by a request to retrieve back-orderable information for a product.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.OrderableInformationResultBase">
            <summary>
            The result returned by a request to retrieve orderable information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.OrderableInformationResultBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.OrderableInformationResultBase"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.OrderableInformationResultBase.OrderableInformation">
            <summary>
            Gets or sets the orderable information for the requested products.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationRequest">
            <summary>
            The request parameters required to retrieve pre-orderable information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for pre-orderable information.</param>
            <param name="products">The products whose pre-orderable information is requested.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationResult">
            <summary>
            The result returned by a request to retrieve pre-orderable information for a product.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest">
            <summary>
            The request parameters required for to retrieve stock information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for stock information.</param>
            <param name="products">The products whose stock information is requested.</param>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct},Sitecore.Commerce.Entities.Inventory.StockDetailsLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop that will be examined for stock information.</param>
            <param name="products">The products whose stock information is requested.</param>
            <param name="detailsLevel">The level of stock details that are requested.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.ShopName">
            <summary>
            Gets or sets the name of the shop that will be examined for stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.Products">
            <summary>
            Gets or sets the products whose stock information is requested..
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.DetailsLevel">
            <summary>
            Gets or sets the level of stock details that are requested.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockInformationRequest.VisitorId">
            <summary>
            Gets or sets the ID of the customer requesting stock information, in case the stock information is dependent on the actual customer.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.GetStockInformationResult">
            <summary>
            The response returned by a request to retrieve stock information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.GetStockInformationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationResult"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.GetStockInformationResult.StockInformation">
            <summary>
            Gets or sets the stock information for the requested products.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider">
            <summary>
            Represents the interaction with the inventory service.
            Service providers are wrapper objects that ease the interaction with the implementation pipelines. The providers only implement the calling pipelines. 
            All the business logic is implemented in the pipeline processors.
            The InventoryServiceProvider class implements the ServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.GetStockInformation(Sitecore.Commerce.Services.Inventory.GetStockInformationRequest)">
            <summary>
            Retrieves stock information for products.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.GetPreOrderableInformation(Sitecore.Commerce.Services.Inventory.GetPreOrderableInformationRequest)">
            <summary>
            Retrieves pre-orderable information for products.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.GetBackOrderableInformation(Sitecore.Commerce.Services.Inventory.GetBackOrderableInformationRequest)">
            <summary>
            Retrieves back-rderable information for products.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.VisitedProductStockStatus(Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest)">
            <summary>
            Track product stock status for customers visiting product details pages
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.ProductsAreBackInStock(Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest)">
            <summary>
            Updates a product stock count
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.VisitorSignUpForStockNotification(Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest)">
            <summary>
            Adds a visitor to EA plan so they can be notified when the product gets back in stock
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.RemoveVisitorFromStockNotification(Sitecore.Commerce.Services.Inventory.RemoveVisitorFromStockNotificationRequest)">
            <summary>
            Adds a visitor to EA plan so they can be notified when the product gets back in stock
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.GetBackInStockInformation(Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest)">
            <summary>
            Retrieves updated stock information for products from an external commerce system.
            </summary>
            <param name="request">the get stock information request</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.GetStockLocations(Sitecore.Commerce.Services.Inventory.GetStockLocationsRequest)">
            <summary>
            Retrieves stock locations for a product.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.InventoryServiceProvider.GetProductStockLocations(Sitecore.Commerce.Services.Inventory.GetProductStockLocationsRequest)">
            <summary>
            Retrieves stock locations for a product.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockResult">
            <summary>
            The result returned by a request to ProductAreBackInStock service method.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest">
            <summary>
            The request parameters required for to call ProductAreBackInStock service method.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop</param>
            <param name="products">The list of product s.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.ProductsAreBackInStockRequest.Products">
            <summary>
            Gets or sets the list of products.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest">
            <summary>
            The request parameters required for to retrieve stock information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> class.
            </summary>
            <param name="products">The products whose stock information is requested.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest.Products">
            <summary>
            Gets or sets the IDs of the products whose stock information is requested..
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingResult">
            <summary>
            The response returned by a request to retrieve stock information for a product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingResult"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingResult.IndexStockInformation">
            <summary>
            Gets or sets the stock information for the requested products.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest">
            <summary>
            The request parameters required for to trigger visitedn product stock status page event.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest.#ctor(System.String,Sitecore.Commerce.Entities.Inventory.StockInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop</param>
            <param name="stockInformation">The product orderable inforamtion.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest.StockInformation">
            <summary>
            Gets or sets the orderable information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusRequest.Location">
            <summary>
            Gets or sets the ID of the visitor.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.VisitedProductStockStatusResult">
            <summary>
            The result returned by a request to VisitedProductStockStatus service method.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest">
            <summary>
            The request parameters required to add visitor to EA plan back in stock notification and trigger back in stock subscription page event.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.#ctor(System.String,System.String,System.String,Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest"/> class.
            </summary>
            <param name="shopName">The name of the shop</param>
            <param name="visitorId">The visitor id.</param>
            <param name="email">The visitor email.</param>
            <param name="product">The product.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.ShopName">
            <summary>
            Gets or sets the name of the shop that will be examined for stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.VisitorId">
            <summary>
            Gets or sets the ID of the customer signing up for back in stock notifications.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.Email">
            <summary>
            Gets or sets the email of the customer signing up for back in stock notifications.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.Product">
            <summary>
            Gets or sets the product whose the visitor is requesting back in stock notification.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationRequest.InterestDate">
            <summary>
            Gets or sets the a date and time that signals the deadline for which to notify the visitor
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Inventory.VisitorSignUpForStockNotificationResult">
            <summary>
            The result returned by a request to VisitorSignUpForStockNotification service method.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.Generics.GenericOrderServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Services.Orders.OrderServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.Generics.GenericOrderServiceProviderExtensions.SubmitVisitorOrder``2(Sitecore.Commerce.Services.Orders.OrderServiceProvider,``0)">
            <summary>
            Submits the visitor order.
            </summary>
            <typeparam name="TSubmitVisitorOrderRequest">The type of the submit visitor order request.</typeparam>
            <typeparam name="TSubmitVisitorOrderResult">The type of the submit visitor order result.</typeparam>
            <param name="orderProvider">The order provider.</param>
            <param name="request">The request.</param>
            <returns>A TSubmitVisitorOrderResult.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.Generics.GenericOrderServiceProviderExtensions.GetVisitorOrder``2(Sitecore.Commerce.Services.Orders.OrderServiceProvider,``0)">
            <summary>
            Gets the visitor order.
            </summary>
            <typeparam name="TGetVisitorOrderRequest">The type of the get visitor order request.</typeparam>
            <typeparam name="TGetVisitorOrderResult">The type of the get visitor order result.</typeparam>
            <param name="orderProvider">The order provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetVisitorOrderResult</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.Generics.GenericOrderServiceProviderExtensions.GetVisitorOrders``2(Sitecore.Commerce.Services.Orders.OrderServiceProvider,``0)">
            <summary>
            Gets the visitor orders.
            </summary>
            <typeparam name="TGetVisitorOrdersRequest">The type of the get visitor orders request.</typeparam>
            <typeparam name="TGetVisitorOrdersResult">The type of the get visitor orders result.</typeparam>
            <param name="orderProvider">The order provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetVisitorOrdersResult</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.Generics.GenericOrderServiceProviderExtensions.VisitorCancelOrder``2(Sitecore.Commerce.Services.Orders.OrderServiceProvider,``0)">
            <summary>
            Visitor cancels an order.
            </summary>
            <typeparam name="TVisitorCancelOrderRequest">The type of the visitor cancel order request.</typeparam>
            <typeparam name="TVisitorCancelOrderResult">The type of the visitor cancel order result.</typeparam>
            <param name="orderProvider">The order provider.</param>
            <param name="request">The request.</param>
            <returns>A TVisitorCancelOrderResult</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.Generics.GenericOrderServiceProviderExtensions.OrderStatusChanged``2(Sitecore.Commerce.Services.Orders.OrderServiceProvider,``0)">
            <summary>
            Order status changes.
            </summary>
            <typeparam name="TOrderStatusChangedRequest">The type of the order status changed request.</typeparam>
            <typeparam name="TOrderStatusChangedResult">The type of the order status changed result.</typeparam>
            <param name="orderProvider">The order provider.</param>
            <param name="request">The request.</param>
            <returns>A TOrderStatusChangedResult</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.OrderServiceProvider">
            <summary>
            Represents the interaction with the orders. Service providers are wrapper objects that ease the interaction with Commerce Connect pipelines.  
            Service providers only implement the logic that calls pipelines. All the business logic is implemented in the pipeline's processors. 
            Every method receives a request object and returns a result object, for example, SubmitVisitorOrder receives SubmitVisitorOrderRequest and returns SubmitVisitorOrderResult.  
            To follow the best practice and ease the API optimization as implemented in the domain model, every class must be defined as an abstract class rather than an interface. 
            The OrderServiceProvider class implements the ServiceProvider class.
            </summary>
            <remarks>
            The Order Provider methods call the order pipelines to interact with the carts.
            </remarks>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.SubmitVisitorOrder(Sitecore.Commerce.Services.Orders.SubmitVisitorOrderRequest)">
            <summary>
            Submits the visitor order.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of the SubmitVisitorOrderResult class.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.GetVisitorOrder(Sitecore.Commerce.Services.Orders.GetVisitorOrderRequest)">
            <summary>
            Gets the visitor order.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of the GetVisitorOrderResult class.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.GetVisitorOrders(Sitecore.Commerce.Services.Orders.GetVisitorOrdersRequest)">
            <summary>
            Gets the visitor orders.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of the GetVisitorOrdersResult class.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.VisitorCancelOrder(Sitecore.Commerce.Services.Orders.VisitorCancelOrderRequest)">
            <summary>
            Visitor cancels and order.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of the VisitorOrderCancelResult class.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.GetAvailableCountries(Sitecore.Commerce.Services.Orders.GetAvailableCountriesRequest)">
            <summary>
            Get available countries.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of the GetAvailableCountriesResult.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.GetAvailableRegions(Sitecore.Commerce.Services.Orders.GetAvailableRegionsRequest)">
            <summary>
            Get available regions.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of the GetAvailableRegionsResult.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.OrderServiceProvider.OrderStatusChanged(Sitecore.Commerce.Services.Orders.OrderStatusChangedRequest)">
            <summary>
            Order Status Changed.
            </summary>
            <param name="request">The request.</param>
            <returns>An instance of OrderStatusChangedResult.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderRequest">
            <summary>
            Defines the SubmitVisitorOrderRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderRequest.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderRequest.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult">
            <summary>
            Defines the SubmitVisitorOrderResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Orders.SubmitVisitorOrderResult.CartWithErrors">
            <summary>
            Gets or sets the cart that caused for the submit operation to fail.  Additional information can be found in the cart.
            </summary>
            <value>
            The cart with errors.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.Generics.GenericPricingServiceProviderExtensions">
            <summary>
            Defines a set of extensions for the <see cref="T:Sitecore.Commerce.Services.Prices.PricingServiceProvider"/> class.
            The GenericPricingServiceProviderExtensions contains the same methods as in the <see cref="T:Sitecore.Commerce.Services.Prices.PricingServiceProvider"/> class. <br/><br/>
            The methods of this class:
            <list type="bullet">
            <item>
            <description>
            Are generic
            </description>
            </item>
            <item>
            <description>
            Accept a custom request that is inherited from the default request
            </description>
            </item>
            <item>
            <description>
            Return a custom result that is inherited from the default result
            </description>
            </item>
            <item>
            <description>
            Implement the default constructor
            </description>
            </item>
            </list>
            To use custom request or result:
            <list type="number">
            <item> 
            <description>
            Define custom request and result:
            <code lang="c#">
            private class MyGetCartTotalRequest : GetCartTotalRequest
            {
            }  
            private class MyGetCartTotalResult : GetCartTotalResult
            {
              public string Note { get; set; }
            }
            </code>
            </description>
            </item>
            <item>
            <description>
            Create the custom processor that sets the Note property.
            </description>
            </item>
            <item>
            <description>
            Call the generic method:
            <code lang="c#">
            MyGetCartTotalResult result = new PricingServiceProvider().GetCartTotal&lt;MyGetCartTotalRequest, MyGetCartTotalResult&gt;(new MyGetCartTotalRequest());
            </code>
            </description>
            </item>
            <item>
            <description>
            The result contains the Note property that is set with a value.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.Generics.GenericPricingServiceProviderExtensions.GetProductPrices``2(Sitecore.Commerce.Services.Prices.PricingServiceProvider,``0)">
            <summary>
            Gets the product prices.
            </summary>
            <typeparam name="TGetProductPricesRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductPricesRequest"/></typeparam>
            <typeparam name="TGetProductPricesResult">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductPricesResult"/></typeparam>
            <param name="pricingServiceProvider">The pricing service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Prices.GetProductPricesResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.Generics.GenericPricingServiceProviderExtensions.GetProductBulkPrices``2(Sitecore.Commerce.Services.Prices.PricingServiceProvider,``0)">
            <summary>
            Gets the product bulk prices.
            </summary>
            <typeparam name="TGetProductBulkPricesRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest"/></typeparam>
            <typeparam name="TGetProductBulkPricesResult">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesResult"/></typeparam>
            <param name="pricingServiceProvider">The pricing service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.Generics.GenericPricingServiceProviderExtensions.GetCartTotal``2(Sitecore.Commerce.Services.Prices.PricingServiceProvider,``0)">
            <summary>
            Gets the cart total.
            </summary>
            <typeparam name="TGetCartTotalRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetCartTotalRequest"/></typeparam>
            <typeparam name="TGetCartTotalResult">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetCartTotalResult"/></typeparam>
            <param name="pricingServiceProvider">The pricing service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Prices.GetCartTotalResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.Generics.GenericPricingServiceProviderExtensions.GetSupportedCurrencies``2(Sitecore.Commerce.Services.Prices.PricingServiceProvider,``0)">
            <summary>
            Gets the supported currencies.
            </summary>
            <typeparam name="TGetSupportedCurrenciesRequest">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesRequest"/></typeparam>
            <typeparam name="TGetSupportedCurrenciesResult">The type of the <see cref="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesResult"/></typeparam>
            <param name="pricingServiceProvider">The pricing service provider</param>
            <param name="request">The request</param>
            <returns>
            An object of type <see cref="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesResult"/> 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.Generics.GenericPricingServiceProviderExtensions.CurrencyChosen``2(Sitecore.Commerce.Services.Prices.PricingServiceProvider,``0)">
            <summary>
            Currencies the chosen.
            </summary>
            <typeparam name="TCurrencyChosenRequest">The type of the currency chosen request.</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result.</typeparam>
            <param name="pricingServiceProvider">The pricing service provider.</param>
            <param name="request">The request.</param>
            <returns>An object of type <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetCartTotalRequest">
            <summary>
            The get cart total request.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalRequest.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalRequest.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalRequest.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>
            The currency code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalRequest.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalRequest.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetCartTotalResult">
            <summary>
            The get cart total result.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetCartTotalResult.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest">
            <summary>
            Defines the request which allows to request prices for a set of product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest"/> class.
            </summary>
            <param name="productIds">The product ids.</param>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest"/> class.
            </summary>
            <param name="productIds">The product ids.</param>
            <param name="priceType">Type of the price.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest.ProductIds">
            <summary>
            Gets or sets the product ids.
            </summary>
            <value>The product ids.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest.PriceType">
            <summary>
            Gets or sets the type of the price.
            </summary>
            <value>The type of the price.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>The currency code.</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetProductBulkPricesResult">
            <summary>
            Defines the result object for product bulk price getting operation.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Prices.GetProductBulkPricesResult.prices">
            <summary>
            The prices.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductBulkPricesResult.Prices">
            <summary>
            Gets the P.
            </summary>
            <value>
            The P.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetProductPricesRequest">
            <summary>
            The get product prices request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Prices.GetProductPricesRequest"/> class.
            </summary>
            <param name="productId">The product id.</param>
            <param name="priceTypeIds">The price type ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>
            The product id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.PriceTypeIds">
            <summary>
            Gets or sets the price type ids.
            </summary>
            <value>The price type ids.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
            <value>The currency code.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>The date time.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.Quantity">
            <summary>
            Gets or sets the quantity.
            </summary>
            <value>The quantity.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>The name of the shop.</value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesRequest.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.GetProductPricesResult">
            <summary>
            Defines the result object for the Get-Product-Price operation.
            This class inherits from the <see cref="T:Sitecore.Commerce.Services.ServiceProviderResult"/> class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Prices.GetProductPricesResult.prices">
            <summary>
            The prices.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Prices.GetProductPricesResult.Prices">
            <summary>
            Gets the prices.
            </summary>
            <value>
            The prices.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions">
            <summary>
            Defines a set of extensions for the <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class.
            The GenericProductSynchronizationProviderExtensions contains the same methods as in the <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider"/> class.<br/><br/>
            The methods of this class:
            <list type="bullet">
            <item>
            <description>
            Are Generic
            </description>
            </item>
            <item>
            <description>
            Accept a custom request that is inherited from the default request
            </description>
            </item>
            <item>
            <description>
            Return a custom result that is inherited from the default result
            </description>
            </item>
            <item>
            <description>
            Implement the default constructor
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProducts``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the products.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeArtifacts``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the artifacts.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeManufacturers``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the manufacturers.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeClassifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the classifications.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeDivisions``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the divisions.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeTypes``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the types.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeResources``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the resources.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the specifications.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeGlobalSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the global specifications.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeClassificationSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the classification specifications.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeTypeSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the type specifications.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeTypeDefaultValues``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the type default values.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductList``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product list.
            </summary>
            <typeparam name="TSynchronizeProductListRequest">The type of the synchronize product list request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns> Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.GetExternalCommerceSystemProductList``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Gets the product list of the external commerce system .
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.GetSitecoreProductList``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Gets Sitecore product list.
            </summary>
            <typeparam name="TSynchronizationRequest">The type of the synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProduct``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductEntity``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product item.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductManufacturers``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product manufacturers.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductClassifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product classifications.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductDivisions``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product divisions.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductTypes``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product types.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductResources``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product resources.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductRelations``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product relations.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product specifications.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductGlobalSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product global specifications.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductClassificationsSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product classifications specifications.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.Generics.GenericProductSynchronizationProviderExtensions.SynchronizeProductTypeSpecifications``2(Sitecore.Commerce.Services.Products.ProductSynchronizationProvider,``0)">
            <summary>
            Synchronizes the product type specifications.
            </summary>
            <typeparam name="TProductSynchronizationRequest">The type of the product synchronization request</typeparam>
            <typeparam name="TServiceProviderResult">The type of the service provider result</typeparam>
            <param name="productSynchronizationProvider">The product synchronization provider</param>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.GetExternalCommerceSystemProductListRequest">
            <summary>
            Defines the request used to get product list from external commerce system.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizationRequest">
            <summary>
            Defines the base class for all types of requests to the Product Synchronization Provider.
            These requests manipulate all types of artifacts.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.SynchronizationRequest.language">
            <summary>
            The language to synchronize the artifact in.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationRequest.Language">
            <summary>
            Gets or sets the language to synchronize the artifact in.
            The default language is English.
            </summary>
            <value>
            The language
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationRequest.UpdateIn">
            <summary>
            Gets or sets where the artifact must be updated:
            In external commerce system, in Sitecore or nowhere.
            </summary>
            <value>
            The location
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationRequest.Direction">
            <summary>
            Gets or sets the direction of the artifact synchronization:
            From the external commerce system to Sitecore, in opposite direction or both ways.
            </summary>
            <value>
            The direction
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.GetSitecoreProductListRequest">
            <summary>
            Defines the request used to get sitecore product list.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.ProductSynchronizationRequest">
            <summary>
            The product id synchronization request.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.ProductSynchronizationRequest.moveToBucket">
            <summary>
            The move to bucket.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.ProductSynchronizationRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.ProductSynchronizationRequest.ProductId">
            <summary>
              Gets or sets the external id.
            </summary>
            <value>
              The external id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.ProductSynchronizationRequest.MoveToBucket">
            <summary>
            Gets or sets a value indicating whether [move to bucket].
            </summary>
            <value>
              <c>true</c> if [move to bucket]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider">
            <summary>
            Defines the provider that is used to perform any product or artifact synchronization activity
            between Sitecore CMS and the external commerce system.
            It runs the corresponding pipelines that delegate the task to the processors.
            The ProductSynchronizationProvider class inherits from the <see cref="T:Sitecore.Commerce.Services.ServiceProvider"/> class.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProducts(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the products.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeArtifacts(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the artifacts.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeManufacturers(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the manufacturers.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeClassifications(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the classification.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeDivisions(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the divisions.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeTypes(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the types.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeResources(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the resources.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeSpecifications(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the specifications.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeGlobalSpecifications(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the global specifications.                                                   
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeClassificationSpecifications(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the classifications specifications.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeTypeSpecifications(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the type specifications.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeTypeDefaultValues(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Synchronizes the type default values.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductList(Sitecore.Commerce.Services.Products.SynchronizeProductListRequest)">
            <summary>
            Synchronizes the product list.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.GetExternalCommerceSystemProductList(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Gets the external commerce system product list.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.GetSitecoreProductList(Sitecore.Commerce.Services.Products.SynchronizationRequest)">
            <summary>
            Gets the product list from Sitecore CMS.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProduct(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductEntity(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product item.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductManufacturers(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product manufacturers.
            </summary>
            <param name="request">The request</param>
            <returns>Synchronize product manufacturers result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductClassifications(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the classification.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductDivisions(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product divisions.
            </summary>
            <param name="request">The request</param>
            <returns>Synchronize product divisions result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductTypes(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product types.
            </summary>
            <param name="request">The request</param>
            <returns>Synchronize product types result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductResources(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product resources.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductRelations(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product relations.
            </summary>
            <param name="request">The request</param>
            <returns>Service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductSpecifications(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product global specifications.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductGlobalSpecifications(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product global specifications.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductClassificationsSpecifications(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product classifications specifications.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.SynchronizeProductTypeSpecifications(Sitecore.Commerce.Services.Products.ProductSynchronizationRequest)">
            <summary>
            Synchronizes the product type specifications.
            </summary>
            <param name="request">The request</param>
            <returns>The service provider result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.RunPipeline``2(System.String,``0)">
            <summary>
            Runs the pipeline.
            </summary>
            <typeparam name="TRequest">The type of the request</typeparam>
            <typeparam name="TResult">The type of the result</typeparam>
            <param name="pipelineName">Name of the pipeline</param>
            <param name="request">The request</param>
            <returns>The result</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.ProductSynchronizationProvider.RunPipelineBody``2(System.String,``0)">
            <summary>
            Runs the pipeline body.
            </summary>
            <typeparam name="TRequest">The type of the request</typeparam>
            <typeparam name="TResult">The type of the result</typeparam>
            <param name="pipelineName">Name of the pipeline</param>
            <param name="request">The request</param>
            <returns>
            This result
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizationContext">
            <summary>
            Defines the synchronization context.
            This class Utilizes some of the Sitecore CMS facilities to speed up the synchronization of the artifacts between
            Sitecore CMS and the external commerce system.
            You can use this class to disable proxies, the event handling, and database cache.
            You can also use it to update all items in the content tree at once.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.SynchronizationContext._proxyDisabler">
            <summary>
            The proxy disabler.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.SynchronizationContext._databaseCacheDisabler">
            <summary>
            The database cache disabler.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.SynchronizationContext._bulkUpdateContext">
            <summary>
            The bulk update context.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.SynchronizationContext._eventDisabler">
            <summary>
            The event disabler.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Services.Products.SynchronizationContext._isDisposed">
            <summary>
            Is set to true when instance is disposed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizationContext"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizationContext.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizationContext"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizationContext.Dispose">
            <summary>
            Performs the application-defined tasks that are associated with freeing, releasing, and resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizationContext.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationContext.ProxyDisabler">
            <summary>
            Gets the proxy disabler.
            </summary>
            <value>
            The proxy disabler.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationContext.DatabaseCacheDisabler">
            <summary>
            Gets the database cache disabler.
            </summary>
            <value>
            The database cache disabler.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationContext.BulkUpdateContext">
            <summary>
            Gets the bulk update context.
            </summary>
            <value>
            The bulk update context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizationContext.EventDisabler">
            <summary>
            Gets the event disabler.
            </summary>
            <value>
            The event disabler.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeArtifactsRequest">
            <summary>
            The synchronize artifacts request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeClassificationsRequest">
            <summary>
            Defines the request used to synchronize product classifications.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeClassificationSpecificationsRequest">
            <summary>
            The synchronize classifications specifications request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeDivisionsRequest">
            <summary>
            The synchronize divisions request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeGlobalSpecificationsRequest">
            <summary>
            The synchronize global specification request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeManufacturersRequest">
            <summary>
            Defines the request used to synchronize product manufacturer collection.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductClassificationsRequest">
            <summary>
            The synchronize product classifications request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductClassificationsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductClassificationsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductClassificationsSpecificationsRequest">
            <summary>
            The synchronize product classifications specifications request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductClassificationsSpecificationsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductClassificationsSpecificationsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductDivisionsRequest">
            <summary>
            The synchronize product divisions request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductDivisionsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductDivisionsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductGlobalSpecificationsRequest">
            <summary>
            The synchronize product global specifications request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductGlobalSpecificationsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductGlobalSpecificationsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductEntityRequest">
            <summary>
            The synchronize product item request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductEntityRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductEntityRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductListRequest">
            <summary>
            Defines the request used to synchronize product lists.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductListRequest.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductListRequest"/> class.
            </summary>
            <param name="productIds">The external ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.Products.SynchronizeProductListRequest.ProductIds">
            <summary>
            Gets or sets the product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductManufacturersRequest">
            <summary>
            The synchronize product manufacturers request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductManufacturersRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductManufacturersRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductRelationsRequest">
            <summary>
            The synchronize product relations request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductRelationsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductRelationsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductRequest">
            <summary>
            Defines the request used to synchronize products.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductResourcesRequest">
            <summary>
            The synchronize product resources request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductResourcesRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductResourcesRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductSpecificationsRequest">
            <summary>
            The synchronize product specifications request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductSpecificationsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductSpecificationsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductsRequest">
            <summary>
            Defines the request used to synchronize product collections.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductTypeSpecificationsRequest">
            <summary>
            The synchronize product type specifications request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductTypeSpecificationsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductTypeSpecificationsRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeProductTypesRequest">
            <summary>
            The synchronize product types request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Products.SynchronizeProductTypesRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.Products.SynchronizeProductTypesRequest"/> class.
            </summary>
            <param name="productId">The external product id.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeResourcesRequest">
            <summary>
            The synchronize resources request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeSpecificationsRequest">
            <summary>
            The synchronize specifications request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeTypeDefaultValuesRequest">
            <summary>
            The synchronize type default values request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeTypeSpecificationsRequest">
            <summary>
            The synchronize type specifications request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.Products.SynchronizeTypesRequest">
            <summary>
            The synchronize types request.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.PropertyCollection">
            <summary>
            Represents a list of properties organized as key/value pairs.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.Add(System.String)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The property key.</param>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.ArgumentException">an element with the same key already exists</exception>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.Add(System.String[])">
            <summary>
            Adds the specified keys.
            </summary>
            <param name="keys">An array of keys.</param>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The property key.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.ContainsProperty(System.String)">
            <summary>
            Determines whether the specified key contains the given property.
            </summary>
            <param name="key">The property key.</param>
            <returns>
                <c>true</c> if the specified key contains property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.GetPropertyOrDefault``1(System.String,``0)">
            <summary>
            Gets the property or the default value
            </summary>
            <typeparam name="T">The type of the property to return</typeparam>
            <param name="key">The key of the property to retrieve.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            Returns the property or if it's null and/or doesn't exist it returns the defaultValue specified
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.PropertyCollection.GetKeyForItem(Sitecore.Commerce.PropertyItem)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="P:Sitecore.Commerce.PropertyCollection.Keys">
            <summary>
            Gets the enumerator that permits the iteration through the list.
            </summary>
            <value>The 'keys' enumerator.</value>
        </member>
        <member name="P:Sitecore.Commerce.PropertyCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <param name="key">The key to be used to access a particular property.</param>
            <returns>the object</returns>
        </member>
        <member name="T:Sitecore.Commerce.PropertyItem">
            <summary>
            Represents an entry in the PropertyCollection
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.PropertyItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.PropertyItem"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.PropertyItem.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.PropertyItem"/> class.
            </summary>
            <param name="key">The key for this property.</param>
            <param name="value">The value associated with the key.</param>
        </member>
        <member name="P:Sitecore.Commerce.PropertyItem.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The property key.</value>
        </member>
        <member name="P:Sitecore.Commerce.PropertyItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.ServiceProviderRequestContext">
            <summary>
            Defines the ServiceProviderRequestContext class.  Used to provide the ability to share context between pipelines and pipeline processors.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.ServiceProviderRequestContext.Properties">
            <summary>
            Gets or sets the dictionary used to hold all of the simple properties
            (i.e. strings, int, etc…) associated with the commerce entity.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Sitecore.Commerce.Rules.Conditions.HasTriggeredPageEventsCondition`1">
            <summary>
            Defines the condition that determines whether a user has triggered a group of page events during a period of time.
            The condition follows the following format:
            “where the current visitor has triggered [PageEventName] for at least [MinimalNumberOfTimes] during last [TimeRange]”
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Rules.Conditions.HasTriggeredPageEventsCondition`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>true if user have triggered specified amount of page events, otherwise false.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.HasTriggeredPageEventsCondition`1.PageEventName">
            <summary>
            Gets or sets the name of the page event.
            </summary>
            <value>The name of the page event.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.HasTriggeredPageEventsCondition`1.MinimalNumberOfTimes">
            <summary>
            Gets or sets the minimal number of times.
            </summary>
            <value>The minimal number of times.</value>
        </member>
        <member name="P:Sitecore.Commerce.Rules.Conditions.HasTriggeredPageEventsCondition`1.TimeRange">
            <summary>
            Gets or sets the time range.
            </summary>
            <value>The time range.</value>
        </member>
        <member name="T:Sitecore.Commerce.Services.Prices.PricingServiceProvider">
            <summary>
            Represents the interaction with the pricing service.
            Service providers are wrapper objects that ease the interaction with the implementation pipelines. The providers only implement the calling pipelines. 
            All the business logic is implemented in the pipeline processors.
            The PricingServiceProvider class implements the ServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.PricingServiceProvider.GetProductPrices(Sitecore.Commerce.Services.Prices.GetProductPricesRequest)">
             <summary>
             Gets the prices of a specific product.
             It is called when Sitecore needs the prices for a specific product.
             </summary>
             <param name="request">A GetProductPricesRequest object that contains the user's ID, currency code, location, quantity, date time, shop name, and price type IDs. </param>
             <returns>A group of objects that contain the prices and the messages that are received from the external commerce systems.</returns>
             <example>
             You can use the GetProductPrices method to get the default price: 
             <code lang="C#">
             public void GetDefaultPrice()
             {
             // Create a  GetProductPricesRequest object, specify the product's ID and do not specify any price types.
             GetProductPricesRequest request = new GetProductPricesRequest("Audi A8L");
            
             // Call the service provider and receive the result.
             GetProductPricesResult result = this.pricingServiceProvider.GetProductPrices(request);
             }
             </code>
             <para></para>
             You can use the GetProductPrices to get the customer price:
             <code lang="C#">
             public void GetCustomerPrice()
             { 
             // Create a GetProductPricesRequest object, specify the product's ID and price type 'Customer'.
             GetProductPricesRequest request = new GetProductPricesRequest("Audi A8L", "Customer");
            
             // Call service provider and receive the result.
             GetProductPricesResult result = this.pricingServiceProvider.GetProductPrices(request);
             }
             </code>
             </example>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.PricingServiceProvider.GetProductBulkPrices(Sitecore.Commerce.Services.Prices.GetProductBulkPricesRequest)">
            <summary>
            Gets the price for a specific cart.
            It is called when Sitecore needs the price for a specific cart.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Services.Prices.GetProductPricesResult"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.PricingServiceProvider.GetCartTotal(Sitecore.Commerce.Services.Prices.GetCartTotalRequest)">
            <summary>
            Gets the cart total.
            </summary>
            <param name="request">A GetCartTotalRequest object that contains the cart, user's ID, currency code, location, shop name, and date time.</param>
            <returns>A group of objects that contain the prices and the messages that are received from the external commerce systems.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.PricingServiceProvider.GetSupportedCurrencies(Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesRequest)">
            <summary>
            Gets the supported currencies.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Services.Prices.GetSupportedCurrenciesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.Prices.PricingServiceProvider.CurrencyChosen(Sitecore.Commerce.Services.Prices.CurrencyChosenRequest)">
            <summary>
            Generates the currency chosen page event.
            </summary>
            <param name="request">The request.</param>
            <returns>The status of the operation.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.PipelineName">
            <summary>
            Contains the Commerce pipeline names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.ProductSorting">
            <summary>
            The product sorting pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.FacetApplied">
            <summary>
            The facet applied pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.VisitedCategoryPage">
            <summary>
            The name of the VisitedCategoryPage pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.VisitedProductDetailsPage">
            <summary>
            The name of the VisitedProductDetailsPage pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SearchInitiated">
            <summary>
            The name of the SearchInitiated pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CultureChosen">
            <summary>
            The "cultureChosen" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddCartLines">
            <summary>
            The "addCartLines" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddPartiesToCart">
            <summary>
            The "addParties" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddPaymentInfo">
            <summary>
            The "addPaymentInfo" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddShippingInfo">
            <summary>
            The "AddShippingInfo" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemovePaymentInfo">
            <summary>
            The "RemovePaymentInfo" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveShippingInfo">
            <summary>
            The "RemoveShippingInfo" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CreateOrResumeCart">
            <summary>
            The "createOrResumeCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CreateCart">
            <summary>
            The "createCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemovePartiesFromCart">
            <summary>
            The "deleteParties" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.ResumeCart">
            <summary>
            The "resumeCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.DeleteCart">
            <summary>
            The "deleteCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetCarts">
            <summary>
            The "getCarts" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.LoadCart">
            <summary>
            The "loadCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.LockCart">
            <summary>
            The "lockCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.MergeCart">
            <summary>
            The "MergeCarts" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveCartLines">
            <summary>
            The "removeCartLines" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SaveCart">
            <summary>
            The "saveCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UnlockCart">
            <summary>
            The "unlockCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateCart">
            <summary>
            The "updateCart" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateCartLines">
            <summary>
            The "updateCartLines" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdatePartiesInCart">
            <summary>
            The "updateParties" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetCartTotal">
            <summary>
            The "getСartTotal" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetProductPrices">
            <summary>
            The get product prices.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetProductBulkPrices">
            <summary>
            The get product bulk prices.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetSupportedCurrencies">
            <summary>
            The "getSupportedCurrencies" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CurrencyChosen">
            <summary>
            The "currencyChosen" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeArtifacts">
            <summary>
            The "synchronizeArtifacts" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductList">
            <summary>
            The "synchronizeProductList" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProduct">
            <summary>
            The "synchronizeProduct" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProducts">
            <summary>
            The "synchronizeProducts" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetExternalCommerceSystemProductList">
            <summary>
            The "getExternalCommerceSystemProductList" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetSitecoreProductList">
            <summary>
            The "getSitecoreProductList" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeManufacturers">
            <summary>
            The "synchronizeManufacturers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeClassifications">
            <summary>
            The "synchronizeClassifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeDivisions">
            <summary>
            The "synchronizeDivisions" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeResources">
            <summary>
            The "synchronizeResources" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductManufacturers">
            <summary>
            The "synchronizeProductManufacturers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductClassifications">
            <summary>
            The "synchronizeProductClassifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductDivisions">
            <summary>
            The "synchronizeProductDivisions" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductRelations">
            <summary>
            The "synchronizeProductRelations" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeTypes">
            <summary>
            The "synchronizeTypes" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductTypes">
            <summary>
            The "synchronizeProductTypes" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductResources">
            <summary>
            The "synchronizeProductResources" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeSpecifications">
            <summary>
            The "synchronizeSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeGlobalSpecifications">
            <summary>
            The "synchronizeGlobalSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeClassificationSpecifications">
            <summary>
            The "synchronizeClassificationsSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeTypeSpecifications">
            <summary>
            The "synchronizeTypeSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeTypeDefaultValues">
            <summary>
            The synchronize type default values.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductSpecifications">
            <summary>
            The "synchronizeProductSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductGlobalSpecifications">
            <summary>
            The "synchronizeProductGlobalSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductClassificationsSpecifications">
            <summary>
            The "synchronizeProductClassificationsSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductTypeSpecifications">
            <summary>
            The "synchronizeProductTypeSpecifications" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SynchronizeProductEntity">
            <summary>
            The "synchronizeProductEntity" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CreateUser">
            <summary>
            The "createUser" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateUser">
            <summary>
            The "updateUser" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.DeleteUser">
            <summary>
            The "deleteUser" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.DisableUser">
            <summary>
            The "disableUser" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.EnableUser">
            <summary>
            The "enableUser" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetUser">
            <summary>
            The "getUser" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetUsers">
            <summary>
            The "getUsers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CreateCustomer">
            <summary>
            The "createCustomer" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateCustomer">
            <summary>
            The "updateCustomer" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.DisableCustomer">
            <summary>
            The "disableCustomer" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.EnableCustomer">
            <summary>
            The "enableCustomer" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.DeleteCustomer">
            <summary>
            The "deleteCustomer" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetCustomer">
            <summary>
            The "getCustomer" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetCustomers">
            <summary>
            The "getCustomers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddCustomers">
            <summary>
            The "addCustomers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveCustomers">
            <summary>
            The "removeCustomers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddUsers">
            <summary>
            The "addUsers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveUsers">
            <summary>
            The "removeUsers" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddCustomerParties">
            <summary>
            The add customer parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveCustomerParties">
            <summary>
            The remove customer parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateCustomerParties">
            <summary>
            The update customer parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddPartiesToCustomer">
            <summary>
            The add parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetParties">
            <summary>
            The get parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveParties">
            <summary>
            The remove parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateParties">
            <summary>
            The update parties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdatePassword">
            <summary>
            The update user password
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetStockInformation">
            <summary>
            The "getStockInformation" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetStockLocations">
            <summary>
            The "getStockLocations" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetProductStockLocations">
            <summary>
            The "getStockLocations" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.StockStatusForIndexing">
            <summary>
            The "stockStatusForIndexing" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetPreOrderableInformation">
            <summary>
            The "getPreOrderableInformation" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetBackOrderableInformation">
            <summary>
            The "getBackOrderableInformation" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.TriggerVisitedProductStockStatus">
            <summary>
            The "visitedProductStockStatus" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.ProductsAreBackInStock">
            <summary>
            The "productsAreBackInStock" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetBackInStockInformation">
            <summary>
            The "getBackInStockInformation" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.VisitorSignUpForStockNotification">
            <summary>
            The "visitorSignUpForStockNotification" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveVisitorFromStockNotification">
            <summary>
            The "removeVisitorFromStockNotification" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.SubmitVisitorOrder">
            <summary>
            The "submitVisitorOrder" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetAvailableCountries">
            <summary>
            The "getAvailableCountries" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetAvailableRegions">
            <summary>
            The "getAvailableRegions" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetVisitorOrder">
            <summary>
            The "getVisitorOrder" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetVisitorOrders">
            <summary>
            The "getVisitorOrders" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.VisitorOrderCancel">
            <summary>
            The "visitorOrderCancel" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.OrderStatusChanged">
            <summary>
            The "orderStatusChanged" pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetShippingOptions">
            <summary>
            The "getShippingOptions" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetShippingMethod">
            <summary>
            The "getShippingMethod" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetShippingMethods">
            <summary>
            The "getShippingMethods" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetPricesForShipments">
            <summary>
            The "getPricesForShipments" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetPaymentOptions">
            <summary>
            The "getPaymentOptions" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetPaymentMethods">
            <summary>
            The "getPaymentMethods" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetPricesForPayments">
            <summary>
            The "getPricesForPayments" pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.AddLinesToWishList">
            <summary>
            The 'addLinesToWishList' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.CreateWishList">
            <summary>
            The 'createWishList' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.DeleteWishList">
            <summary>
            The 'deleteWishList' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.EmailWishLists">
            <summary>
            The 'emailWishLists' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetWishList">
            <summary>
            The 'getWishList' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetWishLists">
            <summary>
            The 'getWishLists' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.PrintWishList">
            <summary>
            The 'printWishList' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.RemoveWishListLines">
            <summary>
            The 'removeWishListLines' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateWishList">
            <summary>
            The 'updateWishList' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateWishListLines">
            <summary>
            The 'updateWishListLines' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetGiftCard">
            <summary>
            The 'getGiftCard' pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetLoyaltyPrograms">
            <summary>
            The 'getLoyaltyPrograms' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetLoyaltyProgram">
            <summary>
            The 'getLoyaltyProgram' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetLoyaltyProgramStatus">
            <summary>
            The getLoyaltyProgramStatus' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.JoinLoyaltyProgram">
            <summary>
            The 'joinLoyaltyProgram' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetLoyaltyCards">
            <summary>
            The 'getLoyaltyCards' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetLoyaltyCardStatus">
            <summary>
            The 'getLoyaltyCardStatus' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetLoyaltyCardTransactions">
            <summary>
            The 'getLoyaltyCardsTransactions' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.UpdateLoyaltyCardId">
            <summary>
            The 'updateLoyaltyCardId' pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineName.GetProductRatings">
            <summary>
            The 'getProductRatings' pipeline name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Pipelines.PipelineService">
            <summary>
            Allows to get and set a pipeline service which allows 
            to mock the service in unit testing.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Pipelines.PipelineService.Default">
            <summary>
            The default pipeline service.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Pipelines.PipelineService.RunPipeline``1(System.String,``0)">
            <summary>
            Runs the pipeline.
            </summary>
            <typeparam name="TArgs">The type of the args.</typeparam>
            <param name="pipelineName">Name of the pipeline.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest">
            <summary>
            The request of the "commerce.wishLists.addLinesToWishList" pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.WishListRequest">
            <summary>
            Defines the WishListRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest.#ctor(Sitecore.Commerce.Entities.WishLists.WishList,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest"/> class.
            </summary>
            <param name="wishList">The wish list.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>
            The lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListResult">
            <summary>
            The result of the "commerce.wishLists.addLinesToWishList" pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.WishListResult">
            <summary>
            Defines the WishListResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.AddLinesToWishListResult.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.AddLinesToWishListResult.AddedLines">
            <summary>
            Gets or sets the added lines.
            </summary>
            <value>
            The added lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.CreateWishListRequest">
            <summary>
            The request of the "commerce.wishLists.createWishList" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.CreateWishListRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.CreateWishListRequest"/> class.
            </summary>
            <param name="userId">The customer identifier.</param>
            <param name="wishListName">Name of the wish list.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.CreateWishListRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.CreateWishListRequest.WishListName">
            <summary>
            Gets or sets the name of the wish list.
            </summary>
            <value>
            The name of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.CreateWishListRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.CreateWishListResult">
            <summary>
            The result of the "commerce.wishLists.createWishList" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.CreateWishListResult.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.DeleteWishListRequest">
            <summary>
            The request of the "commerce.wishLists.deleteWishLists" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.DeleteWishListRequest.#ctor(Sitecore.Commerce.Entities.WishLists.WishList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.DeleteWishListRequest"/> class.
            </summary>
            <param name="wishList">The wish list.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.DeleteWishListRequest.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.DeleteWishListResult">
            <summary>
            The result of the "commerce.wishLists.deleteWishLists" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.DeleteWishListResult.WishList">
            <summary>
            Gets or sets the deleted wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.EmailWishListsRequest">
            <summary>
            Defines the EmailWishListsResult class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.EmailWishListsRequest.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishList})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.EmailWishListsRequest"/> class.
            </summary>
            <param name="wishLists">The wish list ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.EmailWishListsRequest.WishLists">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.EmailWishListsResult">
            <summary>
            Defines the EmailWishListsResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.EmailWishListsResult.WishLists">
            <summary>
            Gets or sets the emailed wish lists.
            </summary>
            <value>
            The wish lists.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.CreateWishList``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Creates a wish list. It calls the CreateWishList pipeline.
            </summary>
            <typeparam name="TCreateWishListRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.CreateWishListRequest"/>class.</typeparam>
            <typeparam name="TCreateWishListResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.CreateWishListResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.CreateWishListRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.CreateWishListResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.DeleteWishList``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Deletes a wish list. It calls the DeleteWishList pipeline.
            </summary>
            <typeparam name="TDeleteWishListRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.DeleteWishListRequest"/>class.</typeparam>
            <typeparam name="TDeleteWishListResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.DeleteWishListResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.DeleteWishListRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.DeleteWishListResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.EmailWishLists``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Emails the wish lists.
            </summary>
            <typeparam name="TEmailWishListRequest">The type of the email wish list request.</typeparam>
            <typeparam name="TEmailWishListsResult">The type of the email wish lists result.</typeparam>
            <param name="wishListProvider">The wish list provider.</param>
            <param name="request">The request.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.EmailWishListsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.GetWishList``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Gets a wish list. It calls the GetWishList pipeline.
            </summary>
            <typeparam name="TGetWishListRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListRequest"/>class.</typeparam>
            <typeparam name="TGetWishListResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.GetWishLists``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Gets a user's wish lists. It calls the GetWishLists pipeline.
            </summary>
            <typeparam name="TGetWishListsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListsRequest"/>class.</typeparam>
            <typeparam name="TGetWishListsResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListsResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListsRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListsResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.UpdateWishList``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Updates a wish list. It calls the UpdateWishList pipeline.
            </summary>
            <typeparam name="TUpdateWishListRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListRequest"/>class.</typeparam>
            <typeparam name="TUpdateWishListResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.AddLinesToWishList``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Add lines to a wish list. It calls the AddLinesToWishList pipeline.
            </summary>
            <typeparam name="TAddLinesToWishListRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest"/>class.</typeparam>
            <typeparam name="TAddLinesToWishListResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.UpdateWishListLines``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Updates lines on a wish list. It calls the UpdateWishListLines pipeline.
            </summary>
            <typeparam name="TUpdateWishListLinesRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest"/>class.</typeparam>
            <typeparam name="TUpdateWishListLinesResult">The extended type of the <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesResult"/>class.</typeparam>
            <param name="wishListProvider">A <see cref="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest"/> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.AddLinesToWishListResult"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.RemoveWishListLines``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Removes a line from wish list. It calls the RemoveWishListLines pipeline.
            </summary>
            <typeparam name="TRemoveWishListLinesRequest">The type of the remove wish list lines request.</typeparam>
            <typeparam name="TRemoveWishListLinesResult">The type of the remove wish list lines result.</typeparam>
            <param name="wishListProvider">The wish list provider.</param>
            <param name="request">The request.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesResult"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.Generics.GenericWishListServiceProviderExtensions.PrintWishList``2(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,``0)">
            <summary>
            Prints the wish list.
            </summary>
            <typeparam name="TPrintWishListRequest">The type of the print wish list request.</typeparam>
            <typeparam name="TPrintWishListResult">The type of the print wish lists result.</typeparam>
            <param name="wishListProvider">The wish list provider.</param>
            <param name="request">The request.</param>
            <returns>
            The extended <see cref="T:Sitecore.Commerce.Services.WishLists.PrintWishListResult"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.GetWishListRequest">
            <summary>
            The request of the "commerce.wishLists.getWishList" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.GetWishListRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListRequest"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="wishListId">The wish list identifier.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListRequest.WishListId">
            <summary>
            Gets or sets the id of the wish list.
            </summary>
            <value>
            The id of the wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.GetWishListResult">
            <summary>
            The result of the "commerce.wishLists.getWishList" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListResult.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.GetWishListsRequest">
            <summary>
            The request of the "commerce.wishLists.getWishLists" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.GetWishListsRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.GetWishListsRequest"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="shopName">Name of the shop.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListsRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListsRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.GetWishListsResult">
            <summary>
            The result of the "commerce.wishLists.getWishLists" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.GetWishListsResult.WishLists">
            <summary>
            Gets or sets the wish lists.
            </summary>
            <value>
            The wish lists.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.PrintWishListRequest">
            <summary>
            Defines the PrintWishListRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.PrintWishListRequest.#ctor(Sitecore.Commerce.Entities.WishLists.WishList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.PrintWishListRequest"/> class.
            </summary>
            <param name="wishList">The wish list.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.PrintWishListRequest.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.PrintWishListResult">
            <summary>
            Defines the PrintWishListResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.PrintWishListResult.WishList">
            <summary>
            Gets or sets the printed wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesRequest">
            <summary>
            The request of the "commerce.wishLists.removeWishListLines" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesRequest.#ctor(Sitecore.Commerce.Entities.WishLists.WishList,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesRequest"/> class.
            </summary>
            <param name="wishList">The wish list.</param>
            <param name="lineIds">The line ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesRequest.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesRequest.LineIds">
            <summary>
            Gets or sets the line identifier.
            </summary>
            <value>
            The line identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesResult">
            <summary>
            The result of the "commerce.wishLists.removeWishListLines" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesResult.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.RemoveWishListLinesResult.RemovedLines">
            <summary>
            Gets or sets the removed lines.
            </summary>
            <value>
            The removed lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest">
            <summary>
            The request of the "commerce.wishLists.addLinesToWishList" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest.#ctor(Sitecore.Commerce.Entities.WishLists.WishList,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest"/> class.
            </summary>
            <param name="wishList">The wish list.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>
            The lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesResult">
            <summary>
            The result of the "commerce.wishLists.updateWishListLines" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesResult.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.UpdateWishListLinesResult.UpdatedLines">
            <summary>
            Gets or sets the updated lines.
            </summary>
            <value>
            The updated lines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.UpdateWishListRequest">
            <summary>
            The request of the "commerce.wishLists.updateWishList" pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.UpdateWishListRequest.#ctor(Sitecore.Commerce.Entities.WishLists.WishList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Services.WishLists.UpdateWishListRequest"/> class.
            </summary>
            <param name="wishList">The wish list.</param>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.UpdateWishListRequest.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.UpdateWishListResult">
            <summary>
            The result of the "commerce.wishLists.updateWishList" pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Services.WishLists.UpdateWishListResult.WishList">
            <summary>
            Gets or sets the wish list.
            </summary>
            <value>
            The wish list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Services.WishLists.WishListServiceProvider">
            <summary>
            Represents the interaction with the wish list service.
            Service providers are wrapper objects that ease the interaction with the implementation pipelines. The providers only implement the calling pipelines. 
            All the business logic is implemented in the pipeline processors.
            The WishListServiceProvider class implements the ServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.CreateWishList(Sitecore.Commerce.Services.WishLists.CreateWishListRequest)">
            <summary>
            Creates a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.DeleteWishList(Sitecore.Commerce.Services.WishLists.DeleteWishListRequest)">
            <summary>
            Deletes a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.EmailWishLists(Sitecore.Commerce.Services.WishLists.EmailWishListsRequest)">
            <summary>
            Emails the wish lists.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.GetWishList(Sitecore.Commerce.Services.WishLists.GetWishListRequest)">
            <summary>
            Gets a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.GetWishLists(Sitecore.Commerce.Services.WishLists.GetWishListsRequest)">
            <summary>
            Gets a user's wish lists.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.UpdateWishList(Sitecore.Commerce.Services.WishLists.UpdateWishListRequest)">
            <summary>
            Updates a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.AddLinesToWishList(Sitecore.Commerce.Services.WishLists.AddLinesToWishListRequest)">
            <summary>
            Adds lines to a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.UpdateWishListLines(Sitecore.Commerce.Services.WishLists.UpdateWishListLinesRequest)">
            <summary>
            Updates lines on a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>The service response</returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.RemoveWishListLines(Sitecore.Commerce.Services.WishLists.RemoveWishListLinesRequest)">
            <summary>
            Remove a line from a wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Services.WishLists.WishListServiceProvider.PrintWishList(Sitecore.Commerce.Services.WishLists.PrintWishListRequest)">
            <summary>
            Prints the wish list.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The service response
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Templates">
            <summary>
            Contains the CommerceConnect template unique identifiers.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Templates.ProductTemplateId">
            <summary>
            The product template id.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Templates.ProductBranchId">
            <summary>
            The product branch id.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Texts">
            <summary>
            Defines the Texts class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CurrencyChosen0Selected">
            <summary>
            Defines the message: "The currency ({0}) was selected."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.Asc">
            <summary>
            Defines the message: "Asc"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.Desc">
            <summary>
            Defines the message: "Desc"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductPageVisitedProductName0CategoryName1">
            <summary>
            Defines the message: ""{0}" under category "{2}""
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CategoryPageVisitedForCategoryName0CategoryId1">
            <summary>
            Defines the message: "Category page visited for category "{0}" ({1})"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SearchTerm0NumberOfHist1">
            <summary>
            Defines the message: "{0} ({1} results)"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductsSortedBy0Direction1">
            <summary>
            Defines the message: "Sorted by {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductsFacet0Applied1">
            <summary>
            Defines the message: "Facet {0} applied {1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.Property0MustBeSet">
            <summary>
            Defines the message: "Property 0 must be set."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CartIsNotFound">
            <summary>
            Defines the message: "Cart is not found.".
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CartCouldNotBeProcessedItIsLocked">
            <summary>
            Defines the message: "Cart could not be processed. It is locked."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CartCouldNotBeProcessedItIsUnlocked">
            <summary>
            Defines the message: "Cart could not be processed. It is unlocked."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.FailedToCreateACart">
            <summary>
            Defines the message: "Failed to create a cart."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.FailedToSaveCart">
            <summary>
            Defines the message: "Failed to save cart."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.FailedToProcessCart">
            <summary>
            Defines the message: "Failed to process cart."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.TheCommerceConnectPageEventsCannotBeDeployedSeeLogForDetails">
            <summary>
            Defines the message: "The CommerceConnect page events cannot be deployed. See log for details."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.EaPlanWithName0CannotBeFound">
            <summary>
            Defines the message: "Engagement automation plan with name {0} cannot be found."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.EaPlanStateWithName0CannotBeFound">
            <summary>
            Defines the message: "Engagement automation plan state with name {0} cannot be found."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CannotFindShopCorrespondingToEaPlanWithName0">
            <summary>
            Defines the message: "Cannot find shop corresponding to engagement automation plan with name {0}."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ShopNameIsNotSpecified">
            <summary>
            Defines the message: "Shop name is not specified."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CartIsNotSpecified">
            <summary>
            Defines the message: "Car is not specified."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ContextSiteCannotBeNull">
            <summary>
            Defines the message: "Context site cannot be null"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.OperatorIsNotSupported">
            <summary>
            Defines the message: "Operator is not supported" phrase.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.DataIsStoredInWrongFormatCorrentFormatIs">
            <summary>
            Defines the message: "Data is stored in wrong format. The correct format is 'key1=value1; key2=value2; ... keyN=valueN'. ';' and '=' are escaped by duplication.";
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ArgumentIsNotAnId">
            <summary>
            Defines the message: "Argument is not an id."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CannotFindManufacturerRepositoryItemWith0">
            <summary>
            Defines the message: "Cannot find manufacturer repository item with 0."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CannotFindDivisionRepositoryItemWith0">
            <summary>
            Defines the message: "Cannot find division repository item with 0."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CannotFindProductTypeRepositoryItemWith0">
            <summary>
            Defines the message: "Cannot find product type repository item with 0."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CannotFindResourceRepositoryItemWith0">
            <summary>
            Defines the message: "Cannot find resource repository item with 0."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CannotFindTemplateItemWithId0">
            <summary>
            Defines the message: "Cannot find template item with 0."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.FailedToCreateItemForTheEntityBeingSynchronized">
            <summary>
            Defines the message: "Failed to create item for the entity being synchronized."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CollectionOfContextItemsShouldHaveTheOnlyElement">
            <summary>
            Defines the message: "Collection of context items should have the only element."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.LicenseError">
            <summary>
            Defines the message: "Required license is missing."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.LicenseErrorDetails">
            <summary>
            Defines the message: "You require one of the following licenses to use the Sitecore Commerce Connect module. '{0}' or '{1}'"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.LicenseErrorDetailsExperienceProfile">
            <summary>
            Defines the message: "You require one of the following licenses to use the Sitecore Commerce Experience Profile module. '{0}' or '{1}'"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.PaymentInformationPartyDoesNotExist0">
            <summary>
            Defines the message: "The given payment information Party reference does not exist: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ShippingInformationPartyDoesNotExist0">
            <summary>
            Defines the message: "The given shipping information party reference does not exist: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductMustNotBeNull">
            <summary>
            Defines the message: "Product must not be null."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.FailedToSynchronizeProduct0">
            <summary>
            Defines the message: "Failed to synchronize product: {}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizeProductDeleted">
            <summary>
            Defines the message: "Synchronize product. Product deleted: {}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductSynchronized0">
            <summary>
            Defines the message: "Product synchronized: {0}" 
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductClassificationPrefixMustBeSpecified">
            <summary>
            Defines the message: "ProductClassificationPrefix must be specified."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ProductClassificationGroupPrefixMustBeSpecified">
            <summary>
            Defines the message: "ProductClassificationGroupPrefix must be specified."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UserNameMustBeProvided">
            <summary>
            Defines the message: "The user name must be provided."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UserWithName0AlreadyExists">
            <summary>
            The user with name0 already exists.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UserWithName0DoesNotExist">
            <summary>
            The user with name0 does not exist.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizeAllProducts">
            <summary>
            The synchronize all products.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingAllProductsFromExternalSystem">
            <summary>
            The synchronizing all products from external system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizeArtifacts">
            <summary>
            The synchronize artifacts.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingArtifactsFromExternalSystem">
            <summary>
            The synchronizing artifacts from external system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizeProduct">
            <summary>
            The synchronize product.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizeProductList">
            <summary>
            The synchronize product list.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingCurrentProductFromExternalSystem">
            <summary>
            The synchronizing current product from external system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingListOfSelectedProductsFromExternalSystem">
            <summary>
            The synchronizing list of selected products from external system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingProduct">
            <summary>
            The synchronizing product.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingClassifications">
            <summary>
            The synchronizing classifications.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingDivisions">
            <summary>
            The synchronizing divisions.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingGlobalSpecifications">
            <summary>
            The synchronizing global specifications.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingManufacturers">
            <summary>
            The synchronizing manufacturers.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingTypes">
            <summary>
            The synchronizing types.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingResources">
            <summary>
            The "Synchronizing resources" message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingTypeSpecifications">
            <summary>
            The synchronizing type specifications.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingTypeDefaultValues">
            <summary>
            The synchronizing type default values.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.SynchronizingClassificationsSpecifications">
            <summary>
            The synchronizing classifications specifications.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UnableToRebuildSearchIndexIndexNameIsMissing">
            <summary>
            The "Unable to rebuild search index. Index name is missing." text.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UnableToRetrieveSearchIndex">
            <summary>
            The "Unable to retrieve search index." text.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UnableToRetrieveProductEntitiesProductIndexIsNotSet">
            <summary>
            The "Unable to retrieve product entities. Product index is not set." text.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerMustNotExist">
            <summary>
            The customer must not exist.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerMustExist">
            <summary>
            The "Customer must exist." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.ShopsMustNotBeEmpty">
            <summary>
            The "Shops must not be empty." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.AllShopsMustNotBeNullOrEmpty">
            <summary>
            The "Shops must not be empty. All shops must not be null or empty." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeCreatedNameIsNotProvided">
            <summary>
            The "Customer could not be created. Name is not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeCreatedItAlreadyExists">
            <summary>
            The "Customer could not be created. It already exists." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeCreatedExternalIdIsNotValid">
            <summary>
            The "Customer could not be created. ExternalId is not valid." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeCreatedShopsAreNotValid">
            <summary>
            The "Customer could not be created. Shops are not valid." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeDeletedNameIsNotProvided">
            <summary>
            The "Customer could not be deleted. Name is not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeDeletedItDoesNotExist">
            <summary>
            The "Customer could not be deleted. It does not exist." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeDisabledNameIsNotProvided">
            <summary>
            The "Customer could not be disabled. Name is not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeDisabledItDoesNotExist">
            <summary>
            The "Customer could not be disabled. It does not exist." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeEnabledNameIsNotProvided">
            <summary>
            The "Customer could not be enabled. Name is not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeEnabledItDoesNotExist">
            <summary>
            The "Customer could not be enabled. It does not exist." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeUpdatedNameIsNotProvided">
            <summary>
            The "Customer could not be updated. Name is not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerCouldNotBeUpdatedItDoesNotExist">
            <summary>
            The "Customer could not be updated. It does not exist." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.UserExternalIdMustBeProvided">
            <summary>
            The "User created but external Id was not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CustomerExternalIdIsNotProvided">
            <summary>
            The "Customer created but external Id was not provided." message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CouldNotCreateContact">
            <summary>
            Could not create a Contact in xDB for the Commerce User
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Texts.CouldNotUpdateContact">
            <summary>
            Could not retrieve Contact from xDB to update for Commerce User
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.AutomationStateContextExtensions">
            <summary>
            Defines the AutomationStateContextExtensions.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.AutomationStateContextExtensions.AddOrUpdateCustomData(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.String,System.Object)">
            <summary>
            Adds the or update custom data.
            </summary>
            <param name="stateContext">The state context.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.AutomationStateContextExtensions.AddIfCustomDataNotExist(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.String,System.Object)">
            <summary>
            Adds if custom data not exist.
            </summary>
            <param name="stateContext">The state context.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Sitecore.Commerce.EntitiesIncludedInXdbTypes">
            <summary>
            Types of entities that can be included in page events.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.EntitiesIncludedInXdbTypes.Base">
            <summary>
            Base entity only will be included.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.EntitiesIncludedInXdbTypes.Custom">
            <summary>
            Custom entities will be included.  These are included in Json format.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.EntitiesIncludedInXdbTypes.Both">
            <summary>
            Both base and custom entities will be included.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.ConnectSettings">
            <summary>
            Defines the ConnectSettings class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.ConnectSettings.EntitiesIncludedInXdb">
            <summary>
            Gets the entities included in XDB.
            </summary>
            <value>
            The entities included in XDB.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.EntityExtensionMethods">
            <summary>
            Defines the EntityExtensionMethods class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.EntityExtensionMethods.ToBaseType``1(Sitecore.Commerce.Entities.Entity)">
            <summary>
            To the type of the base.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <param name="entity">The entity.</param>
            <returns>The base type T instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.EntityExtensionMethods.ToJson(Sitecore.Commerce.Entities.Entity)">
            <summary>
            Converts the entity to Json format.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Entity in Json format.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Contacts.ContactFactory">
            <summary>
            Defines the current visitor using Sitecore Analytics.
            This class is needed to distinguish anonymous users from each other.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Contacts.ContactFactory.GetUserId(Sitecore.Analytics.Tracking.Contact)">
            <summary>
            Gets the UserId of the current contact.
            </summary>
            <param name="contact">The current contact context.</param>
            <returns>The UserId of the current contact.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Contacts.ContactFactory.GetUserId">
            <summary>
            Gets the UserId of the current contact.
            </summary>
            <returns>The UserId of the current contact.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Contacts.ContactFactory.GetContact">
            <summary>
            Gets the contact.
            </summary>
            <returns>The contact.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Visitors.VisitorFactory">
            <summary>
            Obsolete - use Sitecore.Commerce.ContactsContactFactory instead.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Visitors.VisitorFactory.GetVisitor">
            <summary>
            Not Implemented - use Sitecore.Commerce.ContactsContactFactory.GetContact() instead.
            </summary>
            <returns>not implemented.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Entities.Payments.PaymentPrice">
            <summary>
            Represents the price of a payment option.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentPrice.OptionId">
            <summary>
            Gets or sets the payment option Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentPrice.MethodId">
            <summary>
            Gets or sets the payment method Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Entities.Payments.PaymentPrice.LineItemIds">
            <summary>
            Gets or sets the line item ids.
            </summary>
        </member>
    </members>
</doc>
