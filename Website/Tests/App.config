<?xml version="1.0" encoding="utf-8"?>
<!--
// Copyright 2016 Sitecore Corporation A/S
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of the License at
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the
// License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions
// and limitations under the License.
-->
<configuration>
  <configSections>
    <section name="sitecore" type="Sitecore.Configuration.ConfigReader, Sitecore.Kernel" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Sitecore.Logging" />
  </configSections>
  <connectionStrings>
    <add name="analytics" connectionString="user id=sa;password=12345;Data Source=.\SQL;Database=NewInstance1Build_analytics" />
    <add name="core" connectionString="user id=sa;password=12345;Data Source=.\SQL;Database=NewInstance1Sitecore_Core" />
    <add name="master" connectionString="user id=sa;password=12345;Data Source=.\SQL;Database=NewInstance1Sitecore_Master" />
    <add name="web" connectionString="user id=sa;password=12345;Data Source=.\SQL;Database=NewInstance1Sitecore_Web" />
  </connectionStrings>
  <sitecore database="Memory">
    <sc.variable name="dataFolder" value="../../../../data" />
    <!-- LINK DATABASE -->
    <LinkDatabase type="Sitecore.TestKit.Data.$(database).$(database)LinkDatabase, Sitecore.TestKit" />
    <linkManager defaultProvider="sitecore">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Links.LinkProvider, Sitecore.Kernel" addAspxExtension="true" alwaysIncludeServerUrl="false" encodeNames="true" languageEmbedding="asNeeded" languageLocation="filePath" shortenUrls="true" useDisplayName="false" />
      </providers>
    </linkManager>
    <!-- SEARCH -->
    <contentSearch>
      <configuration type="Sitecore.ContentSearch.LuceneProvider.LuceneSearchConfiguration, Sitecore.ContentSearch.LuceneProvider" />
    </contentSearch>
    <!-- BUCKETS -->
    <bucketManager defaultProvider="memory" enabled="true">
      <providers>
        <clear />
        <add name="memory" type="Sitecore.TestKit.Buckets.Managers.MemoryBucketProvider, Sitecore.TestKit" />
      </providers>
    </bucketManager>
    <!-- EVENTING -->
    <eventing defaultProvider="sitecore" enabled="true">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Eventing.EventProvider, Sitecore.Kernel" systemDatabaseName="core" />
      </providers>
      <eventQueue>
        <processingInterval>00:00:02</processingInterval>
      </eventQueue>
    </eventing>
    <pipelines>
      <getFieldValue performanceCritical="true">
        <processor type="Sitecore.Pipelines.GetFieldValue.GetInheritedValue, Sitecore.Kernel" />
        <processor type="Sitecore.Pipelines.GetFieldValue.GetStandardValue, Sitecore.Kernel" />
        <processor type="Sitecore.Pipelines.GetFieldValue.GetDefaultValue, Sitecore.Kernel" />
      </getFieldValue>
      <renderField />
      <setCustomCrmProperty />
      <evilRobotDetection />
      <filterItem>
        <processor type="Sitecore.Nexus.Pipelines.FilterItem.CheckIfFilteringIsActive, Sitecore.Nexus" />
        <processor type="Sitecore.Nexus.Pipelines.FilterItem.GetPublishedVersionOfItem, Sitecore.Nexus" />
      </filterItem>
      <contentSearch.getGlobalSearchFilters />
      <contentSearch.translateQuery />
      <contentSearch.stripQueryStringParameters />

      <!-- Analytics -->
      <loadVisitor />
    </pipelines>
    <queryselector defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.Forms.Core.Data.DefaultQueryProvider, Sitecore.Forms.Core" />
        <add name="root" type="Sitecore.Forms.Core.Data.RootQueryProvider, Sitecore.Forms.Core" />
        <add name="xpath" type="Sitecore.Forms.Core.Data.XPathQueryProvider, Sitecore.Forms.Core" />
        <add name="sitecore" type="Sitecore.Forms.Core.Data.SitecoreQueryProvider, Sitecore.Forms.Core" />
        <add name="fast" type="Sitecore.Forms.Core.Data.FastQueryProvider, Sitecore.Forms.Core" />
      </providers>
    </queryselector>
    <prototypes>
      <ErrorControl type="Sitecore.Web.UI.WebControls.StandardErrorControl, Sitecore.Kernel" />
      <ItemNavigator type="Sitecore.Nexus.Xml.NexusItemNavigator, Sitecore.Nexus" />
    </prototypes>
    <dataProviders>
      <main type="Sitecore.TestKit.Data.DataProviders.$(database)DataProvider, Sitecore.TestKit">
        <param connectionStringName="$(1)" />
        <Name>$(1)</Name>
      </main>
      <filesystem type="Sitecore.Data.DataProviders.FileSystemDataProvider, Sitecore.Kernel">
        <CacheOptions.DisableAll>true</CacheOptions.DisableAll>
      </filesystem>
      <templatefile type="Sitecore.Data.DataProviders.TemplateFileResolver, Sitecore.Kernel">
        <param desc="template file">$(1)</param>
        <abortChain>true</abortChain>
      </templatefile>
      <methodGroups>
        <copyMove>
          <CopyItem />
          <MoveItem />
        </copyMove>
        <create>
          <AddVersion />
          <CreateItem />
        </create>
        <delete>
          <DeleteItem />
          <RemoveVersion />
          <RemoveVersions />
        </delete>
        <properties>
          <GetProperty />
          <RemoveProperty />
          <SetProperty />
        </properties>
        <publishing>
          <AddToPublishQueue />
          <CleanupPublishQueue />
          <GetPublishQueue />
        </publishing>
        <query>
          <SelectIDs />
          <SelectSingleID />
        </query>
        <read>
          <BlobStreamExists />
          <GetItemDefinition />
          <GetItemFields />
          <GetItemVersions />
        </read>
        <relations>
          <GetChildIDs />
          <GetParentID />
          <GetRootID />
          <HasChildren />
        </relations>
        <resolve>
          <ResolvePath />
        </resolve>
        <templates>
          <ChangeTemplate />
          <GetTemplateItemIds />
          <GetTemplates />
        </templates>
        <update>
          <SaveItem />
        </update>
        <workflow>
          <GetItemsInWorkflowState />
          <GetWorkflowInfo />
          <SetWorkflowInfo />
        </workflow>
      </methodGroups>
    </dataProviders>
    <databases>
      <!-- core -->
      <database id="core" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <param desc="name">$(id)</param>
        <connectionStringName>$(id)</connectionStringName>
        <icon>Software/16x16/application_server.png</icon>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" param1="$(id)">
          </dataProvider>
        </dataProviders>

        <archives hint="raw:AddArchive">
          <archive name="archive" />
          <archive name="recyclebin" />
        </archives>
        <cacheSizes hint="setting">
          <data>20MB</data>
          <items>10MB</items>
          <paths>500KB</paths>
          <standardValues>500KB</standardValues>
        </cacheSizes>
        <Engines.HistoryEngine.Storage>
          <obj type="Sitecore.TestKit.Data.Engines.$(database)HistoryStorage, Sitecore.TestKit">
            <param connectionStringName="$(id)">
            </param>
          </obj>
        </Engines.HistoryEngine.Storage>
      </database>
      <!-- master -->
      <database id="master" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <param desc="name">$(id)</param>
        <icon>People/16x16/cubes_blue.png</icon>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" param1="$(id)">
          </dataProvider>
        </dataProviders>
        <securityEnabled>true</securityEnabled>
        <proxiesEnabled>false</proxiesEnabled>
        <publishVirtualItems>true</publishVirtualItems>

        <archives hint="raw:AddArchive">
          <archive name="archive" />
          <archive name="recyclebin" />
        </archives>
        <Engines.HistoryEngine.Storage>
          <obj type="Sitecore.TestKit.Data.Engines.$(database)HistoryStorage, Sitecore.TestKit">
            <param connectionStringName="$(id)" />
            <EntryLifeTime>30.00:00:00</EntryLifeTime>
          </obj>
        </Engines.HistoryEngine.Storage>
        <Engines.HistoryEngine.SaveDotNetCallStack>false</Engines.HistoryEngine.SaveDotNetCallStack>
        <cacheSizes hint="setting">
          <data>20MB</data>
          <items>10MB</items>
          <paths>500KB</paths>
          <standardValues>500KB</standardValues>
        </cacheSizes>
      </database>
      <!-- web -->
      <database id="web" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <param desc="name">$(id)</param>
        <icon>Network/16x16/earth.png</icon>
        <securityEnabled>true</securityEnabled>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" param1="$(id)">
            <disableGroup>publishing</disableGroup>
          </dataProvider>
        </dataProviders>
        <proxiesEnabled>false</proxiesEnabled>

        <archives hint="raw:AddArchive">
          <archive name="archive" />
          <archive name="recyclebin" />
        </archives>
        <cacheSizes hint="setting">
          <data>20MB</data>
          <items>10MB</items>
          <paths>500KB</paths>
          <standardValues>500KB</standardValues>
        </cacheSizes>
      </database>
    </databases>

    <domains xmlns:sc="Sitecore">
      <!-- 
    <domain> supports attributes matching domain type properties. Among these are:
      name : Name of the domain. Required.
      type : Full name of type to instantiate. Optional.
      locallyManaged: Indicates if the domain is locally managed (true/false). Optional - default value: false
      isDefault : Indicates if the domain is the default domain (true/false). Optional - default value: false
      displayName: The title to use when presenting the domain in UI. Optional.
      anonymousUserName: The name of the anonymous user for the domain (without the domain name). Set to blank to disable the anonymous user for the domain. Optional - default value: Anonymous
      ensureAnonymousUser: Indicates if the domain should ensure that an anonymous user for the domain exists in the Membership database. Optional - default value: false
      everyoneRoleName: The name of the everyone role for the domain (without the domain name). Set to blank to disable the everyone role for the domain. Optional - default value: Everyone
      defaultProfileItemId: The ID of the default Profile item for the domain. This property is typically used when using external security providers where 
        the users in the domain do not automatically have a Profile associated with them (such as when using the Active Directory security provider). Optional в_" default value: (blank)
      
    To specify a specific template to use when initializing the domain, use the sc:template attribute. If not specified, 
    the default (unnamed) template is used.
  -->
      <domain name="sitecore" ensureAnonymousUser="false" />
      <domain name="extranet" />
      <domain name="default" isDefault="true" />
      <!-- 
      Domain templates
      Use sc:templateName to name a specific template (and sc:template to reference it).
      Note that currently, default properties must be written as elements (rather than attributes).
    -->
      <sc:templates>
        <domain type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <ensureAnonymousUser>true</ensureAnonymousUser>
          <locallyManaged>false</locallyManaged>
        </domain>
      </sc:templates>
    </domains>
    <!-- CONFIG STORES -->
    <configStores>
      <add name="domains" type="Sitecore.TestKit.Configuration.FakeXmlConfigStore, Sitecore.TestKit" factoryMethod="LoadFromXml" arg0="domains" />
      <add name="globalRoles" type="Sitecore.TestKit.Configuration.FakeXmlConfigStore, Sitecore.TestKit" factoryMethod="LoadFromXml" arg0="roles" />
    </configStores>
    <!-- CLIENT DATASTORE -->
    <clientDataStore type="Sitecore.TestKit.Configuration.$(database)ClientDataStore, Sitecore.TestKit">
      <param connectionStringName="core" />
    </clientDataStore>
    <!-- DOMAINS -->
    <domainManager defaultProvider="file">
      <providers>
        <clear />
        <add name="file" type="Sitecore.Security.Domains.ConfigStoreDomainProvider, Sitecore.Kernel" configStoreName="domains" />
        <add name="config" type="Sitecore.SecurityModel.ConfigDomainProvider, Sitecore.Kernel" domainList="domainManager/domains" defaultDomain="sitecore" />
      </providers>
      <!-- Sample for use with config provider above -->
      <domains>
        <domain id="sitecore" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>false</ensureAnonymousUser>
        </domain>
        <domain id="extranet" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>true</ensureAnonymousUser>
        </domain>
        <domain id="default" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>true</ensureAnonymousUser>
          <isDefault>true</isDefault>
        </domain>
      </domains>
    </domainManager>
    <itemManager defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.Data.Managers.ItemProvider, Sitecore.Kernel" />
      </providers>
    </itemManager>
    <!-- AUTHORIZATION -->
    <authorization defaultProvider="memory">
      <providers>
        <clear />
        <add name="memory" type="Sitecore.TestKit.Security.AccessControl.$(database)AuthorizationProvider, Sitecore.TestKit" connectionStringName="core" embedAclInItems="true" />
      </providers>
    </authorization>
    <!-- STANDARD VALUES -->
    <standardValues defaultProvider="sitecore">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Data.StandardValuesProvider, Sitecore.Kernel" />
      </providers>
    </standardValues>
    <!-- 
      ACCESS RIGHTS 
      Example of a <rights> element using a custom type (which must derive from AccessRight):
      <add name="my:access" comment="Custom right." title="Custom" type="My.Security.MyAccessRight, My.Assembly"/> 
      
      Example of a <rules> element using a custom type (which must derive from AcessRightRule):
      <add prefix="my:" typeName="My.MyEntity" type="My.MyAcessRightRule, My.Assembly"/>
      -->
    <accessRights defaultProvider="config">
      <providers>
        <clear />
        <add name="config" type="Sitecore.Security.AccessControl.ConfigAccessRightProvider, Sitecore.Kernel" configRoot="accessRights" />
      </providers>
      <rights defaultType="Sitecore.Security.AccessControl.AccessRight, Sitecore.Kernel">
        <add name="field:read" comment="Read right for fields." title="Field Read" />
        <add name="field:write" comment="Write right for fields." title="Field Write" modifiesData="true" />
        <add name="item:read" comment="Read right for items." title="Read" />
        <add name="item:write" comment="Write right for items." title="Write" modifiesData="true" />
        <add name="item:rename" comment="Rename right for items." title="Rename" modifiesData="true" />
        <add name="item:create" comment="Create right for items." title="Create" modifiesData="true" />
        <add name="item:delete" comment="Delete right for items." title="Delete" modifiesData="true" />
        <add name="item:admin" comment="Admin right for items." title="Administer" modifiesData="true" />
        <add name="language:read" comment="Read right for languages." title="Language Read" />
        <add name="language:write" comment="Write right for languages." title="Language Write" modifiesData="true" />
        <add name="site:enter" comment="The right to enter a site." title="Site Enter" />
        <add name="insert:show" comment="Determines if the user can see the insert option" title="Show in Insert" />
        <add name="workflowState:delete" comment="The right to delete an item based on its workflow state." title="Workflow State Delete" />
        <add name="workflowState:write" comment="The right to write an item based on its workflow state." title="Workflow State Write" modifiesData="true" />
        <add name="workflowCommand:execute" comment="The right to execute a workflow command." title="Workflow Command Execute" />
        <add name="*" comment="Wildcard right. For internal use only." />
      </rights>
      <rules>
        <add prefix="field:" ancestor="{3C1715FE-6A13-4FCF-845F-DE308BA9741D}" comment="/sitecore/templates" />
        <add prefix="insert:" templateId="{35E75C72-4985-4E09-88C3-0EAC6CD1E64F}" comment="insert:show for Branch template" />
        <add prefix="insert:" templateId="{B2613CC1-A748-46A3-A0DB-3774574BD339}" comment="insert:show for Command template" />
        <add prefix="insert:" templateId="{AB86861A-6030-46C5-B394-E8F99E8B87DB}" comment="insert:show for Template template" />
        <add prefix="item:" typeName="Sitecore.Data.Items.Item" />
        <add prefix="language:" ancestor="{64C4F646-A3FA-4205-B98E-4DE2C609B60F}" comment="/sitecore/system/language" />
        <add prefix="workflowState:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows" />
        <add prefix="workflowCommand:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows" />
      </rules>
    </accessRights>
    <authentication defaultProvider="forms">
      <providers>
        <clear />
        <add name="forms" type="Sitecore.Commerce.StarterKit.Tests.Services.FakeAuthenticationProvider, Sitecore.Commerce.StarterKit.Tests" />
      </providers>
    </authentication>
    <settings>
      <setting name="Analytics.Enabled" value="true" />
      <setting name="DataFolder" value="$(dataFolder)" />
    </settings>
    <analyticsManager defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.TestKit.Analytics.AnalyticsProvider, Sitecore.TestKit" />
      </providers>
    </analyticsManager>
    <siteManager defaultProvider="config">
      <providers>
        <clear />
        <add name="config" type="Sitecore.Sites.ConfigSiteProvider, Sitecore.Kernel" siteList="sites" checkSecurity="false" />
      </providers>
    </siteManager>
    <sites>
      <site name="shell" virtualFolder="/sitecore/shell" physicalFolder="/sitecore/shell" rootPath="/sitecore/content" startItem="/home" language="en" database="core" domain="sitecore" loginPage="/sitecore/login" content="master" contentStartItem="/Home" enableWorkflow="true" enableAnalytics="false" xmlControlPage="/sitecore/shell/default.aspx" browserTitle="Sitecore" htmlCacheSize="2MB" registryCacheSize="3MB" viewStateCacheSize="200KB" xslCacheSize="5MB" />
      <site name="website" virtualFolder="/" physicalFolder="/" rootPath="/sitecore/content" startItem="/home" database="master" domain="extranet" allowDebug="true" cacheHtml="true" htmlCacheSize="10MB" registryCacheSize="0" viewStateCacheSize="0" xslCacheSize="5MB" filteredItemsCacheSize="2MB" enablePreview="true" enableWebEdit="true" enableDebugger="true" disableClientData="false" />
    </sites>
    <!-- Commerce -->
    <paths>
      <products>/sitecore/content/Product Repository</products>
    </paths>
    <commerceContext type="Sitecore.Commerce.StarterKit.Tests.CommerceContextTest, Sitecore.Commerce.StarterKit.Tests" />
  </sitecore>
  <system.web>
    <profile defaultProvider="memory" enabled="true" inherits="Sitecore.TestKit.Security.UserProfile, Sitecore.TestKit">
      <providers>
        <clear />
        <add name="memory" type="Sitecore.TestKit.Security.Memory.Profile.MemoryProfileProvider, Sitecore.TestKit" connectionStringName="core" applicationName="sitecore" />
      </providers>
    </profile>
    <httpHandlers>
      <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="True" />
    </httpHandlers>
  </system.web>
  <log4net />
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.5.0.0" newVersion="5.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
