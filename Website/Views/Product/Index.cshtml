@*//-----------------------------------------------------------------------
    // Copyright 2016 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@
@using System.Globalization
@using System.Web.Optimization
@using Sitecore.Commerce.Entities.Inventory
@using Sitecore.Commerce.StarterKit
@using Sitecore.Mvc

@model Sitecore.Commerce.StarterKit.Models.ProductModel

@Scripts.Render("~/bundles/obec/product")

<div id="S05-ProductPresentation" class="row">
    <div class="col-md-6 col-sm-12">

        @* productimages *@
        <div id="C08-ProductImages" class="product-image-container">
            <div class="prod-img">
                @if (Model.Images.Count > 0)
                {
                    <img src="@Model.Images[0]" class="img-responsive" alt="a" id="prod-large-view"/>
                }
            </div>
            <div class="thumbnails">
                <ul>
                    @foreach (var mediaItem in Model.Images)
                    {
                        <li><a href="@(mediaItem)?w=770&h=625"><img src="@(mediaItem)?w=80&h=60" class="img-responsive" alt="a"/></a></li>
                    }
                </ul>
            </div>
        </div>
        @* /productimages *@

    </div>
    <div class="col-md-6 col-xs-12">
        <div class="prod-info">
            <div class="row">
                <div class="col-md-6 hidden-sm hidden-xs">
                    @Html.Sitecore().Placeholder("productrating")
                </div>
                <div class="col-md-6 col-xs-12">
                    @Html.Sitecore().Placeholder("socialconnector")
                </div>

                @*   productinformation   *@
                <div id="C11-ProductInformation">
                    <div class="col-md-12 col-xs-12">
                        <h1>@Model.Name</h1>
                    </div>
                    <div class="col-md-12 col-xs-12">
                        @if (Model.Status != null && Equals(Model.Status, StockStatus.OutOfStock))
                        {
                            <p>Availability Date: @Model.FormattedAvailabilityDate </p>
                        }

                        @if (Model.Status != null && (Equals(Model.Status, StockStatus.PreOrderable) || Equals(Model.Status, StockStatus.BackOrderable)))
                        {
                            <p>In Stock Date: @Model.FormattedInStockDate</p>
                            <p>@Texts.Quantity @Model.FormattedRemainingQuantity </p>
                        }
                    </div>
                    <div class="col-md-12 col-xs-12">
                        <div class="description">
                          <p>@Model.FormattedShortDescription
                          </p>
                          <p>
                            @Html.Raw(Model.FullDescription)
                          </p>
                          <p>
                            Categories: @Model.Categories
                          </p>
                          <p>
                            Status: @Model.StatusName
                          </p>
                        </div>
                    </div>
                    <div class="col-md-12 col-xs-12">
                        <div class="features">
                            @*
    @Model.RenderField("Features")
                            *@
                        </div>
                    </div>
                    @if (false) //TODO: make IsOnSale, PriceBefore and SavingsPercentage field in the model and put it here
                    {
                        /*<div class="col-md-12 col-xs-12"><h3 class="price-now">@Html.DisplayFor(model => Model.Price) <span class="savings">@Html.Sitecore().Field("Save procent lead", Model.Rendering.RenderingItem) @Model.SavingsPercentage%</span></h3></div>
            <div class="col-md-12 col-xs-12"><h4 class="price-before">@Html.DisplayFor(model => Model.ListPrice)</h4></div>
             */
                    }
                    else
                    {
                        <div class="col-md-12 col-xs-12">
                            <h3 class="price-now">@(Model.Price > 0 ? Model.Price.ToString("c", new CultureInfo("en-US")) : "-")</h3>
                        </div>
                    }
                    <div class="col-md-6 col-sm-6 col-xs-12">

                        @* //TODO: Product Variants
          if (Model.Variants != null && Model.Variants.Count > 0)
        {
          var colors = Model.Variants.Where(variant => !string.IsNullOrWhiteSpace(variant.ProductColor)).Distinct(new VariantPropertiesEqualityComparer(VariantPropertiesComparisonProperty.ProductColor));
          if (colors.Any())
          {
            <div class="color">
              <label for="variantColour">@Html.Sitecore().Field("Color", Model.Rendering.RenderingItem)</label>
              <select class="form-control" name="Variant_Color" id="variantColour" onchange="VariantSelectionChanged()">
                @foreach (var color in colors)
                {
                  <option value="@color.ProductColor">@color.ProductColor</option>
                }
              </select>
            </div>
          }
        }
            *@
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @* //TODO: Product Variants
        @if (Model.Variants != null && Model.Variants.Count > 0)
        {
          var sizes = Model.Variants.Where(variant => !string.IsNullOrWhiteSpace(variant.Size)).Distinct(new VariantPropertiesEqualityComparer(VariantPropertiesComparisonProperty.Size));

          if (sizes.Any() && sizes.All(s => !string.IsNullOrEmpty(s.Size)))
          {
            <div class="size">
              <label for="variantSize">@Html.Sitecore().Field("Size", Model.Rendering.RenderingItem)</label>
              <select class="form-control" name="Variant_Size" id="variantSize" onchange=" VariantSelectionChanged() ">
                @foreach (var size in sizes)
                {
                  <option value="@size.Size">@size.Size</option>
                }

              </select>
            </div>
          }
        }
            *@
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="prod-variants-close"></div>
                    </div>
                </div>

                @*  /productinformation   *@

                <div class="col-md-12 col-sm-12 col-xs-12">
                    @* addtocart *@
                    <div id="C12-AddToCart" class="add-to-basket">
                        <form action="" id="AddToCartForm" method="POST" onsubmit="return false">
                            <div class="control-group">
                                <label class="control-label" for="Quantity">Quantity</label>
                                <div class="controls" id="quantity">
                                    <input value="1" class="form-control form-control-quantity" id="Quantity" name="Quantity" type="number" min="1" max="100" placeholder="1" />
                                </div>
                            </div>

                            @if (Model.Status != null && Equals(Model.Status, StockStatus.OutOfStock))
                            {
                                <button class="btn disabled">BUY</button>
                                if (Sitecore.Context.User.IsAuthenticated && Sitecore.Commerce.Automation.MarketingAutomation.CommerceAutomationHelper.EngagementPlansEnabled)
                                {
                                    <button class="btn btn-success" onclick="product.signUpForBackInStockNotification('@Model.ExternalID')">Sign Up For Back In Stock Notification</button>
                                }
                            }
                            else
                            {
                                <div class="btn-group" role="group">
                                    <button class="btn btn-success" onclick="product.addProductToCart('@Model.ExternalID')">Add to cart</button>
                                    <button class="btn btn-default" onclick="product.addProductToWishlist('@Model.ExternalID')">Add to wishlist</button>
                                </div>
                            }
                        </form>
                    </div>
                    @* /addtocart *@
                </div>
                <div class="col-md-4 col-sm-4 hidden-xs">
                    @Html.Sitecore().Placeholder("shareandprint")
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="prod-closing"></div>
    </div>
</div>

